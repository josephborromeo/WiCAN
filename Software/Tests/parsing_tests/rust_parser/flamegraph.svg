<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="758" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="741.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="741.00"> </text><svg id="frames" x="10" width="1180" total_samples="611834"><g><title>rust_parser.exe`alloc::string::impl$38::deref (80 samples, 0.01%)</title><rect x="0.0941%" y="437" width="0.0131%" height="15" fill="rgb(227,0,7)" fg:x="576" fg:w="80"/><text x="0.3441%" y="447.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (71 samples, 0.01%)</title><rect x="0.0956%" y="421" width="0.0116%" height="15" fill="rgb(217,0,24)" fg:x="585" fg:w="71"/><text x="0.3456%" y="431.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (66 samples, 0.01%)</title><rect x="0.0964%" y="405" width="0.0108%" height="15" fill="rgb(221,193,54)" fg:x="590" fg:w="66"/><text x="0.3464%" y="415.50"></text></g><g><title>`0x7FF87490D0F2 (140 samples, 0.02%)</title><rect x="0.3695%" y="261" width="0.0229%" height="15" fill="rgb(248,212,6)" fg:x="2261" fg:w="140"/><text x="0.6195%" y="271.50"></text></g><g><title>`0x7FF87490D19A (148 samples, 0.02%)</title><rect x="0.4042%" y="261" width="0.0242%" height="15" fill="rgb(208,68,35)" fg:x="2473" fg:w="148"/><text x="0.6542%" y="271.50"></text></g><g><title>`0x7FF87490D1D7 (113 samples, 0.02%)</title><rect x="0.4380%" y="261" width="0.0185%" height="15" fill="rgb(232,128,0)" fg:x="2680" fg:w="113"/><text x="0.6880%" y="271.50"></text></g><g><title>`0x7FF8749117B3 (84 samples, 0.01%)</title><rect x="0.4632%" y="245" width="0.0137%" height="15" fill="rgb(207,160,47)" fg:x="2834" fg:w="84"/><text x="0.7132%" y="255.50"></text></g><g><title>`0x7FF87490D2D3 (88 samples, 0.01%)</title><rect x="0.4627%" y="261" width="0.0144%" height="15" fill="rgb(228,23,34)" fg:x="2831" fg:w="88"/><text x="0.7127%" y="271.50"></text></g><g><title>`0x7FF87490C7AA (867 samples, 0.14%)</title><rect x="0.3355%" y="277" width="0.1417%" height="15" fill="rgb(218,30,26)" fg:x="2053" fg:w="867"/><text x="0.5855%" y="287.50"></text></g><g><title>rust_parser.exe`alloc::alloc::alloc (1,232 samples, 0.20%)</title><rect x="0.2970%" y="293" width="0.2014%" height="15" fill="rgb(220,122,19)" fg:x="1817" fg:w="1232"/><text x="0.5470%" y="303.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::as_ptr(core::ptr::non_null::NonNull (95 samples, 0.02%)</title><rect x="0.4998%" y="277" width="0.0155%" height="15" fill="rgb(250,228,42)" fg:x="3058" fg:w="95"/><text x="0.7498%" y="287.50"></text></g><g><title>rust_parser.exe`core::ptr::mut_ptr::impl$0::cast (84 samples, 0.01%)</title><rect x="0.5016%" y="261" width="0.0137%" height="15" fill="rgb(240,193,28)" fg:x="3069" fg:w="84"/><text x="0.7516%" y="271.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;::slice_from_raw_parts(core::ptr::non_null::NonNull (106 samples, 0.02%)</title><rect x="0.4992%" y="293" width="0.0173%" height="15" fill="rgb(216,20,37)" fg:x="3054" fg:w="106"/><text x="0.7492%" y="303.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::new (109 samples, 0.02%)</title><rect x="0.5165%" y="293" width="0.0178%" height="15" fill="rgb(206,188,39)" fg:x="3160" fg:w="109"/><text x="0.7665%" y="303.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::allocate (1,808 samples, 0.30%)</title><rect x="0.2417%" y="325" width="0.2955%" height="15" fill="rgb(217,207,13)" fg:x="1479" fg:w="1808"/><text x="0.4917%" y="335.50"></text></g><g><title>rust_parser.exe`alloc::alloc::Global::alloc_impl (1,691 samples, 0.28%)</title><rect x="0.2609%" y="309" width="0.2764%" height="15" fill="rgb(231,73,38)" fg:x="1596" fg:w="1691"/><text x="0.5109%" y="319.50"></text></g><g><title>rust_parser.exe`core::alloc::layout::impl$0::array::inner (780 samples, 0.13%)</title><rect x="0.5418%" y="309" width="0.1275%" height="15" fill="rgb(225,20,46)" fg:x="3315" fg:w="780"/><text x="0.7918%" y="319.50"></text></g><g><title>rust_parser.exe`core::alloc::layout::Layout::array (814 samples, 0.13%)</title><rect x="0.5379%" y="325" width="0.1330%" height="15" fill="rgb(210,31,41)" fg:x="3291" fg:w="814"/><text x="0.7879%" y="335.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3,203 samples, 0.52%)</title><rect x="0.1580%" y="373" width="0.5235%" height="15" fill="rgb(221,200,47)" fg:x="967" fg:w="3203"/><text x="0.4080%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3,158 samples, 0.52%)</title><rect x="0.1654%" y="357" width="0.5162%" height="15" fill="rgb(226,26,5)" fg:x="1012" fg:w="3158"/><text x="0.4154%" y="367.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::allocate_in&lt;u8,alloc::alloc::Global&gt; (3,143 samples, 0.51%)</title><rect x="0.1679%" y="341" width="0.5137%" height="15" fill="rgb(249,33,26)" fg:x="1027" fg:w="3143"/><text x="0.4179%" y="351.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;::cast(core::ptr::non_null::NonNull&lt;slice2$ (65 samples, 0.01%)</title><rect x="0.6709%" y="325" width="0.0106%" height="15" fill="rgb(235,183,28)" fg:x="4105" fg:w="65"/><text x="0.9209%" y="335.50"></text></g><g><title>rust_parser.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (3,481 samples, 0.57%)</title><rect x="0.1342%" y="405" width="0.5689%" height="15" fill="rgb(221,5,38)" fg:x="821" fg:w="3481"/><text x="0.3842%" y="415.50"></text></g><g><title>rust_parser.exe`alloc::slice::hack::impl$1::to_vec&lt;u8,alloc::alloc::Global&gt;(ref$&lt;slice2$ (3,471 samples, 0.57%)</title><rect x="0.1358%" y="389" width="0.5673%" height="15" fill="rgb(247,18,42)" fg:x="831" fg:w="3471"/><text x="0.3858%" y="399.50"></text></g><g><title>rust_parser.exe`core::slice::impl$0::as_ptr(ref$&lt;slice2$ (132 samples, 0.02%)</title><rect x="0.6816%" y="373" width="0.0216%" height="15" fill="rgb(241,131,45)" fg:x="4170" fg:w="132"/><text x="0.9316%" y="383.50"></text></g><g><title>rust_parser.exe`core::intrinsics::copy_nonoverlapping (85 samples, 0.01%)</title><rect x="0.6892%" y="357" width="0.0139%" height="15" fill="rgb(249,31,29)" fg:x="4217" fg:w="85"/><text x="0.9392%" y="367.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$10::clone&lt;u8,alloc::alloc::Global&gt;(alloc::vec::Vec (3,754 samples, 0.61%)</title><rect x="0.1095%" y="437" width="0.6136%" height="15" fill="rgb(225,111,53)" fg:x="670" fg:w="3754"/><text x="0.3595%" y="447.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (3,608 samples, 0.59%)</title><rect x="0.1334%" y="421" width="0.5897%" height="15" fill="rgb(238,160,17)" fg:x="816" fg:w="3608"/><text x="0.3834%" y="431.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (122 samples, 0.02%)</title><rect x="0.7031%" y="405" width="0.0199%" height="15" fill="rgb(214,148,48)" fg:x="4302" fg:w="122"/><text x="0.9531%" y="415.50"></text></g><g><title>rust_parser.exe`core::ptr::slice_from_raw_parts (112 samples, 0.02%)</title><rect x="0.7048%" y="389" width="0.0183%" height="15" fill="rgb(232,36,49)" fg:x="4312" fg:w="112"/><text x="0.9548%" y="399.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::cast (112 samples, 0.02%)</title><rect x="0.7048%" y="373" width="0.0183%" height="15" fill="rgb(209,103,24)" fg:x="4312" fg:w="112"/><text x="0.9548%" y="383.50"></text></g><g><title>`0x7FF87490C627 (66 samples, 0.01%)</title><rect x="0.9166%" y="261" width="0.0108%" height="15" fill="rgb(229,88,8)" fg:x="5608" fg:w="66"/><text x="1.1666%" y="271.50"></text></g><g><title>`0x7FF87490D0F2 (82 samples, 0.01%)</title><rect x="0.9758%" y="245" width="0.0134%" height="15" fill="rgb(213,181,19)" fg:x="5970" fg:w="82"/><text x="1.2258%" y="255.50"></text></g><g><title>`0x7FF87490D19A (71 samples, 0.01%)</title><rect x="0.9960%" y="245" width="0.0116%" height="15" fill="rgb(254,191,54)" fg:x="6094" fg:w="71"/><text x="1.2460%" y="255.50"></text></g><g><title>`0x7FF87490C7AA (512 samples, 0.08%)</title><rect x="0.9463%" y="261" width="0.0837%" height="15" fill="rgb(241,83,37)" fg:x="5790" fg:w="512"/><text x="1.1963%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::alloc::alloc (885 samples, 0.14%)</title><rect x="0.9045%" y="277" width="0.1446%" height="15" fill="rgb(233,36,39)" fg:x="5534" fg:w="885"/><text x="1.1545%" y="287.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::allocate (1,173 samples, 0.19%)</title><rect x="0.8797%" y="309" width="0.1917%" height="15" fill="rgb(226,3,54)" fg:x="5382" fg:w="1173"/><text x="1.1297%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::alloc::Global::alloc_impl (1,122 samples, 0.18%)</title><rect x="0.8880%" y="293" width="0.1834%" height="15" fill="rgb(245,192,40)" fg:x="5433" fg:w="1122"/><text x="1.1380%" y="303.50"></text></g><g><title>rust_parser.exe`core::alloc::layout::impl$0::array::inner (342 samples, 0.06%)</title><rect x="1.0738%" y="293" width="0.0559%" height="15" fill="rgb(238,167,29)" fg:x="6570" fg:w="342"/><text x="1.3238%" y="303.50"></text></g><g><title>rust_parser.exe`core::alloc::layout::Layout::array (360 samples, 0.06%)</title><rect x="1.0714%" y="309" width="0.0588%" height="15" fill="rgb(232,182,51)" fg:x="6555" fg:w="360"/><text x="1.3214%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity (1,927 samples, 0.31%)</title><rect x="0.8223%" y="373" width="0.3150%" height="15" fill="rgb(231,60,39)" fg:x="5031" fg:w="1927"/><text x="1.0723%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1,927 samples, 0.31%)</title><rect x="0.8223%" y="357" width="0.3150%" height="15" fill="rgb(208,69,12)" fg:x="5031" fg:w="1927"/><text x="1.0723%" y="367.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1,907 samples, 0.31%)</title><rect x="0.8256%" y="341" width="0.3117%" height="15" fill="rgb(235,93,37)" fg:x="5051" fg:w="1907"/><text x="1.0756%" y="351.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::allocate_in&lt;u8,alloc::alloc::Global&gt; (1,898 samples, 0.31%)</title><rect x="0.8270%" y="325" width="0.3102%" height="15" fill="rgb(213,116,39)" fg:x="5060" fg:w="1898"/><text x="1.0770%" y="335.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (142 samples, 0.02%)</title><rect x="1.2211%" y="341" width="0.0232%" height="15" fill="rgb(222,207,29)" fg:x="7471" fg:w="142"/><text x="1.4711%" y="351.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (111 samples, 0.02%)</title><rect x="1.2261%" y="325" width="0.0181%" height="15" fill="rgb(206,96,30)" fg:x="7502" fg:w="111"/><text x="1.4761%" y="335.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::find::check (232 samples, 0.04%)</title><rect x="1.3139%" y="277" width="0.0379%" height="15" fill="rgb(218,138,4)" fg:x="8039" fg:w="232"/><text x="1.5639%" y="287.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::find::check::closure$0&lt;ref$&lt;str$&gt;,ref_mut$&lt;core::str::IsNotEmpty&gt; &gt;(core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;ref$&lt;str$&gt;,ref_mut$&lt;core::str::IsNotEmpty&gt; &gt;*, tuple$&lt;&gt;, ref$ (1,070 samples, 0.17%)</title><rect x="1.5486%" y="261" width="0.1749%" height="15" fill="rgb(250,191,14)" fg:x="9475" fg:w="1070"/><text x="1.7986%" y="271.50"></text></g><g><title>rust_parser.exe`core::ops::function::impls::impl$3::call_mut&lt;tuple$&lt;ref$&lt;ref$&lt;str$&gt; &gt; &gt;,core::str::IsNotEmpty&gt;(core::str::IsNotEmpty**, ref$ (694 samples, 0.11%)</title><rect x="1.6101%" y="245" width="0.1134%" height="15" fill="rgb(239,60,40)" fg:x="9851" fg:w="694"/><text x="1.8601%" y="255.50"></text></g><g><title>rust_parser.exe`core::str::impl$24::call_mut(core::str::IsNotEmpty*, ref$ (598 samples, 0.10%)</title><rect x="1.6258%" y="229" width="0.0977%" height="15" fill="rgb(206,27,48)" fg:x="9947" fg:w="598"/><text x="1.8758%" y="239.50"></text></g><g><title>rust_parser.exe`core::str::impl$23::call(core::str::IsNotEmpty*, ref$ (400 samples, 0.07%)</title><rect x="1.6581%" y="213" width="0.0654%" height="15" fill="rgb(225,35,8)" fg:x="10145" fg:w="400"/><text x="1.9081%" y="223.50"></text></g><g><title>rust_parser.exe`core::ops::control_flow::impl$0::branch&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;(enum2$&lt;core::ops::control_flow::ControlFlow&lt;ref$&lt;str$&gt;,tuple$ (211 samples, 0.03%)</title><rect x="1.7235%" y="261" width="0.0345%" height="15" fill="rgb(250,213,24)" fg:x="10545" fg:w="211"/><text x="1.9735%" y="271.50"></text></g><g><title>rust_parser.exe`core::ops::control_flow::impl$1::from_residual&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt;(enum2$&lt;core::ops::control_flow::ControlFlow&lt;ref$&lt;str$&gt;,enum2$ (244 samples, 0.04%)</title><rect x="1.7601%" y="261" width="0.0399%" height="15" fill="rgb(247,123,22)" fg:x="10769" fg:w="244"/><text x="2.0101%" y="271.50"></text></g><g><title>rust_parser.exe`core::str::impl$0::get_unchecked(ref$&lt;str$&gt;, core::ops::range::Range (345 samples, 0.06%)</title><rect x="1.9051%" y="229" width="0.0564%" height="15" fill="rgb(231,138,38)" fg:x="11656" fg:w="345"/><text x="2.1551%" y="239.50"></text></g><g><title>rust_parser.exe`core::str::traits::impl$7::get_unchecked(core::ops::range::Range&lt;usize&gt;, ptr_const$ (345 samples, 0.06%)</title><rect x="1.9051%" y="213" width="0.0564%" height="15" fill="rgb(231,145,46)" fg:x="11656" fg:w="345"/><text x="2.1551%" y="223.50"></text></g><g><title>rust_parser.exe`core::ptr::slice_from_raw_parts (241 samples, 0.04%)</title><rect x="1.9221%" y="197" width="0.0394%" height="15" fill="rgb(251,118,11)" fg:x="11760" fg:w="241"/><text x="2.1721%" y="207.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::cast (241 samples, 0.04%)</title><rect x="1.9221%" y="181" width="0.0394%" height="15" fill="rgb(217,147,25)" fg:x="11760" fg:w="241"/><text x="2.1721%" y="191.50"></text></g><g><title>rust_parser.exe`core::str::impl$0::get_unchecked(ref$&lt;str$&gt;, core::ops::range::Range (67 samples, 0.01%)</title><rect x="1.9901%" y="213" width="0.0110%" height="15" fill="rgb(247,81,37)" fg:x="12176" fg:w="67"/><text x="2.2401%" y="223.50"></text></g><g><title>rust_parser.exe`core::str::traits::impl$7::get_unchecked(core::ops::range::Range&lt;usize&gt;, ptr_const$ (67 samples, 0.01%)</title><rect x="1.9901%" y="197" width="0.0110%" height="15" fill="rgb(209,12,38)" fg:x="12176" fg:w="67"/><text x="2.2401%" y="207.50"></text></g><g><title>rust_parser.exe`core::str::iter::SplitInternal&lt;core::str::IsWhitespace&gt;::get_end&lt;core::str::IsWhitespace&gt; (271 samples, 0.04%)</title><rect x="1.9615%" y="229" width="0.0443%" height="15" fill="rgb(227,1,9)" fg:x="12001" fg:w="271"/><text x="2.2115%" y="239.50"></text></g><g><title>rust_parser.exe`core::str::pattern::impl$23::haystack&lt;core::str::IsWhitespace&gt;(core::str::pattern::CharPredicateSearcher (144 samples, 0.02%)</title><rect x="2.0058%" y="229" width="0.0235%" height="15" fill="rgb(248,47,43)" fg:x="12272" fg:w="144"/><text x="2.2558%" y="239.50"></text></g><g><title>rust_parser.exe`core::str::pattern::impl$9::haystack(core::str::pattern::MultiCharEqSearcher (132 samples, 0.02%)</title><rect x="2.0077%" y="213" width="0.0216%" height="15" fill="rgb(221,10,30)" fg:x="12284" fg:w="132"/><text x="2.2577%" y="223.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$180::len(core::slice::iter::Iter (1,395 samples, 0.23%)</title><rect x="2.3915%" y="181" width="0.2280%" height="15" fill="rgb(210,229,1)" fg:x="14632" fg:w="1395"/><text x="2.6415%" y="191.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::sub_ptr(core::ptr::non_null::NonNull&lt;u8&gt;, core::ptr::non_null::NonNull (933 samples, 0.15%)</title><rect x="2.4670%" y="165" width="0.1525%" height="15" fill="rgb(222,148,37)" fg:x="15094" fg:w="933"/><text x="2.7170%" y="175.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::sub_ptr (813 samples, 0.13%)</title><rect x="2.4866%" y="149" width="0.1329%" height="15" fill="rgb(234,67,33)" fg:x="15214" fg:w="813"/><text x="2.7366%" y="159.50"></text></g><g><title>rust_parser.exe`core::mem::size_of (109 samples, 0.02%)</title><rect x="2.6017%" y="133" width="0.0178%" height="15" fill="rgb(247,98,35)" fg:x="15918" fg:w="109"/><text x="2.8517%" y="143.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$180::len(core::slice::iter::Iter (1,761 samples, 0.29%)</title><rect x="2.8536%" y="165" width="0.2878%" height="15" fill="rgb(247,138,52)" fg:x="17459" fg:w="1761"/><text x="3.1036%" y="175.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::sub_ptr(core::ptr::non_null::NonNull&lt;u8&gt;, core::ptr::non_null::NonNull (1,257 samples, 0.21%)</title><rect x="2.9359%" y="149" width="0.2054%" height="15" fill="rgb(213,79,30)" fg:x="17963" fg:w="1257"/><text x="3.1859%" y="159.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::sub_ptr (1,130 samples, 0.18%)</title><rect x="2.9567%" y="133" width="0.1847%" height="15" fill="rgb(246,177,23)" fg:x="18090" fg:w="1130"/><text x="3.2067%" y="143.50"></text></g><g><title>rust_parser.exe`core::option::impl$40::branch(enum2$&lt;core::option::Option&lt;ref$ (638 samples, 0.10%)</title><rect x="3.4900%" y="133" width="0.1043%" height="15" fill="rgb(230,62,27)" fg:x="21353" fg:w="638"/><text x="3.7400%" y="143.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;u8&gt;*, core::ptr::non_null::NonNull (304 samples, 0.05%)</title><rect x="3.7925%" y="117" width="0.0497%" height="15" fill="rgb(216,154,8)" fg:x="23204" fg:w="304"/><text x="4.0425%" y="127.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::add(core::ptr::non_null::NonNull (203 samples, 0.03%)</title><rect x="3.9056%" y="101" width="0.0332%" height="15" fill="rgb(244,35,45)" fg:x="23896" fg:w="203"/><text x="4.1556%" y="111.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::add (96 samples, 0.02%)</title><rect x="3.9231%" y="85" width="0.0157%" height="15" fill="rgb(251,115,12)" fg:x="24003" fg:w="96"/><text x="4.1731%" y="95.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$181::next&lt;u8&gt;(core::slice::iter::Iter (2,067 samples, 0.34%)</title><rect x="3.6013%" y="133" width="0.3378%" height="15" fill="rgb(240,54,50)" fg:x="22034" fg:w="2067"/><text x="3.8513%" y="143.50"></text></g><g><title>rust_parser.exe`core::slice::iter::Iter&lt;u8&gt;::post_inc_start (593 samples, 0.10%)</title><rect x="3.8422%" y="117" width="0.0969%" height="15" fill="rgb(233,84,52)" fg:x="23508" fg:w="593"/><text x="4.0922%" y="127.50"></text></g><g><title>rust_parser.exe`core::str::validations::next_code_point&lt;core::slice::iter::Iter&lt;u8&gt; &gt;(core::slice::iter::Iter (4,779 samples, 0.78%)</title><rect x="3.1618%" y="149" width="0.7811%" height="15" fill="rgb(207,117,47)" fg:x="19345" fg:w="4779"/><text x="3.4118%" y="159.50"></text></g><g><title>rust_parser.exe`core::str::iter::impl$5::next (8,631 samples, 1.41%)</title><rect x="2.6195%" y="181" width="1.4107%" height="15" fill="rgb(249,43,39)" fg:x="16027" fg:w="8631"/><text x="2.8695%" y="191.50"></text></g><g><title>rust_parser.exe`core::str::iter::impl$0::next (5,438 samples, 0.89%)</title><rect x="3.1414%" y="165" width="0.8888%" height="15" fill="rgb(209,38,44)" fg:x="19220" fg:w="5438"/><text x="3.3914%" y="175.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;u32&gt; &gt;::map(enum2$&lt;core::option::Option (534 samples, 0.09%)</title><rect x="3.9429%" y="149" width="0.0873%" height="15" fill="rgb(236,212,23)" fg:x="24124" fg:w="534"/><text x="4.1929%" y="159.50"></text></g><g><title>rust_parser.exe`core::str::iter::impl$0::next::closure$0 (220 samples, 0.04%)</title><rect x="3.9942%" y="133" width="0.0360%" height="15" fill="rgb(242,79,21)" fg:x="24438" fg:w="220"/><text x="4.2442%" y="143.50"></text></g><g><title>rust_parser.exe`core::char::methods::impl$0::from_u32_unchecked (220 samples, 0.04%)</title><rect x="3.9942%" y="117" width="0.0360%" height="15" fill="rgb(211,96,35)" fg:x="24438" fg:w="220"/><text x="4.2442%" y="127.50"></text></g><g><title>rust_parser.exe`core::char::convert::from_u32_unchecked (220 samples, 0.04%)</title><rect x="3.9942%" y="101" width="0.0360%" height="15" fill="rgb(253,215,40)" fg:x="24438" fg:w="220"/><text x="4.2442%" y="111.50"></text></g><g><title>rust_parser.exe`core::char::methods::impl$0::from_u32 (91 samples, 0.01%)</title><rect x="4.0153%" y="85" width="0.0149%" height="15" fill="rgb(211,81,21)" fg:x="24567" fg:w="91"/><text x="4.2653%" y="95.50"></text></g><g><title>rust_parser.exe`core::char::convert::from_u32 (91 samples, 0.01%)</title><rect x="4.0153%" y="69" width="0.0149%" height="15" fill="rgb(208,190,38)" fg:x="24567" fg:w="91"/><text x="4.2653%" y="79.50"></text></g><g><title>rust_parser.exe`core::char::convert::char_try_from_u32 (91 samples, 0.01%)</title><rect x="4.0153%" y="53" width="0.0149%" height="15" fill="rgb(235,213,38)" fg:x="24567" fg:w="91"/><text x="4.2653%" y="63.50"></text></g><g><title>rust_parser.exe`core::num::impl$8::wrapping_sub (91 samples, 0.01%)</title><rect x="4.0153%" y="37" width="0.0149%" height="15" fill="rgb(237,122,38)" fg:x="24567" fg:w="91"/><text x="4.2653%" y="47.50"></text></g><g><title>rust_parser.exe`core::str::iter::impl$36::next (19,051 samples, 3.11%)</title><rect x="1.2785%" y="325" width="3.1138%" height="15" fill="rgb(244,218,35)" fg:x="7822" fg:w="19051"/><text x="1.5285%" y="335.50">rus..</text></g><g><title>rust_parser.exe`core::iter::adapters::filter::impl$2::next(core::iter::adapters::filter::Filter&lt;core::str::iter::Split (18,908 samples, 3.09%)</title><rect x="1.3018%" y="309" width="3.0904%" height="15" fill="rgb(240,68,47)" fg:x="7965" fg:w="18908"/><text x="1.5518%" y="319.50">rus..</text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::find(core::str::iter::Split (18,886 samples, 3.09%)</title><rect x="1.3054%" y="293" width="3.0868%" height="15" fill="rgb(210,16,53)" fg:x="7987" fg:w="18886"/><text x="1.5554%" y="303.50">rus..</text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::try_fold&lt;core::str::iter::Split&lt;core::str::IsWhitespace&gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;ref$&lt;str$&gt;,ref_mut$&lt;core::str::IsNotEmpty&gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt; &gt; &gt;(core::str::iter::Split&lt;core::str::IsWhitespace&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;ref$&lt;str$&gt;,ref_mut$ (18,602 samples, 3.04%)</title><rect x="1.3518%" y="277" width="3.0404%" height="15" fill="rgb(235,124,12)" fg:x="8271" fg:w="18602"/><text x="1.6018%" y="287.50">rus..</text></g><g><title>rust_parser.exe`core::str::iter::impl$60::next&lt;core::str::IsWhitespace&gt;(core::str::iter::Split (15,860 samples, 2.59%)</title><rect x="1.8000%" y="261" width="2.5922%" height="15" fill="rgb(224,169,11)" fg:x="11013" fg:w="15860"/><text x="2.0500%" y="271.50">ru..</text></g><g><title>rust_parser.exe`core::str::iter::SplitInternal&lt;core::str::IsWhitespace&gt;::next&lt;core::str::IsWhitespace&gt; (15,775 samples, 2.58%)</title><rect x="1.8139%" y="245" width="2.5783%" height="15" fill="rgb(250,166,2)" fg:x="11098" fg:w="15775"/><text x="2.0639%" y="255.50">ru..</text></g><g><title>rust_parser.exe`core::str::pattern::impl$23::next_match&lt;core::str::IsWhitespace&gt;(core::str::pattern::CharPredicateSearcher (14,457 samples, 2.36%)</title><rect x="2.0293%" y="229" width="2.3629%" height="15" fill="rgb(242,216,29)" fg:x="12416" fg:w="14457"/><text x="2.2793%" y="239.50">ru..</text></g><g><title>rust_parser.exe`core::str::pattern::Searcher::next_match(core::str::pattern::MultiCharEqSearcher (14,325 samples, 2.34%)</title><rect x="2.0509%" y="213" width="2.3413%" height="15" fill="rgb(230,116,27)" fg:x="12548" fg:w="14325"/><text x="2.3009%" y="223.50">r..</text></g><g><title>rust_parser.exe`core::str::pattern::impl$9::next&lt;core::str::IsWhitespace&gt;(core::str::pattern::MultiCharEqSearcher (13,906 samples, 2.27%)</title><rect x="2.1194%" y="197" width="2.2728%" height="15" fill="rgb(228,99,48)" fg:x="12967" fg:w="13906"/><text x="2.3694%" y="207.50">r..</text></g><g><title>rust_parser.exe`core::str::pattern::impl$4::matches&lt;core::str::IsWhitespace&gt; (2,215 samples, 0.36%)</title><rect x="4.0302%" y="181" width="0.3620%" height="15" fill="rgb(253,11,6)" fg:x="24658" fg:w="2215"/><text x="4.2802%" y="191.50"></text></g><g><title>rust_parser.exe`core::str::impl$18::call_mut (1,870 samples, 0.31%)</title><rect x="4.0866%" y="165" width="0.3056%" height="15" fill="rgb(247,143,39)" fg:x="25003" fg:w="1870"/><text x="4.3366%" y="175.50"></text></g><g><title>rust_parser.exe`core::str::impl$17::call (1,066 samples, 0.17%)</title><rect x="4.2180%" y="149" width="0.1742%" height="15" fill="rgb(236,97,10)" fg:x="25807" fg:w="1066"/><text x="4.4680%" y="159.50"></text></g><g><title>rust_parser.exe`core::char::methods::impl$0::is_whitespace (439 samples, 0.07%)</title><rect x="4.3205%" y="133" width="0.0718%" height="15" fill="rgb(233,208,19)" fg:x="26434" fg:w="439"/><text x="4.5705%" y="143.50"></text></g><g><title>rust_parser.exe`core::char::methods::impl$0::to_digit (207 samples, 0.03%)</title><rect x="4.5543%" y="245" width="0.0338%" height="15" fill="rgb(216,164,2)" fg:x="27865" fg:w="207"/><text x="4.8043%" y="255.50"></text></g><g><title>rust_parser.exe`core::num::impl$8::wrapping_sub (99 samples, 0.02%)</title><rect x="4.5720%" y="229" width="0.0162%" height="15" fill="rgb(220,129,5)" fg:x="27973" fg:w="99"/><text x="4.8220%" y="239.50"></text></g><g><title>rust_parser.exe`core::ops::arith::impl$113::mul (72 samples, 0.01%)</title><rect x="4.5888%" y="245" width="0.0118%" height="15" fill="rgb(242,17,10)" fg:x="28076" fg:w="72"/><text x="4.8388%" y="255.50"></text></g><g><title>rust_parser.exe`core::num::impl$6::from_str_radix (649 samples, 0.11%)</title><rect x="4.5123%" y="277" width="0.1061%" height="15" fill="rgb(242,107,0)" fg:x="27608" fg:w="649"/><text x="4.7623%" y="287.50"></text></g><g><title>rust_parser.exe`core::num::from_str_radix&lt;u8&gt; (578 samples, 0.09%)</title><rect x="4.5239%" y="261" width="0.0945%" height="15" fill="rgb(251,28,31)" fg:x="27679" fg:w="578"/><text x="4.7739%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::vec::spec_extend::impl$0::spec_extend&lt;u8,core::iter::adapters::map::Map&lt;core::str::iter::SplitWhitespace,rust_parser::main::closure_env$0&gt;,alloc::alloc::Global&gt;(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map (21,495 samples, 3.51%)</title><rect x="1.1372%" y="373" width="3.5132%" height="15" fill="rgb(233,223,10)" fg:x="6958" fg:w="21495"/><text x="1.3872%" y="383.50">rus..</text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::extend_desugared&lt;u8,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::str::iter::SplitWhitespace,rust_parser::main::closure_env$0&gt; &gt;(core::iter::adapters::map::Map (21,480 samples, 3.51%)</title><rect x="1.1397%" y="357" width="3.5108%" height="15" fill="rgb(215,21,27)" fg:x="6973" fg:w="21480"/><text x="1.3897%" y="367.50">rus..</text></g><g><title>rust_parser.exe`core::iter::adapters::map::impl$2::next&lt;u8,core::str::iter::SplitWhitespace,rust_parser::main::closure_env$0&gt;(core::iter::adapters::map::Map (20,796 samples, 3.40%)</title><rect x="1.2515%" y="341" width="3.3990%" height="15" fill="rgb(232,23,21)" fg:x="7657" fg:w="20796"/><text x="1.5015%" y="351.50">rus..</text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;ref$ (1,580 samples, 0.26%)</title><rect x="4.3922%" y="325" width="0.2582%" height="15" fill="rgb(244,5,23)" fg:x="26873" fg:w="1580"/><text x="4.6422%" y="335.50"></text></g><g><title>rust_parser.exe`core::ops::function::impls::impl$4::call_once&lt;tuple$&lt;ref$&lt;str$&gt; &gt;,rust_parser::main::closure_env$0&gt;(rust_parser::main::closure_env$0*, ref$ (1,240 samples, 0.20%)</title><rect x="4.4478%" y="309" width="0.2027%" height="15" fill="rgb(226,81,46)" fg:x="27213" fg:w="1240"/><text x="4.6978%" y="319.50"></text></g><g><title>rust_parser.exe`rust_parser::main::closure$0(rust_parser::main::closure_env$0*, ref$ (1,063 samples, 0.17%)</title><rect x="4.4767%" y="293" width="0.1737%" height="15" fill="rgb(247,70,30)" fg:x="27390" fg:w="1063"/><text x="4.7267%" y="303.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::result::Result&lt;u8,core::num::error::ParseIntError&gt; &gt;::unwrap&lt;u8,core::num::error::ParseIntError&gt;(enum2$&lt;core::result::Result (196 samples, 0.03%)</title><rect x="4.6184%" y="277" width="0.0320%" height="15" fill="rgb(212,68,19)" fg:x="28257" fg:w="196"/><text x="4.8684%" y="287.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::find::check::closure$0&lt;ref$&lt;str$&gt;,ref_mut$&lt;core::str::IsNotEmpty&gt; &gt;(core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;ref$&lt;str$&gt;,ref_mut$&lt;core::str::IsNotEmpty&gt; &gt;*, tuple$&lt;&gt;, ref$ (222 samples, 0.04%)</title><rect x="4.7008%" y="293" width="0.0363%" height="15" fill="rgb(240,187,13)" fg:x="28761" fg:w="222"/><text x="4.9508%" y="303.50"></text></g><g><title>rust_parser.exe`core::ops::function::impls::impl$3::call_mut&lt;tuple$&lt;ref$&lt;ref$&lt;str$&gt; &gt; &gt;,core::str::IsNotEmpty&gt;(core::str::IsNotEmpty**, ref$ (143 samples, 0.02%)</title><rect x="4.7137%" y="277" width="0.0234%" height="15" fill="rgb(223,113,26)" fg:x="28840" fg:w="143"/><text x="4.9637%" y="287.50"></text></g><g><title>rust_parser.exe`core::str::impl$24::call_mut(core::str::IsNotEmpty*, ref$ (116 samples, 0.02%)</title><rect x="4.7181%" y="261" width="0.0190%" height="15" fill="rgb(206,192,2)" fg:x="28867" fg:w="116"/><text x="4.9681%" y="271.50"></text></g><g><title>rust_parser.exe`core::str::impl$23::call(core::str::IsNotEmpty*, ref$ (62 samples, 0.01%)</title><rect x="4.7269%" y="245" width="0.0101%" height="15" fill="rgb(241,108,4)" fg:x="28921" fg:w="62"/><text x="4.9769%" y="255.50"></text></g><g><title>rust_parser.exe`core::str::impl$0::get_unchecked(ref$&lt;str$&gt;, core::ops::range::Range (81 samples, 0.01%)</title><rect x="4.7804%" y="261" width="0.0132%" height="15" fill="rgb(247,173,49)" fg:x="29248" fg:w="81"/><text x="5.0304%" y="271.50"></text></g><g><title>rust_parser.exe`core::str::traits::impl$7::get_unchecked(core::ops::range::Range&lt;usize&gt;, ptr_const$ (81 samples, 0.01%)</title><rect x="4.7804%" y="245" width="0.0132%" height="15" fill="rgb(224,114,35)" fg:x="29248" fg:w="81"/><text x="5.0304%" y="255.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$180::len(core::slice::iter::Iter (226 samples, 0.04%)</title><rect x="4.8840%" y="213" width="0.0369%" height="15" fill="rgb(245,159,27)" fg:x="29882" fg:w="226"/><text x="5.1340%" y="223.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::sub_ptr(core::ptr::non_null::NonNull&lt;u8&gt;, core::ptr::non_null::NonNull (149 samples, 0.02%)</title><rect x="4.8966%" y="197" width="0.0244%" height="15" fill="rgb(245,172,44)" fg:x="29959" fg:w="149"/><text x="5.1466%" y="207.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::sub_ptr (133 samples, 0.02%)</title><rect x="4.8992%" y="181" width="0.0217%" height="15" fill="rgb(236,23,11)" fg:x="29975" fg:w="133"/><text x="5.1492%" y="191.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$180::len(core::slice::iter::Iter (294 samples, 0.05%)</title><rect x="4.9651%" y="197" width="0.0481%" height="15" fill="rgb(205,117,38)" fg:x="30378" fg:w="294"/><text x="5.2151%" y="207.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::sub_ptr(core::ptr::non_null::NonNull&lt;u8&gt;, core::ptr::non_null::NonNull (211 samples, 0.03%)</title><rect x="4.9786%" y="181" width="0.0345%" height="15" fill="rgb(237,72,25)" fg:x="30461" fg:w="211"/><text x="5.2286%" y="191.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::sub_ptr (192 samples, 0.03%)</title><rect x="4.9817%" y="165" width="0.0314%" height="15" fill="rgb(244,70,9)" fg:x="30480" fg:w="192"/><text x="5.2317%" y="175.50"></text></g><g><title>rust_parser.exe`core::option::impl$40::branch(enum2$&lt;core::option::Option&lt;ref$ (95 samples, 0.02%)</title><rect x="5.0656%" y="165" width="0.0155%" height="15" fill="rgb(217,125,39)" fg:x="30993" fg:w="95"/><text x="5.3156%" y="175.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$181::next&lt;u8&gt;(core::slice::iter::Iter (382 samples, 0.06%)</title><rect x="5.0811%" y="165" width="0.0624%" height="15" fill="rgb(235,36,10)" fg:x="31088" fg:w="382"/><text x="5.3311%" y="175.50"></text></g><g><title>rust_parser.exe`core::slice::iter::Iter&lt;u8&gt;::post_inc_start (164 samples, 0.03%)</title><rect x="5.1167%" y="149" width="0.0268%" height="15" fill="rgb(251,123,47)" fg:x="31306" fg:w="164"/><text x="5.3667%" y="159.50"></text></g><g><title>rust_parser.exe`core::str::validations::next_code_point&lt;core::slice::iter::Iter&lt;u8&gt; &gt;(core::slice::iter::Iter (797 samples, 0.13%)</title><rect x="5.0151%" y="181" width="0.1303%" height="15" fill="rgb(221,13,13)" fg:x="30684" fg:w="797"/><text x="5.2651%" y="191.50"></text></g><g><title>rust_parser.exe`core::str::iter::impl$5::next (1,481 samples, 0.24%)</title><rect x="4.9209%" y="213" width="0.2421%" height="15" fill="rgb(238,131,9)" fg:x="30108" fg:w="1481"/><text x="5.1709%" y="223.50"></text></g><g><title>rust_parser.exe`core::str::iter::impl$0::next (917 samples, 0.15%)</title><rect x="5.0131%" y="197" width="0.1499%" height="15" fill="rgb(211,50,8)" fg:x="30672" fg:w="917"/><text x="5.2631%" y="207.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;u32&gt; &gt;::map(enum2$&lt;core::option::Option (108 samples, 0.02%)</title><rect x="5.1453%" y="181" width="0.0177%" height="15" fill="rgb(245,182,24)" fg:x="31481" fg:w="108"/><text x="5.3953%" y="191.50"></text></g><g><title>rust_parser.exe`core::str::iter::impl$36::next (3,500 samples, 0.57%)</title><rect x="4.6570%" y="357" width="0.5721%" height="15" fill="rgb(242,14,37)" fg:x="28493" fg:w="3500"/><text x="4.9070%" y="367.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::filter::impl$2::next(core::iter::adapters::filter::Filter&lt;core::str::iter::Split (3,490 samples, 0.57%)</title><rect x="4.6586%" y="341" width="0.5704%" height="15" fill="rgb(246,228,12)" fg:x="28503" fg:w="3490"/><text x="4.9086%" y="351.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::find(core::str::iter::Split (3,483 samples, 0.57%)</title><rect x="4.6598%" y="325" width="0.5693%" height="15" fill="rgb(213,55,15)" fg:x="28510" fg:w="3483"/><text x="4.9098%" y="335.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::try_fold&lt;core::str::iter::Split&lt;core::str::IsWhitespace&gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;ref$&lt;str$&gt;,ref_mut$&lt;core::str::IsNotEmpty&gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;ref$&lt;str$&gt;,tuple$&lt;&gt; &gt; &gt; &gt;(core::str::iter::Split&lt;core::str::IsWhitespace&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;ref$&lt;str$&gt;,ref_mut$ (3,435 samples, 0.56%)</title><rect x="4.6676%" y="309" width="0.5614%" height="15" fill="rgb(209,9,3)" fg:x="28558" fg:w="3435"/><text x="4.9176%" y="319.50"></text></g><g><title>rust_parser.exe`core::str::iter::impl$60::next&lt;core::str::IsWhitespace&gt;(core::str::iter::Split (2,938 samples, 0.48%)</title><rect x="4.7488%" y="293" width="0.4802%" height="15" fill="rgb(230,59,30)" fg:x="29055" fg:w="2938"/><text x="4.9988%" y="303.50"></text></g><g><title>rust_parser.exe`core::str::iter::SplitInternal&lt;core::str::IsWhitespace&gt;::next&lt;core::str::IsWhitespace&gt; (2,848 samples, 0.47%)</title><rect x="4.7635%" y="277" width="0.4655%" height="15" fill="rgb(209,121,21)" fg:x="29145" fg:w="2848"/><text x="5.0135%" y="287.50"></text></g><g><title>rust_parser.exe`core::str::pattern::impl$23::next_match&lt;core::str::IsWhitespace&gt;(core::str::pattern::CharPredicateSearcher (2,645 samples, 0.43%)</title><rect x="4.7967%" y="261" width="0.4323%" height="15" fill="rgb(220,109,13)" fg:x="29348" fg:w="2645"/><text x="5.0467%" y="271.50"></text></g><g><title>rust_parser.exe`core::str::pattern::Searcher::next_match(core::str::pattern::MultiCharEqSearcher (2,542 samples, 0.42%)</title><rect x="4.8136%" y="245" width="0.4155%" height="15" fill="rgb(232,18,1)" fg:x="29451" fg:w="2542"/><text x="5.0636%" y="255.50"></text></g><g><title>rust_parser.exe`core::str::pattern::impl$9::next&lt;core::str::IsWhitespace&gt;(core::str::pattern::MultiCharEqSearcher (2,451 samples, 0.40%)</title><rect x="4.8284%" y="229" width="0.4006%" height="15" fill="rgb(215,41,42)" fg:x="29542" fg:w="2451"/><text x="5.0784%" y="239.50"></text></g><g><title>rust_parser.exe`core::str::pattern::impl$4::matches&lt;core::str::IsWhitespace&gt; (404 samples, 0.07%)</title><rect x="5.1630%" y="213" width="0.0660%" height="15" fill="rgb(224,123,36)" fg:x="31589" fg:w="404"/><text x="5.4130%" y="223.50"></text></g><g><title>rust_parser.exe`core::str::impl$18::call_mut (352 samples, 0.06%)</title><rect x="5.1715%" y="197" width="0.0575%" height="15" fill="rgb(240,125,3)" fg:x="31641" fg:w="352"/><text x="5.4215%" y="207.50"></text></g><g><title>rust_parser.exe`core::str::impl$17::call (184 samples, 0.03%)</title><rect x="5.1990%" y="181" width="0.0301%" height="15" fill="rgb(205,98,50)" fg:x="31809" fg:w="184"/><text x="5.4490%" y="191.50"></text></g><g><title>rust_parser.exe`core::char::methods::impl$0::is_whitespace (85 samples, 0.01%)</title><rect x="5.2151%" y="165" width="0.0139%" height="15" fill="rgb(205,185,37)" fg:x="31908" fg:w="85"/><text x="5.4651%" y="175.50"></text></g><g><title>rust_parser.exe`core::num::impl$6::from_str_radix (242 samples, 0.04%)</title><rect x="5.2571%" y="309" width="0.0396%" height="15" fill="rgb(238,207,15)" fg:x="32165" fg:w="242"/><text x="5.5071%" y="319.50"></text></g><g><title>rust_parser.exe`core::num::from_str_radix&lt;u8&gt; (203 samples, 0.03%)</title><rect x="5.2635%" y="293" width="0.0332%" height="15" fill="rgb(213,199,42)" fg:x="32204" fg:w="203"/><text x="5.5135%" y="303.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::map::impl$2::next&lt;u8,core::str::iter::SplitWhitespace,rust_parser::main::closure_env$0&gt;(core::iter::adapters::map::Map (4,097 samples, 0.67%)</title><rect x="4.6504%" y="373" width="0.6696%" height="15" fill="rgb(235,201,11)" fg:x="28453" fg:w="4097"/><text x="4.9004%" y="383.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;ref$ (557 samples, 0.09%)</title><rect x="5.2290%" y="357" width="0.0910%" height="15" fill="rgb(207,46,11)" fg:x="31993" fg:w="557"/><text x="5.4790%" y="367.50"></text></g><g><title>rust_parser.exe`core::ops::function::impls::impl$4::call_once&lt;tuple$&lt;ref$&lt;str$&gt; &gt;,rust_parser::main::closure_env$0&gt;(rust_parser::main::closure_env$0*, ref$ (488 samples, 0.08%)</title><rect x="5.2403%" y="341" width="0.0798%" height="15" fill="rgb(241,35,35)" fg:x="32062" fg:w="488"/><text x="5.4903%" y="351.50"></text></g><g><title>rust_parser.exe`rust_parser::main::closure$0(rust_parser::main::closure_env$0*, ref$ (446 samples, 0.07%)</title><rect x="5.2472%" y="325" width="0.0729%" height="15" fill="rgb(243,32,47)" fg:x="32104" fg:w="446"/><text x="5.4972%" y="335.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::result::Result&lt;u8,core::num::error::ParseIntError&gt; &gt;::unwrap&lt;u8,core::num::error::ParseIntError&gt;(enum2$&lt;core::result::Result (143 samples, 0.02%)</title><rect x="5.2967%" y="309" width="0.0234%" height="15" fill="rgb(247,202,23)" fg:x="32407" fg:w="143"/><text x="5.5467%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;u8,core::iter::adapters::map::Map&lt;core::str::iter::SplitWhitespace,rust_parser::main::closure_env$0&gt; &gt;(core::iter::adapters::map::Map (28,334 samples, 4.63%)</title><rect x="0.7690%" y="405" width="4.6310%" height="15" fill="rgb(219,102,11)" fg:x="4705" fg:w="28334"/><text x="1.0190%" y="415.50">rust_..</text></g><g><title>rust_parser.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter&lt;u8,core::iter::adapters::map::Map&lt;core::str::iter::SplitWhitespace,rust_parser::main::closure_env$0&gt; &gt;(core::iter::adapters::map::Map (28,273 samples, 4.62%)</title><rect x="0.7790%" y="389" width="4.6210%" height="15" fill="rgb(243,110,44)" fg:x="4766" fg:w="28273"/><text x="1.0290%" y="399.50">rust_..</text></g><g><title>rust_parser.exe`core::num::impl$11::saturating_add (440 samples, 0.07%)</title><rect x="5.3281%" y="373" width="0.0719%" height="15" fill="rgb(222,74,54)" fg:x="32599" fg:w="440"/><text x="5.5781%" y="383.50"></text></g><g><title>rust_parser.exe`core::cmp::Ord::max (391 samples, 0.06%)</title><rect x="5.3361%" y="357" width="0.0639%" height="15" fill="rgb(216,99,12)" fg:x="32648" fg:w="391"/><text x="5.5861%" y="367.50"></text></g><g><title>rust_parser.exe`core::cmp::max_by&lt;usize,core::cmp::Ordering (*)(ref$&lt;usize&gt;,ref$&lt;usize&gt;)&gt;(unsigned long long, unsigned long long, core::cmp::Ordering (*) (345 samples, 0.06%)</title><rect x="5.3436%" y="341" width="0.0564%" height="15" fill="rgb(226,22,26)" fg:x="32694" fg:w="345"/><text x="5.5936%" y="351.50"></text></g><g><title>rust_parser.exe`core::ops::function::FnOnce::call_once&lt;core::cmp::Ordering (*)(ref$&lt;usize&gt;,ref$&lt;usize&gt;),tuple$&lt;ref$&lt;usize&gt;,ref$&lt;usize&gt; &gt; &gt;(core::cmp::Ordering (*) (101 samples, 0.02%)</title><rect x="5.3835%" y="325" width="0.0165%" height="15" fill="rgb(217,163,10)" fg:x="32938" fg:w="101"/><text x="5.6335%" y="335.50"></text></g><g><title>rust_parser.exe`core::cmp::impls::impl$55::cmp (68 samples, 0.01%)</title><rect x="5.3889%" y="309" width="0.0111%" height="15" fill="rgb(213,25,53)" fg:x="32971" fg:w="68"/><text x="5.6389%" y="319.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::collect&lt;core::iter::adapters::map::Map&lt;core::str::iter::SplitWhitespace,rust_parser::main::closure_env$0&gt;,alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(core::iter::adapters::map::Map (28,645 samples, 4.68%)</title><rect x="0.7327%" y="437" width="4.6818%" height="15" fill="rgb(252,105,26)" fg:x="4483" fg:w="28645"/><text x="0.9827%" y="447.50">rust_..</text></g><g><title>rust_parser.exe`alloc::vec::impl$14::from_iter&lt;u8,core::iter::adapters::map::Map&lt;core::str::iter::SplitWhitespace,rust_parser::main::closure_env$0&gt; &gt;(core::iter::adapters::map::Map (28,616 samples, 4.68%)</title><rect x="0.7375%" y="421" width="4.6771%" height="15" fill="rgb(220,39,43)" fg:x="4512" fg:w="28616"/><text x="0.9875%" y="431.50">rust_..</text></g><g><title>rust_parser.exe`core::iter::traits::collect::impl$0::into_iter&lt;core::iter::adapters::map::Map&lt;core::str::iter::SplitWhitespace,rust_parser::main::closure_env$0&gt; &gt;(core::iter::adapters::map::Map (89 samples, 0.01%)</title><rect x="5.4000%" y="405" width="0.0145%" height="15" fill="rgb(229,68,48)" fg:x="33039" fg:w="89"/><text x="5.6500%" y="415.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::map&lt;core::str::iter::SplitWhitespace,u8,rust_parser::main::closure_env$0&gt; (170 samples, 0.03%)</title><rect x="5.4145%" y="437" width="0.0278%" height="15" fill="rgb(252,8,32)" fg:x="33128" fg:w="170"/><text x="5.6645%" y="447.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::map::Map&lt;core::str::iter::SplitWhitespace,rust_parser::main::closure_env$0&gt;::new (87 samples, 0.01%)</title><rect x="5.4281%" y="421" width="0.0142%" height="15" fill="rgb(223,20,43)" fg:x="33211" fg:w="87"/><text x="5.6781%" y="431.50"></text></g><g><title>rust_parser.exe`core::char::methods::impl$0::to_digit (84 samples, 0.01%)</title><rect x="5.4570%" y="421" width="0.0137%" height="15" fill="rgb(229,81,49)" fg:x="33388" fg:w="84"/><text x="5.7070%" y="431.50"></text></g><g><title>rust_parser.exe`core::num::from_str_radix&lt;u32&gt; (245 samples, 0.04%)</title><rect x="5.4423%" y="437" width="0.0400%" height="15" fill="rgb(236,28,36)" fg:x="33298" fg:w="245"/><text x="5.6923%" y="447.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$24::drop&lt;u8,alloc::alloc::Global&gt;(alloc::vec::Vec (96 samples, 0.02%)</title><rect x="5.4935%" y="421" width="0.0157%" height="15" fill="rgb(249,185,26)" fg:x="33611" fg:w="96"/><text x="5.7435%" y="431.50"></text></g><g><title>`0x7FF87490AAB5 (131 samples, 0.02%)</title><rect x="5.5494%" y="373" width="0.0214%" height="15" fill="rgb(249,174,33)" fg:x="33953" fg:w="131"/><text x="5.7994%" y="383.50"></text></g><g><title>`0x7FF87497C0EF (139 samples, 0.02%)</title><rect x="5.6988%" y="357" width="0.0227%" height="15" fill="rgb(233,201,37)" fg:x="34867" fg:w="139"/><text x="5.9488%" y="367.50"></text></g><g><title>`0x7FF87490AB01 (960 samples, 0.16%)</title><rect x="5.5788%" y="373" width="0.1569%" height="15" fill="rgb(221,78,26)" fg:x="34133" fg:w="960"/><text x="5.8288%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1,330 samples, 0.22%)</title><rect x="5.5272%" y="389" width="0.2174%" height="15" fill="rgb(250,127,30)" fg:x="33817" fg:w="1330"/><text x="5.7772%" y="399.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::vec::Vec (1,906 samples, 0.31%)</title><rect x="5.4832%" y="437" width="0.3115%" height="15" fill="rgb(230,49,44)" fg:x="33548" fg:w="1906"/><text x="5.7332%" y="447.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::raw_vec::RawVec (1,747 samples, 0.29%)</title><rect x="5.5092%" y="421" width="0.2855%" height="15" fill="rgb(229,67,23)" fg:x="33707" fg:w="1747"/><text x="5.7592%" y="431.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::impl$3::drop&lt;u8,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (1,728 samples, 0.28%)</title><rect x="5.5123%" y="405" width="0.2824%" height="15" fill="rgb(249,83,47)" fg:x="33726" fg:w="1728"/><text x="5.7623%" y="415.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory&lt;u8,alloc::alloc::Global&gt; (307 samples, 0.05%)</title><rect x="5.7445%" y="389" width="0.0502%" height="15" fill="rgb(215,43,3)" fg:x="35147" fg:w="307"/><text x="5.9945%" y="399.50"></text></g><g><title>rust_parser.exe`core::ptr::unique::Unique&lt;u8&gt;::cast(core::ptr::unique::Unique (66 samples, 0.01%)</title><rect x="5.7839%" y="373" width="0.0108%" height="15" fill="rgb(238,154,13)" fg:x="35388" fg:w="66"/><text x="6.0339%" y="383.50"></text></g><g><title>`0x7FF87490AB01 (470 samples, 0.08%)</title><rect x="5.8220%" y="341" width="0.0768%" height="15" fill="rgb(219,56,2)" fg:x="35621" fg:w="470"/><text x="6.0720%" y="351.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (555 samples, 0.09%)</title><rect x="5.8137%" y="357" width="0.0907%" height="15" fill="rgb(233,0,4)" fg:x="35570" fg:w="555"/><text x="6.0637%" y="367.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;enum2$&lt;core::result::Result&lt;alloc::string::String,std::io::error::Error&gt; &gt; &gt;(enum2$&lt;core::result::Result (793 samples, 0.13%)</title><rect x="5.7950%" y="437" width="0.1296%" height="15" fill="rgb(235,30,7)" fg:x="35456" fg:w="793"/><text x="6.0450%" y="447.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::string::String&gt; (765 samples, 0.13%)</title><rect x="5.7996%" y="421" width="0.1250%" height="15" fill="rgb(250,79,13)" fg:x="35484" fg:w="765"/><text x="6.0496%" y="431.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::vec::Vec (751 samples, 0.12%)</title><rect x="5.8019%" y="405" width="0.1227%" height="15" fill="rgb(211,146,34)" fg:x="35498" fg:w="751"/><text x="6.0519%" y="415.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::raw_vec::RawVec (710 samples, 0.12%)</title><rect x="5.8086%" y="389" width="0.1160%" height="15" fill="rgb(228,22,38)" fg:x="35539" fg:w="710"/><text x="6.0586%" y="399.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::impl$3::drop&lt;u8,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (702 samples, 0.11%)</title><rect x="5.8099%" y="373" width="0.1147%" height="15" fill="rgb(235,168,5)" fg:x="35547" fg:w="702"/><text x="6.0599%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory&lt;u8,alloc::alloc::Global&gt; (124 samples, 0.02%)</title><rect x="5.9044%" y="357" width="0.0203%" height="15" fill="rgb(221,155,16)" fg:x="36125" fg:w="124"/><text x="6.1544%" y="367.50"></text></g><g><title>`0x7FF87497C0EF (68 samples, 0.01%)</title><rect x="6.0345%" y="325" width="0.0111%" height="15" fill="rgb(215,215,53)" fg:x="36921" fg:w="68"/><text x="6.2845%" y="335.50"></text></g><g><title>`0x7FF87490AB01 (428 samples, 0.07%)</title><rect x="5.9819%" y="341" width="0.0700%" height="15" fill="rgb(223,4,10)" fg:x="36599" fg:w="428"/><text x="6.2319%" y="351.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (508 samples, 0.08%)</title><rect x="5.9737%" y="357" width="0.0830%" height="15" fill="rgb(234,103,6)" fg:x="36549" fg:w="508"/><text x="6.2237%" y="367.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt;,alloc::alloc::Global&gt; &gt;(alloc::vec::Vec&lt;enum2$&lt;core::option::Option (1,016 samples, 0.17%)</title><rect x="5.9395%" y="405" width="0.1661%" height="15" fill="rgb(227,97,0)" fg:x="36340" fg:w="1016"/><text x="6.1895%" y="415.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt;,alloc::alloc::Global&gt; &gt;(alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option (910 samples, 0.15%)</title><rect x="5.9568%" y="389" width="0.1487%" height="15" fill="rgb(234,150,53)" fg:x="36446" fg:w="910"/><text x="6.2068%" y="399.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::impl$3::drop&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt;,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option (890 samples, 0.15%)</title><rect x="5.9601%" y="373" width="0.1455%" height="15" fill="rgb(228,201,54)" fg:x="36466" fg:w="890"/><text x="6.2101%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt;,alloc::alloc::Global&gt;::current_memory&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt;,alloc::alloc::Global&gt; (299 samples, 0.05%)</title><rect x="6.0567%" y="357" width="0.0489%" height="15" fill="rgb(222,22,37)" fg:x="37057" fg:w="299"/><text x="6.3067%" y="367.50"></text></g><g><title>rust_parser.exe`core::ptr::unique::Unique&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt; &gt;::cast(core::ptr::unique::Unique&lt;enum2$&lt;core::option::Option (71 samples, 0.01%)</title><rect x="6.0940%" y="341" width="0.0116%" height="15" fill="rgb(237,53,32)" fg:x="37285" fg:w="71"/><text x="6.3440%" y="351.50"></text></g><g><title>rust_parser.exe`core::sync::atomic::AtomicUsize::fetch_sub (187 samples, 0.03%)</title><rect x="6.1299%" y="357" width="0.0306%" height="15" fill="rgb(233,25,53)" fg:x="37505" fg:w="187"/><text x="6.3799%" y="367.50"></text></g><g><title>rust_parser.exe`core::sync::atomic::atomic_sub (154 samples, 0.03%)</title><rect x="6.1353%" y="341" width="0.0252%" height="15" fill="rgb(210,40,34)" fg:x="37538" fg:w="154"/><text x="6.3853%" y="351.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;regex::regex::string::Captures&gt; (1,451 samples, 0.24%)</title><rect x="5.9246%" y="437" width="0.2372%" height="15" fill="rgb(241,220,44)" fg:x="36249" fg:w="1451"/><text x="6.1746%" y="447.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;regex_automata::util::captures::Captures&gt; (1,431 samples, 0.23%)</title><rect x="5.9279%" y="421" width="0.2339%" height="15" fill="rgb(235,28,35)" fg:x="36269" fg:w="1431"/><text x="6.1779%" y="431.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;regex_automata::util::captures::GroupInfo&gt; (344 samples, 0.06%)</title><rect x="6.1056%" y="405" width="0.0562%" height="15" fill="rgb(210,56,17)" fg:x="37356" fg:w="344"/><text x="6.3556%" y="415.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;regex_automata::util::captures::GroupInfoInner,alloc::alloc::Global&gt; &gt;(alloc::sync::Arc (319 samples, 0.05%)</title><rect x="6.1097%" y="389" width="0.0521%" height="15" fill="rgb(224,130,29)" fg:x="37381" fg:w="319"/><text x="6.3597%" y="399.50"></text></g><g><title>rust_parser.exe`alloc::sync::impl$33::drop&lt;regex_automata::util::captures::GroupInfoInner,alloc::alloc::Global&gt;(alloc::sync::Arc (270 samples, 0.04%)</title><rect x="6.1177%" y="373" width="0.0441%" height="15" fill="rgb(235,212,8)" fg:x="37430" fg:w="270"/><text x="6.3677%" y="383.50"></text></g><g><title>`0x7FF87497C0EF (75 samples, 0.01%)</title><rect x="6.2340%" y="341" width="0.0123%" height="15" fill="rgb(223,33,50)" fg:x="38142" fg:w="75"/><text x="6.4840%" y="351.50"></text></g><g><title>`0x7FF87490AB01 (345 samples, 0.06%)</title><rect x="6.1951%" y="357" width="0.0564%" height="15" fill="rgb(219,149,13)" fg:x="37904" fg:w="345"/><text x="6.4451%" y="367.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (440 samples, 0.07%)</title><rect x="6.1857%" y="373" width="0.0719%" height="15" fill="rgb(250,156,29)" fg:x="37846" fg:w="440"/><text x="6.4357%" y="383.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;rust_parser::CANFrame&gt; (756 samples, 0.12%)</title><rect x="6.1618%" y="437" width="0.1236%" height="15" fill="rgb(216,193,19)" fg:x="37700" fg:w="756"/><text x="6.4118%" y="447.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::vec::Vec (726 samples, 0.12%)</title><rect x="6.1667%" y="421" width="0.1187%" height="15" fill="rgb(216,135,14)" fg:x="37730" fg:w="726"/><text x="6.4167%" y="431.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::raw_vec::RawVec (659 samples, 0.11%)</title><rect x="6.1777%" y="405" width="0.1077%" height="15" fill="rgb(241,47,5)" fg:x="37797" fg:w="659"/><text x="6.4277%" y="415.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::impl$3::drop&lt;u8,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (649 samples, 0.11%)</title><rect x="6.1793%" y="389" width="0.1061%" height="15" fill="rgb(233,42,35)" fg:x="37807" fg:w="649"/><text x="6.4293%" y="399.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory&lt;u8,alloc::alloc::Global&gt; (170 samples, 0.03%)</title><rect x="6.2576%" y="373" width="0.0278%" height="15" fill="rgb(231,13,6)" fg:x="38286" fg:w="170"/><text x="6.5076%" y="383.50"></text></g><g><title>rust_parser.exe`core::num::dec2flt::float::impl$1::from_u64 (94 samples, 0.02%)</title><rect x="6.3140%" y="373" width="0.0154%" height="15" fill="rgb(207,181,40)" fg:x="38631" fg:w="94"/><text x="6.5640%" y="383.50"></text></g><g><title>rust_parser.exe`core::num::dec2flt::number::Number::try_fast_path (241 samples, 0.04%)</title><rect x="6.3115%" y="389" width="0.0394%" height="15" fill="rgb(254,173,49)" fg:x="38616" fg:w="241"/><text x="6.5615%" y="399.50"></text></g><g><title>rust_parser.exe`core::ops::arith::impl$217::div (110 samples, 0.02%)</title><rect x="6.3329%" y="373" width="0.0180%" height="15" fill="rgb(221,1,38)" fg:x="38747" fg:w="110"/><text x="6.5829%" y="383.50"></text></g><g><title>rust_parser.exe`core::num::dec2flt::common::impl$0::parse_digits (130 samples, 0.02%)</title><rect x="6.3874%" y="341" width="0.0212%" height="15" fill="rgb(206,124,46)" fg:x="39080" fg:w="130"/><text x="6.6374%" y="351.50"></text></g><g><title>rust_parser.exe`core::num::dec2flt::parse::try_parse_digits (159 samples, 0.03%)</title><rect x="6.3831%" y="357" width="0.0260%" height="15" fill="rgb(249,21,11)" fg:x="39054" fg:w="159"/><text x="6.6331%" y="367.50"></text></g><g><title>rust_parser.exe`core::str::impl$0::parse&lt;f64&gt;(ref$ (746 samples, 0.12%)</title><rect x="6.2877%" y="437" width="0.1219%" height="15" fill="rgb(222,201,40)" fg:x="38470" fg:w="746"/><text x="6.5377%" y="447.50"></text></g><g><title>rust_parser.exe`core::num::dec2flt::impl$3::from_str (721 samples, 0.12%)</title><rect x="6.2917%" y="421" width="0.1178%" height="15" fill="rgb(235,61,29)" fg:x="38495" fg:w="721"/><text x="6.5417%" y="431.50"></text></g><g><title>rust_parser.exe`core::num::dec2flt::dec2flt (658 samples, 0.11%)</title><rect x="6.3020%" y="405" width="0.1075%" height="15" fill="rgb(219,207,3)" fg:x="38558" fg:w="658"/><text x="6.5520%" y="415.50"></text></g><g><title>rust_parser.exe`core::num::dec2flt::parse::parse_number (359 samples, 0.06%)</title><rect x="6.3509%" y="389" width="0.0587%" height="15" fill="rgb(222,56,46)" fg:x="38857" fg:w="359"/><text x="6.6009%" y="399.50"></text></g><g><title>rust_parser.exe`core::num::dec2flt::parse::parse_partial_number (229 samples, 0.04%)</title><rect x="6.3722%" y="373" width="0.0374%" height="15" fill="rgb(239,76,54)" fg:x="38987" fg:w="229"/><text x="6.6222%" y="383.50"></text></g><g><title>rust_parser.exe`core::str::pattern::impl$8::into_searcher(core::str::pattern::MultiCharEqPattern&lt;core::str::IsWhitespace&gt;, ref$ (82 samples, 0.01%)</title><rect x="6.5018%" y="357" width="0.0134%" height="15" fill="rgb(231,124,27)" fg:x="39780" fg:w="82"/><text x="6.7518%" y="367.50"></text></g><g><title>rust_parser.exe`core::str::impl$0::char_indices(ref$ (63 samples, 0.01%)</title><rect x="6.5049%" y="341" width="0.0103%" height="15" fill="rgb(249,195,6)" fg:x="39799" fg:w="63"/><text x="6.7549%" y="351.50"></text></g><g><title>rust_parser.exe`core::str::pattern::impl$26::into_searcher&lt;core::str::IsWhitespace&gt;(core::str::IsWhitespace, ref$ (224 samples, 0.04%)</title><rect x="6.4792%" y="373" width="0.0366%" height="15" fill="rgb(237,174,47)" fg:x="39642" fg:w="224"/><text x="6.7292%" y="383.50"></text></g><g><title>rust_parser.exe`core::str::impl$0::split&lt;core::str::IsWhitespace&gt;(ref$ (529 samples, 0.09%)</title><rect x="6.4307%" y="389" width="0.0865%" height="15" fill="rgb(206,201,31)" fg:x="39345" fg:w="529"/><text x="6.6807%" y="399.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::filter(core::str::iter::Split (590 samples, 0.10%)</title><rect x="6.4215%" y="421" width="0.0964%" height="15" fill="rgb(231,57,52)" fg:x="39289" fg:w="590"/><text x="6.6715%" y="431.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::filter::Filter&lt;core::str::iter::Split&lt;core::str::IsWhitespace&gt;,core::str::IsNotEmpty&gt;::new(core::str::iter::Split (590 samples, 0.10%)</title><rect x="6.4215%" y="405" width="0.0964%" height="15" fill="rgb(248,177,22)" fg:x="39289" fg:w="590"/><text x="6.6715%" y="415.50"></text></g><g><title>rust_parser.exe`core::str::impl$0::split_whitespace(ref$ (665 samples, 0.11%)</title><rect x="6.4096%" y="437" width="0.1087%" height="15" fill="rgb(215,211,37)" fg:x="39216" fg:w="665"/><text x="6.6596%" y="447.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::result::Result&lt;u32,core::num::error::ParseIntError&gt; &gt;::expect&lt;u32,core::num::error::ParseIntError&gt;(enum2$&lt;core::result::Result&lt;u32,core::num::error::ParseIntError&gt; &gt;, ref$ (69 samples, 0.01%)</title><rect x="6.5335%" y="437" width="0.0113%" height="15" fill="rgb(241,128,51)" fg:x="39974" fg:w="69"/><text x="6.7835%" y="447.50"></text></g><g><title>`0x7FF85D9715F1 (64 samples, 0.01%)</title><rect x="6.6343%" y="405" width="0.0105%" height="15" fill="rgb(227,165,31)" fg:x="40591" fg:w="64"/><text x="6.8843%" y="415.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;usize&gt; &gt;::map&lt;usize,usize,regex_automata::meta::regex::impl$4::static_captures_len::closure_env$0&gt;(enum2$&lt;core::option::Option (130 samples, 0.02%)</title><rect x="6.6766%" y="373" width="0.0212%" height="15" fill="rgb(228,167,24)" fg:x="40850" fg:w="130"/><text x="6.9266%" y="383.50"></text></g><g><title>rust_parser.exe`regex::regex::string::Regex::static_captures_len (376 samples, 0.06%)</title><rect x="6.6541%" y="405" width="0.0615%" height="15" fill="rgb(228,143,12)" fg:x="40712" fg:w="376"/><text x="6.9041%" y="415.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::regex::Regex::static_captures_len (305 samples, 0.05%)</title><rect x="6.6657%" y="389" width="0.0499%" height="15" fill="rgb(249,149,8)" fg:x="40783" fg:w="305"/><text x="6.9157%" y="399.50"></text></g><g><title>rust_parser.exe`regex_syntax::hir::Properties::static_explicit_captures_len (63 samples, 0.01%)</title><rect x="6.7053%" y="373" width="0.0103%" height="15" fill="rgb(243,35,44)" fg:x="41025" fg:w="63"/><text x="6.9553%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::sync::impl$29::deref&lt;dyn$&lt;regex_automata::meta::strategy::Strategy&gt;,alloc::alloc::Global&gt;(alloc::sync::Arc&lt;dyn$ (180 samples, 0.03%)</title><rect x="6.7226%" y="373" width="0.0294%" height="15" fill="rgb(246,89,9)" fg:x="41131" fg:w="180"/><text x="6.9726%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::sync::impl$29::deref&lt;regex_automata::nfa::thompson::nfa::Inner,alloc::alloc::Global&gt;(alloc::sync::Arc (64 samples, 0.01%)</title><rect x="6.7754%" y="341" width="0.0105%" height="15" fill="rgb(233,213,13)" fg:x="41454" fg:w="64"/><text x="7.0254%" y="351.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::regex::Regex::group_info (419 samples, 0.07%)</title><rect x="6.7201%" y="389" width="0.0685%" height="15" fill="rgb(233,141,41)" fg:x="41116" fg:w="419"/><text x="6.9701%" y="399.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::strategy::impl$4::group_info (189 samples, 0.03%)</title><rect x="6.7577%" y="373" width="0.0309%" height="15" fill="rgb(239,167,4)" fg:x="41346" fg:w="189"/><text x="7.0077%" y="383.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::NFA::group_info (122 samples, 0.02%)</title><rect x="6.7687%" y="357" width="0.0199%" height="15" fill="rgb(209,217,16)" fg:x="41413" fg:w="122"/><text x="7.0187%" y="367.50"></text></g><g><title>rust_parser.exe`core::iter::range::impl$3::next(core::ops::range::Range (387 samples, 0.06%)</title><rect x="6.9378%" y="325" width="0.0633%" height="15" fill="rgb(219,88,35)" fg:x="42448" fg:w="387"/><text x="7.1878%" y="335.50"></text></g><g><title>rust_parser.exe`core::iter::range::impl$2::spec_next(core::ops::range::Range (387 samples, 0.06%)</title><rect x="6.9378%" y="309" width="0.0633%" height="15" fill="rgb(220,193,23)" fg:x="42448" fg:w="387"/><text x="7.1878%" y="319.50"></text></g><g><title>rust_parser.exe`core::iter::range::impl$37::forward_unchecked (105 samples, 0.02%)</title><rect x="6.9839%" y="293" width="0.0172%" height="15" fill="rgb(230,90,52)" fg:x="42730" fg:w="105"/><text x="7.2339%" y="303.50"></text></g><g><title>rust_parser.exe`core::option::impl$5::clone&lt;regex_automata::util::primitives::NonMaxUsize&gt;(enum2$&lt;core::option::Option (253 samples, 0.04%)</title><rect x="7.0011%" y="325" width="0.0414%" height="15" fill="rgb(252,106,19)" fg:x="42835" fg:w="253"/><text x="7.2511%" y="335.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::vec::set_len_on_drop::SetLenOnDrop&gt; (98 samples, 0.02%)</title><rect x="7.0424%" y="325" width="0.0160%" height="15" fill="rgb(206,74,20)" fg:x="43088" fg:w="98"/><text x="7.2924%" y="335.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt;,alloc::alloc::Global&gt;::extend_with&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt;,alloc::alloc::Global&gt;(unsigned long long, enum2$&lt;core::option::Option (1,414 samples, 0.23%)</title><rect x="6.8373%" y="341" width="0.2311%" height="15" fill="rgb(230,138,44)" fg:x="41833" fg:w="1414"/><text x="7.0873%" y="351.50"></text></g><g><title>`0x7FF87490D0F2 (78 samples, 0.01%)</title><rect x="7.1738%" y="229" width="0.0127%" height="15" fill="rgb(235,182,43)" fg:x="43892" fg:w="78"/><text x="7.4238%" y="239.50"></text></g><g><title>`0x7FF87490D1D7 (113 samples, 0.02%)</title><rect x="7.2077%" y="229" width="0.0185%" height="15" fill="rgb(242,16,51)" fg:x="44099" fg:w="113"/><text x="7.4577%" y="239.50"></text></g><g><title>`0x7FF87490C7AA (512 samples, 0.08%)</title><rect x="7.1523%" y="245" width="0.0837%" height="15" fill="rgb(248,9,4)" fg:x="43760" fg:w="512"/><text x="7.4023%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::alloc::alloc (716 samples, 0.12%)</title><rect x="7.1295%" y="261" width="0.1170%" height="15" fill="rgb(210,31,22)" fg:x="43621" fg:w="716"/><text x="7.3795%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::allocate (876 samples, 0.14%)</title><rect x="7.1142%" y="293" width="0.1432%" height="15" fill="rgb(239,54,39)" fg:x="43527" fg:w="876"/><text x="7.3642%" y="303.50"></text></g><g><title>rust_parser.exe`alloc::alloc::Global::alloc_impl (852 samples, 0.14%)</title><rect x="7.1181%" y="277" width="0.1393%" height="15" fill="rgb(230,99,41)" fg:x="43551" fg:w="852"/><text x="7.3681%" y="287.50"></text></g><g><title>rust_parser.exe`core::alloc::layout::impl$0::array::inner (345 samples, 0.06%)</title><rect x="7.2605%" y="277" width="0.0564%" height="15" fill="rgb(253,106,12)" fg:x="44422" fg:w="345"/><text x="7.5105%" y="287.50"></text></g><g><title>rust_parser.exe`core::alloc::layout::Layout::array (367 samples, 0.06%)</title><rect x="7.2575%" y="293" width="0.0600%" height="15" fill="rgb(213,46,41)" fg:x="44404" fg:w="367"/><text x="7.5075%" y="303.50"></text></g><g><title>rust_parser.exe`alloc::vec::from_elem&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt; &gt;(enum2$&lt;core::option::Option (3,152 samples, 0.52%)</title><rect x="6.8076%" y="373" width="0.5152%" height="15" fill="rgb(215,133,35)" fg:x="41651" fg:w="3152"/><text x="7.0576%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::vec::spec_from_elem::impl$0::from_elem&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt;,alloc::alloc::Global&gt;(enum2$&lt;core::option::Option (3,128 samples, 0.51%)</title><rect x="6.8115%" y="357" width="0.5112%" height="15" fill="rgb(213,28,5)" fg:x="41675" fg:w="3128"/><text x="7.0615%" y="367.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt;,alloc::alloc::Global&gt;::with_capacity_in (1,556 samples, 0.25%)</title><rect x="7.0684%" y="341" width="0.2543%" height="15" fill="rgb(215,77,49)" fg:x="43247" fg:w="1556"/><text x="7.3184%" y="351.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt;,alloc::alloc::Global&gt;::with_capacity_in (1,535 samples, 0.25%)</title><rect x="7.0719%" y="325" width="0.2509%" height="15" fill="rgb(248,100,22)" fg:x="43268" fg:w="1535"/><text x="7.3219%" y="335.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt;,alloc::alloc::Global&gt;::allocate_in&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt;,alloc::alloc::Global&gt; (1,529 samples, 0.25%)</title><rect x="7.0728%" y="309" width="0.2499%" height="15" fill="rgb(208,67,9)" fg:x="43274" fg:w="1529"/><text x="7.3228%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref&lt;tuple$&lt;regex_automata::util::primitives::SmallIndex,regex_automata::util::primitives::SmallIndex&gt;,alloc::alloc::Global&gt;(alloc::vec::Vec&lt;tuple$ (79 samples, 0.01%)</title><rect x="7.3520%" y="341" width="0.0129%" height="15" fill="rgb(219,133,21)" fg:x="44982" fg:w="79"/><text x="7.6020%" y="351.50"></text></g><g><title>rust_parser.exe`core::slice::impl$0::last&lt;tuple$&lt;regex_automata::util::primitives::SmallIndex,regex_automata::util::primitives::SmallIndex&gt; &gt;(ref$&lt;slice2$&lt;tuple$ (121 samples, 0.02%)</title><rect x="7.3649%" y="341" width="0.0198%" height="15" fill="rgb(246,46,29)" fg:x="45061" fg:w="121"/><text x="7.6149%" y="351.50"></text></g><g><title>rust_parser.exe`regex_automata::util::captures::GroupInfoInner::small_slot_len (411 samples, 0.07%)</title><rect x="7.3481%" y="357" width="0.0672%" height="15" fill="rgb(246,185,52)" fg:x="44958" fg:w="411"/><text x="7.5981%" y="367.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;ref$&lt;tuple$&lt;regex_automata::util::primitives::SmallIndex,regex_automata::util::primitives::SmallIndex&gt; &gt; &gt; &gt;::map_or&lt;ref$&lt;tuple$&lt;regex_automata::util::primitives::SmallIndex,regex_automata::util::primitives::SmallIndex&gt; &gt;,regex_automata::util::primitives::SmallIndex,regex_automata::util::captures::impl$8::small_slot_len::closure_env$0&gt;(enum2$&lt;core::option::Option&lt;ref$&lt;tuple$ (187 samples, 0.03%)</title><rect x="7.3847%" y="341" width="0.0306%" height="15" fill="rgb(252,136,11)" fg:x="45182" fg:w="187"/><text x="7.6347%" y="351.50"></text></g><g><title>rust_parser.exe`regex_automata::util::captures::Captures::all (3,895 samples, 0.64%)</title><rect x="6.7886%" y="389" width="0.6366%" height="15" fill="rgb(219,138,53)" fg:x="41535" fg:w="3895"/><text x="7.0386%" y="399.50"></text></g><g><title>rust_parser.exe`regex_automata::util::captures::GroupInfo::slot_len (627 samples, 0.10%)</title><rect x="7.3227%" y="373" width="0.1025%" height="15" fill="rgb(211,51,23)" fg:x="44803" fg:w="627"/><text x="7.5727%" y="383.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::regex::Regex::create_captures (4,584 samples, 0.75%)</title><rect x="6.7155%" y="405" width="0.7492%" height="15" fill="rgb(247,221,28)" fg:x="41088" fg:w="4584"/><text x="6.9655%" y="415.50"></text></g><g><title>rust_parser.exe`regex_automata::util::captures::impl$20::clone (242 samples, 0.04%)</title><rect x="7.4252%" y="389" width="0.0396%" height="15" fill="rgb(251,222,45)" fg:x="45430" fg:w="242"/><text x="7.6752%" y="399.50"></text></g><g><title>rust_parser.exe`alloc::sync::impl$28::clone&lt;regex_automata::util::captures::GroupInfoInner,alloc::alloc::Global&gt;(alloc::sync::Arc (215 samples, 0.04%)</title><rect x="7.4296%" y="373" width="0.0351%" height="15" fill="rgb(217,162,53)" fg:x="45457" fg:w="215"/><text x="7.6796%" y="383.50"></text></g><g><title>rust_parser.exe`core::sync::atomic::AtomicUsize::fetch_add (181 samples, 0.03%)</title><rect x="7.4352%" y="357" width="0.0296%" height="15" fill="rgb(229,93,14)" fg:x="45491" fg:w="181"/><text x="7.6852%" y="367.50"></text></g><g><title>rust_parser.exe`core::sync::atomic::atomic_add (137 samples, 0.02%)</title><rect x="7.4424%" y="341" width="0.0224%" height="15" fill="rgb(209,67,49)" fg:x="45535" fg:w="137"/><text x="7.6924%" y="351.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::regex::RegexInfo::is_always_anchored_end (94 samples, 0.02%)</title><rect x="7.5757%" y="357" width="0.0154%" height="15" fill="rgb(213,87,29)" fg:x="46351" fg:w="94"/><text x="7.8257%" y="367.50"></text></g><g><title>rust_parser.exe`enum2$&lt;regex_automata::util::search::Anchored&gt;::is_anchored (87 samples, 0.01%)</title><rect x="7.5981%" y="341" width="0.0142%" height="15" fill="rgb(205,151,52)" fg:x="46488" fg:w="87"/><text x="7.8481%" y="351.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::regex::RegexInfo::props_union (111 samples, 0.02%)</title><rect x="7.6158%" y="325" width="0.0181%" height="15" fill="rgb(253,215,39)" fg:x="46596" fg:w="111"/><text x="7.8658%" y="335.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::regex::RegexInfo::is_always_anchored_start (208 samples, 0.03%)</title><rect x="7.6124%" y="341" width="0.0340%" height="15" fill="rgb(221,220,41)" fg:x="46575" fg:w="208"/><text x="7.8624%" y="351.50"></text></g><g><title>rust_parser.exe`regex_syntax::hir::Properties::look_set_prefix (76 samples, 0.01%)</title><rect x="7.6339%" y="325" width="0.0124%" height="15" fill="rgb(218,133,21)" fg:x="46707" fg:w="76"/><text x="7.8839%" y="335.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::regex::RegexInfo::is_anchored_start (470 samples, 0.08%)</title><rect x="7.5911%" y="357" width="0.0768%" height="15" fill="rgb(221,193,43)" fg:x="46445" fg:w="470"/><text x="7.8411%" y="367.50"></text></g><g><title>rust_parser.exe`regex_syntax::hir::LookSet::contains (105 samples, 0.02%)</title><rect x="7.6508%" y="341" width="0.0172%" height="15" fill="rgb(240,128,52)" fg:x="46810" fg:w="105"/><text x="7.9008%" y="351.50"></text></g><g><title>rust_parser.exe`regex_syntax::hir::Look::as_repr (68 samples, 0.01%)</title><rect x="7.6568%" y="325" width="0.0111%" height="15" fill="rgb(253,114,12)" fg:x="46847" fg:w="68"/><text x="7.9068%" y="335.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::regex::RegexInfo::props_union (80 samples, 0.01%)</title><rect x="7.6679%" y="357" width="0.0131%" height="15" fill="rgb(215,223,47)" fg:x="46915" fg:w="80"/><text x="7.9179%" y="367.50"></text></g><g><title>rust_parser.exe`regex_automata::util::search::Input::end (87 samples, 0.01%)</title><rect x="7.6810%" y="357" width="0.0142%" height="15" fill="rgb(248,225,23)" fg:x="46995" fg:w="87"/><text x="7.9310%" y="367.50"></text></g><g><title>rust_parser.exe`regex_syntax::hir::LookSet::contains (116 samples, 0.02%)</title><rect x="7.7147%" y="357" width="0.0190%" height="15" fill="rgb(250,108,0)" fg:x="47201" fg:w="116"/><text x="7.9647%" y="367.50"></text></g><g><title>rust_parser.exe`regex_syntax::hir::Look::as_repr (84 samples, 0.01%)</title><rect x="7.7199%" y="341" width="0.0137%" height="15" fill="rgb(228,208,7)" fg:x="47233" fg:w="84"/><text x="7.9699%" y="351.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::regex::RegexInfo::is_impossible (1,315 samples, 0.21%)</title><rect x="7.5450%" y="373" width="0.2149%" height="15" fill="rgb(244,45,10)" fg:x="46163" fg:w="1315"/><text x="7.7950%" y="383.50"></text></g><g><title>rust_parser.exe`regex_syntax::hir::Properties::minimum_len (131 samples, 0.02%)</title><rect x="7.7385%" y="357" width="0.0214%" height="15" fill="rgb(207,125,25)" fg:x="47347" fg:w="131"/><text x="7.9885%" y="367.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::NFA::group_info (81 samples, 0.01%)</title><rect x="7.8456%" y="341" width="0.0132%" height="15" fill="rgb(210,195,18)" fg:x="48002" fg:w="81"/><text x="8.0956%" y="351.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::strategy::Core::is_capture_search_needed (312 samples, 0.05%)</title><rect x="7.8325%" y="357" width="0.0510%" height="15" fill="rgb(249,80,12)" fg:x="47922" fg:w="312"/><text x="8.0825%" y="367.50"></text></g><g><title>rust_parser.exe`regex_automata::util::captures::GroupInfo::implicit_slot_len (151 samples, 0.02%)</title><rect x="7.8588%" y="341" width="0.0247%" height="15" fill="rgb(221,65,9)" fg:x="48083" fg:w="151"/><text x="8.1088%" y="351.50"></text></g><g><title>rust_parser.exe`regex_automata::util::captures::GroupInfo::pattern_len (118 samples, 0.02%)</title><rect x="7.8642%" y="325" width="0.0193%" height="15" fill="rgb(235,49,36)" fg:x="48116" fg:w="118"/><text x="8.1142%" y="335.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::PatternID&gt; &gt;,regex_automata::util::search::MatchError&gt; &gt;::unwrap&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::PatternID&gt; &gt;,regex_automata::util::search::MatchError&gt;(enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option (81 samples, 0.01%)</title><rect x="7.9191%" y="341" width="0.0132%" height="15" fill="rgb(225,32,20)" fg:x="48452" fg:w="81"/><text x="8.1691%" y="351.50"></text></g><g><title>rust_parser.exe`core::option::impl$40::branch&lt;ref$&lt;regex_automata::meta::wrappers::BoundedBacktrackerEngine&gt; &gt;(enum2$&lt;core::option::Option&lt;ref$ (117 samples, 0.02%)</title><rect x="7.9584%" y="325" width="0.0191%" height="15" fill="rgb(215,141,46)" fg:x="48692" fg:w="117"/><text x="8.2084%" y="335.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;regex_automata::meta::wrappers::BoundedBacktrackerEngine&gt; &gt;::as_ref&lt;regex_automata::meta::wrappers::BoundedBacktrackerEngine&gt; (77 samples, 0.01%)</title><rect x="7.9775%" y="325" width="0.0126%" height="15" fill="rgb(250,160,47)" fg:x="48809" fg:w="77"/><text x="8.2275%" y="335.50"></text></g><g><title>rust_parser.exe`core::num::impl$11::saturating_mul (88 samples, 0.01%)</title><rect x="8.0515%" y="293" width="0.0144%" height="15" fill="rgb(216,222,40)" fg:x="49262" fg:w="88"/><text x="8.3015%" y="303.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::backtrack::Config::get_visited_capacity (170 samples, 0.03%)</title><rect x="8.0716%" y="293" width="0.0278%" height="15" fill="rgb(234,217,39)" fg:x="49385" fg:w="170"/><text x="8.3216%" y="303.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;usize&gt; &gt;::unwrap_or&lt;usize&gt;(enum2$&lt;core::option::Option (69 samples, 0.01%)</title><rect x="8.0881%" y="277" width="0.0113%" height="15" fill="rgb(207,178,40)" fg:x="49486" fg:w="69"/><text x="8.3381%" y="287.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::backtrack::div_ceil (254 samples, 0.04%)</title><rect x="8.0994%" y="293" width="0.0415%" height="15" fill="rgb(221,136,13)" fg:x="49555" fg:w="254"/><text x="8.3494%" y="303.50"></text></g><g><title>rust_parser.exe`alloc::sync::impl$29::deref&lt;regex_automata::nfa::thompson::nfa::Inner,alloc::alloc::Global&gt;(alloc::sync::Arc (62 samples, 0.01%)</title><rect x="8.1455%" y="277" width="0.0101%" height="15" fill="rgb(249,199,10)" fg:x="49837" fg:w="62"/><text x="8.3955%" y="287.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::wrappers::BoundedBacktrackerEngine::max_haystack_len (1,111 samples, 0.18%)</title><rect x="7.9901%" y="325" width="0.1816%" height="15" fill="rgb(249,222,13)" fg:x="48886" fg:w="1111"/><text x="8.2401%" y="335.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::backtrack::BoundedBacktracker::max_haystack_len (1,111 samples, 0.18%)</title><rect x="7.9901%" y="309" width="0.1816%" height="15" fill="rgb(244,185,38)" fg:x="48886" fg:w="1111"/><text x="8.2401%" y="319.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::NFA::states (188 samples, 0.03%)</title><rect x="8.1409%" y="293" width="0.0307%" height="15" fill="rgb(236,202,9)" fg:x="49809" fg:w="188"/><text x="8.3909%" y="303.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref&lt;enum2$&lt;regex_automata::nfa::thompson::nfa::State&gt;,alloc::alloc::Global&gt;(alloc::vec::Vec&lt;enum2$ (98 samples, 0.02%)</title><rect x="8.1556%" y="277" width="0.0160%" height="15" fill="rgb(250,229,37)" fg:x="49899" fg:w="98"/><text x="8.4056%" y="287.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;enum2$&lt;regex_automata::nfa::thompson::nfa::State&gt;,alloc::alloc::Global&gt;::as_ptr (84 samples, 0.01%)</title><rect x="8.1579%" y="261" width="0.0137%" height="15" fill="rgb(206,174,23)" fg:x="49913" fg:w="84"/><text x="8.4079%" y="271.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::wrappers::BoundedBacktracker::get (1,567 samples, 0.26%)</title><rect x="7.9324%" y="341" width="0.2561%" height="15" fill="rgb(211,33,43)" fg:x="48533" fg:w="1567"/><text x="8.1824%" y="351.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;regex_automata::util::search::HalfMatch&gt; &gt;::map&lt;regex_automata::util::search::HalfMatch,regex_automata::util::primitives::PatternID,regex_automata::nfa::thompson::backtrack::impl$4::try_search_slots::closure_env$0&gt;(enum2$&lt;core::option::Option (246 samples, 0.04%)</title><rect x="8.2705%" y="309" width="0.0402%" height="15" fill="rgb(245,58,50)" fg:x="50602" fg:w="246"/><text x="8.5205%" y="319.50"></text></g><g><title>rust_parser.exe`core::result::impl$26::branch&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::search::HalfMatch&gt; &gt;,regex_automata::util::search::MatchError&gt;(enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option (68 samples, 0.01%)</title><rect x="8.3632%" y="293" width="0.0111%" height="15" fill="rgb(244,68,36)" fg:x="51169" fg:w="68"/><text x="8.6132%" y="303.50"></text></g><g><title>rust_parser.exe`core::slice::impl$0::iter_mut&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt; &gt;(ref_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option (65 samples, 0.01%)</title><rect x="8.5340%" y="277" width="0.0106%" height="15" fill="rgb(232,229,15)" fg:x="52214" fg:w="65"/><text x="8.7840%" y="287.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt; &gt;*, core::ptr::non_null::NonNull&lt;enum2$&lt;core::option::Option (105 samples, 0.02%)</title><rect x="8.6180%" y="261" width="0.0172%" height="15" fill="rgb(254,30,23)" fg:x="52728" fg:w="105"/><text x="8.8680%" y="271.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$189::next&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt; &gt;(core::slice::iter::IterMut&lt;enum2$&lt;core::option::Option (886 samples, 0.14%)</title><rect x="8.5446%" y="277" width="0.1448%" height="15" fill="rgb(235,160,14)" fg:x="52279" fg:w="886"/><text x="8.7946%" y="287.50"></text></g><g><title>rust_parser.exe`core::slice::iter::IterMut&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt; &gt;::post_inc_start (332 samples, 0.05%)</title><rect x="8.6352%" y="261" width="0.0543%" height="15" fill="rgb(212,155,44)" fg:x="52833" fg:w="332"/><text x="8.8852%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;enum2$&lt;regex_automata::nfa::thompson::backtrack::Frame&gt;,alloc::alloc::Global&gt;::pop&lt;enum2$&lt;regex_automata::nfa::thompson::backtrack::Frame&gt;,alloc::alloc::Global&gt; (1,433 samples, 0.23%)</title><rect x="8.8168%" y="261" width="0.2342%" height="15" fill="rgb(226,2,50)" fg:x="53944" fg:w="1433"/><text x="9.0668%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;enum2$&lt;regex_automata::nfa::thompson::backtrack::Frame&gt;,alloc::alloc::Global&gt;::as_ptr (595 samples, 0.10%)</title><rect x="8.9537%" y="245" width="0.0972%" height="15" fill="rgb(234,177,6)" fg:x="54782" fg:w="595"/><text x="9.2037%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;regex_automata::nfa::thompson::backtrack::Frame&gt;,alloc::alloc::Global&gt;::ptr (104 samples, 0.02%)</title><rect x="9.0340%" y="229" width="0.0170%" height="15" fill="rgb(217,24,9)" fg:x="55273" fg:w="104"/><text x="9.2840%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;enum2$&lt;regex_automata::nfa::thompson::backtrack::Frame&gt;,alloc::alloc::Global&gt;::push&lt;enum2$&lt;regex_automata::nfa::thompson::backtrack::Frame&gt;,alloc::alloc::Global&gt;(enum2$ (166 samples, 0.03%)</title><rect x="9.0510%" y="261" width="0.0271%" height="15" fill="rgb(220,13,46)" fg:x="55377" fg:w="166"/><text x="9.3010%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;regex_automata::nfa::thompson::backtrack::Frame&gt;,alloc::alloc::Global&gt;::capacity (71 samples, 0.01%)</title><rect x="15.3584%" y="229" width="0.0116%" height="15" fill="rgb(239,221,27)" fg:x="93968" fg:w="71"/><text x="15.6084%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;enum2$&lt;regex_automata::nfa::thompson::backtrack::Frame&gt;,alloc::alloc::Global&gt;::as_mut_ptr (1,567 samples, 0.26%)</title><rect x="15.3700%" y="229" width="0.2561%" height="15" fill="rgb(222,198,25)" fg:x="94039" fg:w="1567"/><text x="15.6200%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;regex_automata::nfa::thompson::backtrack::Frame&gt;,alloc::alloc::Global&gt;::ptr (1,263 samples, 0.21%)</title><rect x="15.4197%" y="213" width="0.2064%" height="15" fill="rgb(211,99,13)" fg:x="94343" fg:w="1263"/><text x="15.6697%" y="223.50"></text></g><g><title>rust_parser.exe`core::ptr::unique::Unique&lt;enum2$&lt;regex_automata::nfa::thompson::backtrack::Frame&gt; &gt;::as_ptr(core::ptr::unique::Unique&lt;enum2$ (257 samples, 0.04%)</title><rect x="15.5841%" y="197" width="0.0420%" height="15" fill="rgb(232,111,31)" fg:x="95349" fg:w="257"/><text x="15.8341%" y="207.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;enum2$&lt;regex_automata::nfa::thompson::backtrack::Frame&gt; &gt;::as_ptr(core::ptr::non_null::NonNull&lt;enum2$ (257 samples, 0.04%)</title><rect x="15.5841%" y="181" width="0.0420%" height="15" fill="rgb(245,82,37)" fg:x="95349" fg:w="257"/><text x="15.8341%" y="191.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;enum2$&lt;regex_automata::nfa::thompson::backtrack::Frame&gt;,alloc::alloc::Global&gt;::push&lt;enum2$&lt;regex_automata::nfa::thompson::backtrack::Frame&gt;,alloc::alloc::Global&gt;(enum2$ (7,088 samples, 1.16%)</title><rect x="14.7591%" y="245" width="1.1585%" height="15" fill="rgb(227,149,46)" fg:x="90301" fg:w="7088"/><text x="15.0091%" y="255.50"></text></g><g><title>rust_parser.exe`core::ptr::write(enum2$&lt;regex_automata::nfa::thompson::backtrack::Frame&gt;*, enum2$ (1,783 samples, 0.29%)</title><rect x="15.6261%" y="229" width="0.2914%" height="15" fill="rgb(218,36,50)" fg:x="95606" fg:w="1783"/><text x="15.8761%" y="239.50"></text></g><g><title>rust_parser.exe`core::option::impl$40::branch&lt;regex_automata::util::primitives::StateID&gt;(enum2$&lt;core::option::Option (1,584 samples, 0.26%)</title><rect x="15.9176%" y="245" width="0.2589%" height="15" fill="rgb(226,80,48)" fg:x="97389" fg:w="1584"/><text x="16.1676%" y="255.50"></text></g><g><title>rust_parser.exe`core::option::impl$41::from_residual&lt;regex_automata::util::search::HalfMatch&gt;(enum2$&lt;core::option::Option&lt;enum2$ (196 samples, 0.03%)</title><rect x="16.1764%" y="245" width="0.0320%" height="15" fill="rgb(238,224,15)" fg:x="98973" fg:w="196"/><text x="16.4264%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::ptr (213 samples, 0.03%)</title><rect x="21.0207%" y="181" width="0.0348%" height="15" fill="rgb(241,136,10)" fg:x="128612" fg:w="213"/><text x="21.2707%" y="191.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_ptr (3,239 samples, 0.53%)</title><rect x="20.9908%" y="197" width="0.5294%" height="15" fill="rgb(208,32,45)" fg:x="128429" fg:w="3239"/><text x="21.2408%" y="207.50"></text></g><g><title>rust_parser.exe`core::ptr::slice_from_raw_parts (2,843 samples, 0.46%)</title><rect x="21.0555%" y="181" width="0.4647%" height="15" fill="rgb(207,135,9)" fg:x="128825" fg:w="2843"/><text x="21.3055%" y="191.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::cast (2,843 samples, 0.46%)</title><rect x="21.0555%" y="165" width="0.4647%" height="15" fill="rgb(206,86,44)" fg:x="128825" fg:w="2843"/><text x="21.3055%" y="175.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$12::index&lt;usize,usize,alloc::alloc::Global&gt;(alloc::vec::Vec (12,125 samples, 1.98%)</title><rect x="20.2034%" y="229" width="1.9817%" height="15" fill="rgb(245,177,15)" fg:x="123611" fg:w="12125"/><text x="20.4534%" y="239.50">r..</text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (8,119 samples, 1.33%)</title><rect x="20.8581%" y="213" width="1.3270%" height="15" fill="rgb(206,64,50)" fg:x="127617" fg:w="8119"/><text x="21.1081%" y="223.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$2::index&lt;usize&gt;(unsigned long long, ref$&lt;slice2$ (4,068 samples, 0.66%)</title><rect x="21.5202%" y="197" width="0.6649%" height="15" fill="rgb(234,36,40)" fg:x="131668" fg:w="4068"/><text x="21.7702%" y="207.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::ptr (574 samples, 0.09%)</title><rect x="23.1104%" y="181" width="0.0938%" height="15" fill="rgb(213,64,8)" fg:x="141397" fg:w="574"/><text x="23.3604%" y="191.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_mut_ptr (1,917 samples, 0.31%)</title><rect x="23.1104%" y="197" width="0.3133%" height="15" fill="rgb(210,75,36)" fg:x="141397" fg:w="1917"/><text x="23.3604%" y="207.50"></text></g><g><title>rust_parser.exe`core::ptr::slice_from_raw_parts_mut (1,343 samples, 0.22%)</title><rect x="23.2042%" y="181" width="0.2195%" height="15" fill="rgb(229,88,21)" fg:x="141971" fg:w="1343"/><text x="23.4542%" y="191.50"></text></g><g><title>rust_parser.exe`core::ptr::mut_ptr::impl$0::cast (1,343 samples, 0.22%)</title><rect x="23.2042%" y="165" width="0.2195%" height="15" fill="rgb(252,204,47)" fg:x="141971" fg:w="1343"/><text x="23.4542%" y="175.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$13::index_mut&lt;usize,usize,alloc::alloc::Global&gt;(alloc::vec::Vec (11,580 samples, 1.89%)</title><rect x="22.1851%" y="229" width="1.8927%" height="15" fill="rgb(208,77,27)" fg:x="135736" fg:w="11580"/><text x="22.4351%" y="239.50">r..</text></g><g><title>rust_parser.exe`alloc::vec::impl$9::deref_mut(alloc::vec::Vec (6,945 samples, 1.14%)</title><rect x="22.9427%" y="213" width="1.1351%" height="15" fill="rgb(221,76,26)" fg:x="140371" fg:w="6945"/><text x="23.1927%" y="223.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$2::index_mut&lt;usize&gt;(unsigned long long, ref_mut$&lt;slice2$ (4,002 samples, 0.65%)</title><rect x="23.4237%" y="197" width="0.6541%" height="15" fill="rgb(225,139,18)" fg:x="143314" fg:w="4002"/><text x="23.6737%" y="207.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::backtrack::Visited::insert (51,042 samples, 8.34%)</title><rect x="16.2085%" y="245" width="8.3425%" height="15" fill="rgb(230,137,11)" fg:x="99169" fg:w="51042"/><text x="16.4585%" y="255.50">rust_parser...</text></g><g><title>rust_parser.exe`regex_automata::util::primitives::StateID::as_usize (2,895 samples, 0.47%)</title><rect x="24.0778%" y="229" width="0.4732%" height="15" fill="rgb(212,28,1)" fg:x="147316" fg:w="2895"/><text x="24.3278%" y="239.50"></text></g><g><title>rust_parser.exe`regex_automata::util::primitives::SmallIndex::as_usize (1,734 samples, 0.28%)</title><rect x="24.2675%" y="213" width="0.2834%" height="15" fill="rgb(248,164,17)" fg:x="148477" fg:w="1734"/><text x="24.5175%" y="223.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::NFA::look_matcher (219 samples, 0.04%)</title><rect x="24.5509%" y="245" width="0.0358%" height="15" fill="rgb(222,171,42)" fg:x="150211" fg:w="219"/><text x="24.8009%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::sync::impl$29::deref&lt;regex_automata::nfa::thompson::nfa::Inner,alloc::alloc::Global&gt;(alloc::sync::Arc (68 samples, 0.01%)</title><rect x="24.5756%" y="229" width="0.0111%" height="15" fill="rgb(243,84,45)" fg:x="150362" fg:w="68"/><text x="24.8256%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::sync::impl$29::deref&lt;regex_automata::nfa::thompson::nfa::Inner,alloc::alloc::Global&gt;(alloc::sync::Arc (1,657 samples, 0.27%)</title><rect x="25.1815%" y="213" width="0.2708%" height="15" fill="rgb(252,49,23)" fg:x="154069" fg:w="1657"/><text x="25.4315%" y="223.50"></text></g><g><title>rust_parser.exe`alloc::sync::Arc&lt;regex_automata::nfa::thompson::nfa::Inner,alloc::alloc::Global&gt;::inner (607 samples, 0.10%)</title><rect x="25.3531%" y="197" width="0.0992%" height="15" fill="rgb(215,19,7)" fg:x="155119" fg:w="607"/><text x="25.6031%" y="207.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;regex_automata::nfa::thompson::nfa::Inner&gt; &gt;::as_ref (607 samples, 0.10%)</title><rect x="25.3531%" y="181" width="0.0992%" height="15" fill="rgb(238,81,41)" fg:x="155119" fg:w="607"/><text x="25.6031%" y="191.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;regex_automata::nfa::thompson::nfa::State&gt;,alloc::alloc::Global&gt;::ptr (585 samples, 0.10%)</title><rect x="25.6807%" y="181" width="0.0956%" height="15" fill="rgb(210,199,37)" fg:x="157123" fg:w="585"/><text x="25.9307%" y="191.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::NFA::states (7,129 samples, 1.17%)</title><rect x="24.9937%" y="229" width="1.1652%" height="15" fill="rgb(244,192,49)" fg:x="152920" fg:w="7129"/><text x="25.2437%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref&lt;enum2$&lt;regex_automata::nfa::thompson::nfa::State&gt;,alloc::alloc::Global&gt;(alloc::vec::Vec&lt;enum2$ (4,323 samples, 0.71%)</title><rect x="25.4523%" y="213" width="0.7066%" height="15" fill="rgb(226,211,11)" fg:x="155726" fg:w="4323"/><text x="25.7023%" y="223.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;enum2$&lt;regex_automata::nfa::thompson::nfa::State&gt;,alloc::alloc::Global&gt;::as_ptr (2,984 samples, 0.49%)</title><rect x="25.6712%" y="197" width="0.4877%" height="15" fill="rgb(236,162,54)" fg:x="157065" fg:w="2984"/><text x="25.9212%" y="207.50"></text></g><g><title>rust_parser.exe`core::ptr::slice_from_raw_parts(enum2$ (2,341 samples, 0.38%)</title><rect x="25.7763%" y="181" width="0.3826%" height="15" fill="rgb(220,229,9)" fg:x="157708" fg:w="2341"/><text x="26.0263%" y="191.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::cast(enum2$ (2,341 samples, 0.38%)</title><rect x="25.7763%" y="165" width="0.3826%" height="15" fill="rgb(250,87,22)" fg:x="157708" fg:w="2341"/><text x="26.0263%" y="175.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::NFA::state (16,358 samples, 2.67%)</title><rect x="24.5867%" y="245" width="2.6736%" height="15" fill="rgb(239,43,17)" fg:x="150430" fg:w="16358"/><text x="24.8367%" y="255.50">ru..</text></g><g><title>rust_parser.exe`regex_automata::util::primitives::impl$95::index&lt;enum2$&lt;regex_automata::nfa::thompson::nfa::State&gt; &gt;(ref$&lt;slice2$&lt;enum2$ (6,739 samples, 1.10%)</title><rect x="26.1589%" y="229" width="1.1014%" height="15" fill="rgb(231,177,25)" fg:x="160049" fg:w="6739"/><text x="26.4089%" y="239.50"></text></g><g><title>rust_parser.exe`regex_automata::util::primitives::StateID::as_usize (2,910 samples, 0.48%)</title><rect x="26.7847%" y="213" width="0.4756%" height="15" fill="rgb(219,179,1)" fg:x="163878" fg:w="2910"/><text x="27.0347%" y="223.50"></text></g><g><title>rust_parser.exe`regex_automata::util::primitives::SmallIndex::as_usize (1,504 samples, 0.25%)</title><rect x="27.0145%" y="197" width="0.2458%" height="15" fill="rgb(238,219,53)" fg:x="165284" fg:w="1504"/><text x="27.2645%" y="207.50"></text></g><g><title>rust_parser.exe`core::slice::impl$0::get&lt;u8,usize&gt;(ref$&lt;slice2$ (4,841 samples, 0.79%)</title><rect x="27.6420%" y="229" width="0.7912%" height="15" fill="rgb(232,167,36)" fg:x="169123" fg:w="4841"/><text x="27.8920%" y="239.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$2::get&lt;u8&gt;(unsigned long long, ref$&lt;slice2$ (2,910 samples, 0.48%)</title><rect x="27.9576%" y="213" width="0.4756%" height="15" fill="rgb(244,19,51)" fg:x="171054" fg:w="2910"/><text x="28.2076%" y="223.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$2::get_unchecked(unsigned long long, ptr_const$&lt;slice2$ (424 samples, 0.07%)</title><rect x="28.3639%" y="197" width="0.0693%" height="15" fill="rgb(224,6,22)" fg:x="173540" fg:w="424"/><text x="28.6139%" y="207.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$1::as_ptr(ptr_const$&lt;slice2$ (424 samples, 0.07%)</title><rect x="28.3639%" y="181" width="0.0693%" height="15" fill="rgb(224,145,5)" fg:x="173540" fg:w="424"/><text x="28.6139%" y="191.50"></text></g><g><title>rust_parser.exe`core::iter::traits::collect::impl$0::into_iter&lt;core::slice::iter::Iter&lt;regex_automata::nfa::thompson::nfa::Transition&gt; &gt;(core::slice::iter::Iter (541 samples, 0.09%)</title><rect x="31.1258%" y="181" width="0.0884%" height="15" fill="rgb(234,130,49)" fg:x="190438" fg:w="541"/><text x="31.3758%" y="191.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::add (403 samples, 0.07%)</title><rect x="31.7684%" y="149" width="0.0659%" height="15" fill="rgb(254,6,2)" fg:x="194370" fg:w="403"/><text x="32.0184%" y="159.50"></text></g><g><title>rust_parser.exe`core::slice::impl$0::iter&lt;regex_automata::nfa::thompson::nfa::Transition&gt;(ref$&lt;slice2$ (3,847 samples, 0.63%)</title><rect x="31.2142%" y="181" width="0.6288%" height="15" fill="rgb(208,96,46)" fg:x="190979" fg:w="3847"/><text x="31.4642%" y="191.50"></text></g><g><title>rust_parser.exe`core::slice::iter::Iter&lt;regex_automata::nfa::thompson::nfa::Transition&gt;::new(ref$&lt;slice2$ (2,297 samples, 0.38%)</title><rect x="31.4675%" y="165" width="0.3754%" height="15" fill="rgb(239,3,39)" fg:x="192529" fg:w="2297"/><text x="31.7175%" y="175.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;regex_automata::nfa::thompson::nfa::Transition&gt;*, core::ptr::non_null::NonNull (1,238 samples, 0.20%)</title><rect x="32.5217%" y="165" width="0.2023%" height="15" fill="rgb(233,210,1)" fg:x="198979" fg:w="1238"/><text x="32.7717%" y="175.50"></text></g><g><title>rust_parser.exe`core::num::impl$11::unchecked_sub (407 samples, 0.07%)</title><rect x="33.1201%" y="149" width="0.0665%" height="15" fill="rgb(244,137,37)" fg:x="202640" fg:w="407"/><text x="33.3701%" y="159.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;regex_automata::nfa::thompson::nfa::Transition&gt;::add(core::ptr::non_null::NonNull (612 samples, 0.10%)</title><rect x="33.1866%" y="149" width="0.1000%" height="15" fill="rgb(240,136,2)" fg:x="203047" fg:w="612"/><text x="33.4366%" y="159.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::add (257 samples, 0.04%)</title><rect x="33.2446%" y="133" width="0.0420%" height="15" fill="rgb(239,18,37)" fg:x="203402" fg:w="257"/><text x="33.4946%" y="143.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$181::next&lt;regex_automata::nfa::thompson::nfa::Transition&gt;(core::slice::iter::Iter (8,843 samples, 1.45%)</title><rect x="31.8430%" y="181" width="1.4453%" height="15" fill="rgb(218,185,22)" fg:x="194826" fg:w="8843"/><text x="32.0930%" y="191.50"></text></g><g><title>rust_parser.exe`core::slice::iter::Iter&lt;regex_automata::nfa::thompson::nfa::Transition&gt;::post_inc_start (3,452 samples, 0.56%)</title><rect x="32.7241%" y="165" width="0.5642%" height="15" fill="rgb(225,218,4)" fg:x="200217" fg:w="3452"/><text x="32.9741%" y="175.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::SparseTransitions::matches(ref$&lt;slice2$ (44,719 samples, 7.31%)</title><rect x="27.2603%" y="245" width="7.3090%" height="15" fill="rgb(230,182,32)" fg:x="166788" fg:w="44719"/><text x="27.5103%" y="255.50">rust_parse..</text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;ref$&lt;u8&gt; &gt; &gt;::and_then&lt;ref$&lt;u8&gt;,regex_automata::util::primitives::StateID,regex_automata::nfa::thompson::nfa::impl$6::matches::closure_env$0&gt;(enum2$&lt;core::option::Option&lt;ref$ (37,543 samples, 6.14%)</title><rect x="28.4332%" y="229" width="6.1361%" height="15" fill="rgb(242,56,43)" fg:x="173964" fg:w="37543"/><text x="28.6832%" y="239.50">rust_par..</text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::impl$6::matches::closure$0 (34,122 samples, 5.58%)</title><rect x="28.9923%" y="213" width="5.5770%" height="15" fill="rgb(233,99,24)" fg:x="177385" fg:w="34122"/><text x="29.2423%" y="223.50">rust_pa..</text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::SparseTransitions::matches_byte (31,684 samples, 5.18%)</title><rect x="29.3908%" y="197" width="5.1785%" height="15" fill="rgb(234,209,42)" fg:x="179823" fg:w="31684"/><text x="29.6408%" y="207.50">rust_p..</text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::Transition::matches_byte (7,838 samples, 1.28%)</title><rect x="33.2883%" y="181" width="1.2811%" height="15" fill="rgb(227,7,12)" fg:x="203669" fg:w="7838"/><text x="33.5383%" y="191.50"></text></g><g><title>rust_parser.exe`core::slice::impl$0::get&lt;u8,usize&gt;(ref$&lt;slice2$ (452 samples, 0.07%)</title><rect x="34.6509%" y="229" width="0.0739%" height="15" fill="rgb(245,203,43)" fg:x="212006" fg:w="452"/><text x="34.9009%" y="239.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$2::get&lt;u8&gt;(unsigned long long, ref$&lt;slice2$ (280 samples, 0.05%)</title><rect x="34.6790%" y="213" width="0.0458%" height="15" fill="rgb(238,205,33)" fg:x="212178" fg:w="280"/><text x="34.9290%" y="223.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::Transition::matches(ref$&lt;slice2$ (2,071 samples, 0.34%)</title><rect x="34.5693%" y="245" width="0.3385%" height="15" fill="rgb(231,56,7)" fg:x="211507" fg:w="2071"/><text x="34.8193%" y="255.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;ref$&lt;u8&gt; &gt; &gt;::map_or&lt;ref$&lt;u8&gt;,bool,regex_automata::nfa::thompson::nfa::impl$8::matches::closure_env$0&gt;(enum2$&lt;core::option::Option&lt;ref$ (1,120 samples, 0.18%)</title><rect x="34.7248%" y="229" width="0.1831%" height="15" fill="rgb(244,186,29)" fg:x="212458" fg:w="1120"/><text x="34.9748%" y="239.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::impl$8::matches::closure$0 (623 samples, 0.10%)</title><rect x="34.8060%" y="213" width="0.1018%" height="15" fill="rgb(234,111,31)" fg:x="212955" fg:w="623"/><text x="35.0560%" y="223.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::Transition::matches_byte (435 samples, 0.07%)</title><rect x="34.8367%" y="197" width="0.0711%" height="15" fill="rgb(241,149,10)" fg:x="213143" fg:w="435"/><text x="35.0867%" y="207.50"></text></g><g><title>rust_parser.exe`regex_automata::util::look::LookMatcher::is_end(ref$&lt;slice2$ (81 samples, 0.01%)</title><rect x="34.9408%" y="229" width="0.0132%" height="15" fill="rgb(249,206,44)" fg:x="213780" fg:w="81"/><text x="35.1908%" y="239.50"></text></g><g><title>rust_parser.exe`regex_automata::util::look::LookMatcher::matches_inline(regex_automata::util::look::Look, ref$&lt;slice2$ (409 samples, 0.07%)</title><rect x="34.9078%" y="245" width="0.0668%" height="15" fill="rgb(251,153,30)" fg:x="213578" fg:w="409"/><text x="35.1578%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::util::look::LookMatcher::is_start(ref$&lt;slice2$ (126 samples, 0.02%)</title><rect x="34.9541%" y="229" width="0.0206%" height="15" fill="rgb(239,152,38)" fg:x="213861" fg:w="126"/><text x="35.2041%" y="239.50"></text></g><g><title>rust_parser.exe`core::num::nonzero::NonZeroUsize::new (429 samples, 0.07%)</title><rect x="35.0021%" y="229" width="0.0701%" height="15" fill="rgb(249,139,47)" fg:x="214155" fg:w="429"/><text x="35.2521%" y="239.50"></text></g><g><title>rust_parser.exe`regex_automata::util::primitives::NonMaxUsize::new (1,873 samples, 0.31%)</title><rect x="34.9747%" y="245" width="0.3061%" height="15" fill="rgb(244,64,35)" fg:x="213987" fg:w="1873"/><text x="35.2247%" y="255.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;core::num::nonzero::NonZeroUsize&gt; &gt;::map&lt;core::num::nonzero::NonZeroUsize,regex_automata::util::primitives::NonMaxUsize,regex_automata::util::primitives::NonMaxUsize (*)(core::num::nonzero::NonZeroUsize)&gt;(enum2$&lt;core::option::Option&lt;core::num::nonzero::NonZeroUsize&gt; &gt;, regex_automata::util::primitives::NonMaxUsize (*) (1,276 samples, 0.21%)</title><rect x="35.0723%" y="229" width="0.2086%" height="15" fill="rgb(216,46,15)" fg:x="214584" fg:w="1276"/><text x="35.3223%" y="239.50"></text></g><g><title>rust_parser.exe`core::ops::function::FnOnce::call_once&lt;regex_automata::util::primitives::NonMaxUsize (*)(core::num::nonzero::NonZeroUsize),tuple$&lt;core::num::nonzero::NonZeroUsize&gt; &gt;(regex_automata::util::primitives::NonMaxUsize (*) (636 samples, 0.10%)</title><rect x="35.1769%" y="213" width="0.1039%" height="15" fill="rgb(250,74,19)" fg:x="215224" fg:w="636"/><text x="35.4269%" y="223.50"></text></g><g><title>rust_parser.exe`regex_automata::util::primitives::NonMaxUsize::constructor$0 (324 samples, 0.05%)</title><rect x="35.2279%" y="197" width="0.0530%" height="15" fill="rgb(249,42,33)" fg:x="215536" fg:w="324"/><text x="35.4779%" y="207.50"></text></g><g><title>rust_parser.exe`regex_automata::util::primitives::SmallIndex::as_usize (199 samples, 0.03%)</title><rect x="35.2808%" y="245" width="0.0325%" height="15" fill="rgb(242,149,17)" fg:x="215860" fg:w="199"/><text x="35.5308%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::util::primitives::impl$3::index&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt; &gt;(ref$&lt;slice2$&lt;enum2$&lt;core::option::Option (684 samples, 0.11%)</title><rect x="35.3133%" y="245" width="0.1118%" height="15" fill="rgb(244,29,21)" fg:x="216059" fg:w="684"/><text x="35.5633%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::util::primitives::SmallIndex::as_usize (105 samples, 0.02%)</title><rect x="35.4080%" y="229" width="0.0172%" height="15" fill="rgb(220,130,37)" fg:x="216638" fg:w="105"/><text x="35.6580%" y="239.50"></text></g><g><title>rust_parser.exe`regex_automata::util::primitives::impl$4::index_mut&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt; &gt;(ref_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option (327 samples, 0.05%)</title><rect x="35.4251%" y="245" width="0.0534%" height="15" fill="rgb(211,67,2)" fg:x="216743" fg:w="327"/><text x="35.6751%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::util::primitives::SmallIndex::as_usize (78 samples, 0.01%)</title><rect x="35.4658%" y="229" width="0.0127%" height="15" fill="rgb(235,68,52)" fg:x="216992" fg:w="78"/><text x="35.7158%" y="239.50"></text></g><g><title>rust_parser.exe`regex_automata::util::search::Input::end (2,115 samples, 0.35%)</title><rect x="35.4845%" y="245" width="0.3457%" height="15" fill="rgb(246,142,3)" fg:x="217106" fg:w="2115"/><text x="35.7345%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::util::search::Input::get_span (784 samples, 0.13%)</title><rect x="35.7020%" y="229" width="0.1281%" height="15" fill="rgb(241,25,7)" fg:x="218437" fg:w="784"/><text x="35.9520%" y="239.50"></text></g><g><title>rust_parser.exe`regex_automata::util::search::Input::haystack (1,102 samples, 0.18%)</title><rect x="35.8301%" y="245" width="0.1801%" height="15" fill="rgb(242,119,39)" fg:x="219221" fg:w="1102"/><text x="36.0801%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::backtrack::BoundedBacktracker::backtrack(regex_automata::nfa::thompson::backtrack::Cache*, regex_automata::util::search::Input*, unsigned long long, regex_automata::util::primitives::StateID, ref_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option (169,656 samples, 27.73%)</title><rect x="8.6894%" y="277" width="27.7291%" height="15" fill="rgb(241,98,45)" fg:x="53165" fg:w="169656"/><text x="8.9394%" y="287.50">rust_parser.exe`regex_automata::nfa::thompso..</text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::backtrack::BoundedBacktracker::step(regex_automata::nfa::thompson::backtrack::Cache*, regex_automata::util::search::Input*, regex_automata::util::primitives::StateID, unsigned long long, ref_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option (167,278 samples, 27.34%)</title><rect x="9.0781%" y="261" width="27.3404%" height="15" fill="rgb(254,28,30)" fg:x="55543" fg:w="167278"/><text x="9.3281%" y="271.50">rust_parser.exe`regex_automata::nfa::thompso..</text></g><g><title>rust_parser.exe`regex_automata::util::search::Input::start (2,498 samples, 0.41%)</title><rect x="36.0103%" y="245" width="0.4083%" height="15" fill="rgb(241,142,54)" fg:x="220323" fg:w="2498"/><text x="36.2603%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::util::search::Input::get_span (1,305 samples, 0.21%)</title><rect x="36.2052%" y="229" width="0.2133%" height="15" fill="rgb(222,85,15)" fg:x="221516" fg:w="1305"/><text x="36.4552%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;enum2$&lt;regex_automata::nfa::thompson::backtrack::Frame&gt;,alloc::alloc::Global&gt;::clear&lt;enum2$&lt;regex_automata::nfa::thompson::backtrack::Frame&gt;,alloc::alloc::Global&gt; (83 samples, 0.01%)</title><rect x="36.4264%" y="261" width="0.0136%" height="15" fill="rgb(210,85,47)" fg:x="222869" fg:w="83"/><text x="36.6764%" y="271.50"></text></g><g><title>rust_parser.exe`core::result::impl$26::branch&lt;tuple$&lt;&gt;,regex_automata::util::search::MatchError&gt;(enum2$&lt;core::result::Result&lt;tuple$ (92 samples, 0.02%)</title><rect x="36.4399%" y="261" width="0.0150%" height="15" fill="rgb(224,206,25)" fg:x="222952" fg:w="92"/><text x="36.6899%" y="271.50"></text></g><g><title>rust_parser.exe`core::iter::range::impl$3::next(core::ops::range::Range (74 samples, 0.01%)</title><rect x="37.3868%" y="213" width="0.0121%" height="15" fill="rgb(243,201,19)" fg:x="228745" fg:w="74"/><text x="37.6368%" y="223.50"></text></g><g><title>rust_parser.exe`core::iter::range::impl$2::spec_next(core::ops::range::Range (74 samples, 0.01%)</title><rect x="37.3868%" y="197" width="0.0121%" height="15" fill="rgb(236,59,4)" fg:x="228745" fg:w="74"/><text x="37.6368%" y="207.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::resize&lt;usize,alloc::alloc::Global&gt; (203 samples, 0.03%)</title><rect x="37.3681%" y="245" width="0.0332%" height="15" fill="rgb(254,179,45)" fg:x="228631" fg:w="203"/><text x="37.6181%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::extend_with&lt;usize,alloc::alloc::Global&gt; (182 samples, 0.03%)</title><rect x="37.3716%" y="229" width="0.0297%" height="15" fill="rgb(226,14,10)" fg:x="228652" fg:w="182"/><text x="37.6216%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::truncate&lt;usize,alloc::alloc::Global&gt; (131 samples, 0.02%)</title><rect x="37.4013%" y="245" width="0.0214%" height="15" fill="rgb(244,27,41)" fg:x="228834" fg:w="131"/><text x="37.6513%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$9::deref_mut&lt;usize,alloc::alloc::Global&gt;(alloc::vec::Vec (66 samples, 0.01%)</title><rect x="37.4227%" y="245" width="0.0108%" height="15" fill="rgb(235,35,32)" fg:x="228965" fg:w="66"/><text x="37.6727%" y="255.50"></text></g><g><title>rust_parser.exe`core::num::impl$11::checked_mul (73 samples, 0.01%)</title><rect x="37.4383%" y="245" width="0.0119%" height="15" fill="rgb(218,68,31)" fg:x="229060" fg:w="73"/><text x="37.6883%" y="255.50"></text></g><g><title>rust_parser.exe`core::slice::impl$0::iter_mut&lt;usize&gt;(ref_mut$&lt;slice2$ (65 samples, 0.01%)</title><rect x="37.4502%" y="245" width="0.0106%" height="15" fill="rgb(207,120,37)" fg:x="229133" fg:w="65"/><text x="37.7002%" y="255.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (1,008 samples, 0.16%)</title><rect x="37.9920%" y="229" width="0.1648%" height="15" fill="rgb(227,98,0)" fg:x="232448" fg:w="1008"/><text x="38.2420%" y="239.50"></text></g><g><title>rust_parser.exe`core::num::impl$11::unchecked_sub (464 samples, 0.08%)</title><rect x="38.4402%" y="213" width="0.0758%" height="15" fill="rgb(207,7,3)" fg:x="235190" fg:w="464"/><text x="38.6902%" y="223.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$189::next&lt;usize&gt;(core::slice::iter::IterMut (6,908 samples, 1.13%)</title><rect x="37.4608%" y="245" width="1.1291%" height="15" fill="rgb(206,98,19)" fg:x="229198" fg:w="6908"/><text x="37.7108%" y="255.50"></text></g><g><title>rust_parser.exe`core::slice::iter::IterMut&lt;usize&gt;::post_inc_start (2,650 samples, 0.43%)</title><rect x="38.1568%" y="229" width="0.4331%" height="15" fill="rgb(217,5,26)" fg:x="233456" fg:w="2650"/><text x="38.4068%" y="239.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;usize&gt;::add(core::ptr::non_null::NonNull (452 samples, 0.07%)</title><rect x="38.5160%" y="213" width="0.0739%" height="15" fill="rgb(235,190,38)" fg:x="235654" fg:w="452"/><text x="38.7660%" y="223.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::backtrack::div_ceil (281 samples, 0.05%)</title><rect x="38.6049%" y="245" width="0.0459%" height="15" fill="rgb(247,86,24)" fg:x="236198" fg:w="281"/><text x="38.8549%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::backtrack::Cache::setup_search (13,782 samples, 2.25%)</title><rect x="36.4185%" y="277" width="2.2526%" height="15" fill="rgb(205,101,16)" fg:x="222821" fg:w="13782"/><text x="36.6685%" y="287.50">r..</text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::backtrack::Visited::setup_search (13,559 samples, 2.22%)</title><rect x="36.4550%" y="261" width="2.2161%" height="15" fill="rgb(246,168,33)" fg:x="223044" fg:w="13559"/><text x="36.7050%" y="271.50">r..</text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref&lt;regex_automata::util::primitives::StateID,alloc::alloc::Global&gt;(alloc::vec::Vec (114 samples, 0.02%)</title><rect x="38.6852%" y="261" width="0.0186%" height="15" fill="rgb(231,114,1)" fg:x="236689" fg:w="114"/><text x="38.9352%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;regex_automata::util::primitives::StateID,alloc::alloc::Global&gt;::as_ptr (72 samples, 0.01%)</title><rect x="38.6920%" y="245" width="0.0118%" height="15" fill="rgb(207,184,53)" fg:x="236731" fg:w="72"/><text x="38.9420%" y="255.50"></text></g><g><title>rust_parser.exe`core::slice::impl$0::get&lt;regex_automata::util::primitives::StateID,usize&gt;(ref$&lt;slice2$ (152 samples, 0.02%)</title><rect x="38.7038%" y="261" width="0.0248%" height="15" fill="rgb(224,95,51)" fg:x="236803" fg:w="152"/><text x="38.9538%" y="271.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;ref$&lt;regex_automata::util::primitives::StateID&gt; &gt; &gt;::copied&lt;regex_automata::util::primitives::StateID&gt;(enum2$&lt;core::option::Option&lt;ref$ (96 samples, 0.02%)</title><rect x="38.7286%" y="261" width="0.0157%" height="15" fill="rgb(212,188,45)" fg:x="236955" fg:w="96"/><text x="38.9786%" y="271.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::NFA::start_pattern (462 samples, 0.08%)</title><rect x="38.6711%" y="277" width="0.0755%" height="15" fill="rgb(223,154,38)" fg:x="236603" fg:w="462"/><text x="38.9211%" y="287.50"></text></g><g><title>rust_parser.exe`regex_automata::util::search::Input::is_done (82 samples, 0.01%)</title><rect x="38.7499%" y="277" width="0.0134%" height="15" fill="rgb(251,22,52)" fg:x="237085" fg:w="82"/><text x="38.9999%" y="287.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::backtrack::BoundedBacktracker::search_imp(regex_automata::nfa::thompson::backtrack::Cache*, regex_automata::util::search::Input*, ref_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option (185,940 samples, 30.39%)</title><rect x="8.3779%" y="293" width="30.3906%" height="15" fill="rgb(229,209,22)" fg:x="51259" fg:w="185940"/><text x="8.6279%" y="303.50">rust_parser.exe`regex_automata::nfa::thompson::ba..</text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_search_slots_imp(regex_automata::nfa::thompson::backtrack::Cache*, regex_automata::util::search::Input*, ref_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option (186,431 samples, 30.47%)</title><rect x="8.3137%" y="309" width="30.4708%" height="15" fill="rgb(234,138,34)" fg:x="50866" fg:w="186431"/><text x="8.5637%" y="319.50">rust_parser.exe`regex_automata::nfa::thompson::ba..</text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::NFA::has_empty (98 samples, 0.02%)</title><rect x="38.7685%" y="293" width="0.0160%" height="15" fill="rgb(212,95,11)" fg:x="237199" fg:w="98"/><text x="39.0185%" y="303.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::wrappers::BoundedBacktrackerEngine::search_slots(regex_automata::meta::wrappers::BoundedBacktrackerCache*, regex_automata::util::search::Input*, ref_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option (187,295 samples, 30.61%)</title><rect x="8.1885%" y="341" width="30.6121%" height="15" fill="rgb(240,179,47)" fg:x="50100" fg:w="187295"/><text x="8.4385%" y="351.50">rust_parser.exe`regex_automata::meta::wrappers::B..</text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_search_slots(regex_automata::nfa::thompson::backtrack::Cache*, regex_automata::util::search::Input*, ref_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option (187,151 samples, 30.59%)</title><rect x="8.2120%" y="325" width="30.5885%" height="15" fill="rgb(240,163,11)" fg:x="50244" fg:w="187151"/><text x="8.4620%" y="335.50">rust_parser.exe`regex_automata::nfa::thompson::ba..</text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::NFA::has_empty (98 samples, 0.02%)</title><rect x="38.7845%" y="309" width="0.0160%" height="15" fill="rgb(236,37,12)" fg:x="237297" fg:w="98"/><text x="39.0345%" y="319.50"></text></g><g><title>rust_parser.exe`core::option::impl$40::branch&lt;ref$&lt;regex_automata::meta::wrappers::OnePassEngine&gt; &gt;(enum2$&lt;core::option::Option&lt;ref$ (64 samples, 0.01%)</title><rect x="38.8087%" y="325" width="0.0105%" height="15" fill="rgb(232,164,16)" fg:x="237445" fg:w="64"/><text x="39.0587%" y="335.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::strategy::Core::search_slots_nofail(regex_automata::meta::regex::Cache*, regex_automata::util::search::Input*, ref_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option (189,337 samples, 30.95%)</title><rect x="7.8835%" y="357" width="30.9458%" height="15" fill="rgb(244,205,15)" fg:x="48234" fg:w="189337"/><text x="8.1335%" y="367.50">rust_parser.exe`regex_automata::meta::strategy::Co..</text></g><g><title>rust_parser.exe`regex_automata::meta::wrappers::OnePass::get (176 samples, 0.03%)</title><rect x="38.8006%" y="341" width="0.0288%" height="15" fill="rgb(223,117,47)" fg:x="237395" fg:w="176"/><text x="39.0506%" y="351.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::search::Match&gt; &gt;,regex_automata::util::search::MatchError&gt; &gt;::map_err&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::search::Match&gt; &gt;,regex_automata::util::search::MatchError,regex_automata::meta::error::RetryFailError,regex_automata::meta::wrappers::impl$10::try_search::closure_env$0&gt;(enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option (73 samples, 0.01%)</title><rect x="38.8545%" y="341" width="0.0119%" height="15" fill="rgb(244,107,35)" fg:x="237725" fg:w="73"/><text x="39.1045%" y="351.50"></text></g><g><title>rust_parser.exe`core::option::impl$41::from_residual&lt;ref$&lt;regex_automata::meta::wrappers::DFAEngine&gt; &gt;(enum2$&lt;core::option::Option&lt;enum2$ (94 samples, 0.02%)</title><rect x="38.8815%" y="325" width="0.0154%" height="15" fill="rgb(205,140,8)" fg:x="237890" fg:w="94"/><text x="39.1315%" y="335.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::wrappers::DFA::get (210 samples, 0.03%)</title><rect x="38.8664%" y="341" width="0.0343%" height="15" fill="rgb(228,84,46)" fg:x="237798" fg:w="210"/><text x="39.1164%" y="351.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::wrappers::Hybrid::get (180 samples, 0.03%)</title><rect x="38.9007%" y="341" width="0.0294%" height="15" fill="rgb(254,188,9)" fg:x="238008" fg:w="180"/><text x="39.1507%" y="351.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;regex_automata::meta::wrappers::HybridEngine&gt; &gt;::as_ref&lt;regex_automata::meta::wrappers::HybridEngine&gt; (88 samples, 0.01%)</title><rect x="38.9158%" y="325" width="0.0144%" height="15" fill="rgb(206,112,54)" fg:x="238100" fg:w="88"/><text x="39.1658%" y="335.50"></text></g><g><title>rust_parser.exe`core::result::impl$26::branch&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::search::HalfMatch&gt; &gt;,regex_automata::util::search::MatchError&gt;(enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option (76 samples, 0.01%)</title><rect x="39.0188%" y="309" width="0.0124%" height="15" fill="rgb(216,84,49)" fg:x="238730" fg:w="76"/><text x="39.2688%" y="319.50"></text></g><g><title>rust_parser.exe`core::result::impl$26::branch&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::search::HalfMatch&gt; &gt;,regex_automata::util::search::MatchError&gt;(enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option (99 samples, 0.02%)</title><rect x="39.1021%" y="293" width="0.0162%" height="15" fill="rgb(214,194,35)" fg:x="239240" fg:w="99"/><text x="39.3521%" y="303.50"></text></g><g><title>rust_parser.exe`enum2$&lt;regex_automata::util::search::Anchored&gt;::is_anchored (98 samples, 0.02%)</title><rect x="39.1721%" y="277" width="0.0160%" height="15" fill="rgb(249,28,3)" fg:x="239668" fg:w="98"/><text x="39.4221%" y="287.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::prefilter::Prefilter&gt; &gt; &gt; &gt;::as_ref&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::prefilter::Prefilter&gt; &gt; &gt; (101 samples, 0.02%)</title><rect x="39.2309%" y="261" width="0.0165%" height="15" fill="rgb(222,56,52)" fg:x="240028" fg:w="101"/><text x="39.4809%" y="271.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::dfa::Config::get_prefilter (462 samples, 0.08%)</title><rect x="39.1881%" y="277" width="0.0755%" height="15" fill="rgb(245,217,50)" fg:x="239766" fg:w="462"/><text x="39.4381%" y="287.50"></text></g><g><title>rust_parser.exe`core::mem::swap&lt;regex_automata::hybrid::id::LazyStateID&gt; (110 samples, 0.02%)</title><rect x="39.8196%" y="261" width="0.0180%" height="15" fill="rgb(213,201,24)" fg:x="243630" fg:w="110"/><text x="40.0696%" y="271.50"></text></g><g><title>rust_parser.exe`core::result::impl$26::branch&lt;tuple$&lt;&gt;,regex_automata::util::search::MatchError&gt;(enum2$&lt;core::result::Result&lt;tuple$ (105 samples, 0.02%)</title><rect x="39.8422%" y="261" width="0.0172%" height="15" fill="rgb(248,116,28)" fg:x="243768" fg:w="105"/><text x="40.0922%" y="271.50"></text></g><g><title>rust_parser.exe`core::slice::impl$0::get_unchecked&lt;u8,usize&gt;(ref$&lt;slice2$ (1,681 samples, 0.27%)</title><rect x="39.8593%" y="261" width="0.2747%" height="15" fill="rgb(219,72,43)" fg:x="243873" fg:w="1681"/><text x="40.1093%" y="271.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$2::get_unchecked&lt;u8&gt;(unsigned long long, ptr_const$&lt;slice2$ (634 samples, 0.10%)</title><rect x="40.0305%" y="245" width="0.1036%" height="15" fill="rgb(209,138,14)" fg:x="244920" fg:w="634"/><text x="40.2805%" y="255.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$1::as_ptr(ptr_const$&lt;slice2$ (144 samples, 0.02%)</title><rect x="40.1106%" y="229" width="0.0235%" height="15" fill="rgb(222,18,33)" fg:x="245410" fg:w="144"/><text x="40.3606%" y="239.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;regex_automata::hybrid::dfa::SearchProgress&gt; &gt;::expect&lt;regex_automata::hybrid::dfa::SearchProgress&gt;(enum2$&lt;core::option::Option&lt;regex_automata::hybrid::dfa::SearchProgress&gt; &gt;, ref$ (133 samples, 0.02%)</title><rect x="40.1573%" y="245" width="0.0217%" height="15" fill="rgb(213,199,7)" fg:x="245696" fg:w="133"/><text x="40.4073%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::dfa::Cache::search_finish (414 samples, 0.07%)</title><rect x="40.1341%" y="261" width="0.0677%" height="15" fill="rgb(250,110,10)" fg:x="245554" fg:w="414"/><text x="40.3841%" y="271.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::dfa::SearchProgress::len (79 samples, 0.01%)</title><rect x="40.1888%" y="245" width="0.0129%" height="15" fill="rgb(248,123,6)" fg:x="245889" fg:w="79"/><text x="40.4388%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::dfa::Cache::search_start (322 samples, 0.05%)</title><rect x="40.2018%" y="261" width="0.0526%" height="15" fill="rgb(206,91,31)" fg:x="245968" fg:w="322"/><text x="40.4518%" y="271.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;regex_automata::hybrid::dfa::SearchProgress&gt; &gt;::take&lt;regex_automata::hybrid::dfa::SearchProgress&gt; (100 samples, 0.02%)</title><rect x="40.2380%" y="245" width="0.0163%" height="15" fill="rgb(211,154,13)" fg:x="246190" fg:w="100"/><text x="40.4880%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;regex_automata::hybrid::id::LazyStateID,alloc::alloc::Global&gt;::ptr (273 samples, 0.04%)</title><rect x="41.1989%" y="213" width="0.0446%" height="15" fill="rgb(225,148,7)" fg:x="252069" fg:w="273"/><text x="41.4489%" y="223.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref&lt;regex_automata::hybrid::id::LazyStateID,alloc::alloc::Global&gt;(alloc::vec::Vec (2,382 samples, 0.39%)</title><rect x="41.0569%" y="245" width="0.3893%" height="15" fill="rgb(220,160,43)" fg:x="251200" fg:w="2382"/><text x="41.3069%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;regex_automata::hybrid::id::LazyStateID,alloc::alloc::Global&gt;::as_ptr (1,527 samples, 0.25%)</title><rect x="41.1966%" y="229" width="0.2496%" height="15" fill="rgb(213,52,39)" fg:x="252055" fg:w="1527"/><text x="41.4466%" y="239.50"></text></g><g><title>rust_parser.exe`core::ptr::slice_from_raw_parts (1,240 samples, 0.20%)</title><rect x="41.2435%" y="213" width="0.2027%" height="15" fill="rgb(243,137,7)" fg:x="252342" fg:w="1240"/><text x="41.4935%" y="223.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::cast (1,240 samples, 0.20%)</title><rect x="41.2435%" y="197" width="0.2027%" height="15" fill="rgb(230,79,13)" fg:x="252342" fg:w="1240"/><text x="41.4935%" y="207.50"></text></g><g><title>rust_parser.exe`core::convert::num::impl$44::from (202 samples, 0.03%)</title><rect x="41.4462%" y="245" width="0.0330%" height="15" fill="rgb(247,105,23)" fg:x="253582" fg:w="202"/><text x="41.6962%" y="255.50"></text></g><g><title>rust_parser.exe`core::slice::impl$0::get_unchecked&lt;regex_automata::hybrid::id::LazyStateID,usize&gt;(ref$&lt;slice2$ (1,583 samples, 0.26%)</title><rect x="41.4792%" y="245" width="0.2587%" height="15" fill="rgb(223,179,41)" fg:x="253784" fg:w="1583"/><text x="41.7292%" y="255.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$2::get_unchecked&lt;regex_automata::hybrid::id::LazyStateID&gt;(unsigned long long, ptr_const$&lt;slice2$ (694 samples, 0.11%)</title><rect x="41.6245%" y="229" width="0.1134%" height="15" fill="rgb(218,9,34)" fg:x="254673" fg:w="694"/><text x="41.8745%" y="239.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$1::as_ptr(ptr_const$&lt;slice2$ (160 samples, 0.03%)</title><rect x="41.7118%" y="213" width="0.0262%" height="15" fill="rgb(222,106,8)" fg:x="255207" fg:w="160"/><text x="41.9618%" y="223.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::id::LazyStateID::as_usize_unchecked (431 samples, 0.07%)</title><rect x="41.7380%" y="245" width="0.0704%" height="15" fill="rgb(211,220,0)" fg:x="255367" fg:w="431"/><text x="41.9880%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::id::LazyStateID::is_tagged (2,026 samples, 0.33%)</title><rect x="41.8084%" y="245" width="0.3311%" height="15" fill="rgb(229,52,16)" fg:x="255798" fg:w="2026"/><text x="42.0584%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::id::LazyStateID::as_usize_unchecked (1,125 samples, 0.18%)</title><rect x="41.9557%" y="229" width="0.1839%" height="15" fill="rgb(212,155,18)" fg:x="256699" fg:w="1125"/><text x="42.2057%" y="239.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::dfa::DFA::next_state_untagged_unchecked (14,014 samples, 2.29%)</title><rect x="40.2634%" y="261" width="2.2905%" height="15" fill="rgb(242,21,14)" fg:x="246345" fg:w="14014"/><text x="40.5134%" y="271.50">r..</text></g><g><title>rust_parser.exe`regex_automata::util::alphabet::ByteClasses::get (2,535 samples, 0.41%)</title><rect x="42.1395%" y="245" width="0.4143%" height="15" fill="rgb(222,19,48)" fg:x="257824" fg:w="2535"/><text x="42.3895%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::id::LazyStateID::is_tagged (1,617 samples, 0.26%)</title><rect x="42.5539%" y="261" width="0.2643%" height="15" fill="rgb(232,45,27)" fg:x="260359" fg:w="1617"/><text x="42.8039%" y="271.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::id::LazyStateID::as_usize_unchecked (580 samples, 0.09%)</title><rect x="42.7234%" y="245" width="0.0948%" height="15" fill="rgb(249,103,42)" fg:x="261396" fg:w="580"/><text x="42.9734%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::id::LazyStateID::is_unknown (67 samples, 0.01%)</title><rect x="42.8182%" y="261" width="0.0110%" height="15" fill="rgb(246,81,33)" fg:x="261976" fg:w="67"/><text x="43.0682%" y="271.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::dfa::DFA::match_pattern (129 samples, 0.02%)</title><rect x="42.9017%" y="245" width="0.0211%" height="15" fill="rgb(252,33,42)" fg:x="262487" fg:w="129"/><text x="43.1517%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::dfa::DFA::pattern_len (95 samples, 0.02%)</title><rect x="42.9072%" y="229" width="0.0155%" height="15" fill="rgb(209,212,41)" fg:x="262521" fg:w="95"/><text x="43.1572%" y="239.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::NFA::pattern_len (72 samples, 0.01%)</title><rect x="42.9110%" y="213" width="0.0118%" height="15" fill="rgb(207,154,6)" fg:x="262544" fg:w="72"/><text x="43.1610%" y="223.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$12::index&lt;regex_automata::hybrid::id::LazyStateID,usize,alloc::alloc::Global&gt;(alloc::vec::Vec (89 samples, 0.01%)</title><rect x="42.9540%" y="229" width="0.0145%" height="15" fill="rgb(223,64,47)" fg:x="262807" fg:w="89"/><text x="43.2040%" y="239.50"></text></g><g><title>rust_parser.exe`core::num::impl$11::checked_sub (67 samples, 0.01%)</title><rect x="42.9852%" y="213" width="0.0110%" height="15" fill="rgb(211,161,38)" fg:x="262998" fg:w="67"/><text x="43.2352%" y="223.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;usize&gt; &gt;::unwrap&lt;usize&gt;(enum2$&lt;core::option::Option (137 samples, 0.02%)</title><rect x="42.9961%" y="213" width="0.0224%" height="15" fill="rgb(219,138,40)" fg:x="263065" fg:w="137"/><text x="43.2461%" y="223.50"></text></g><g><title>rust_parser.exe`regex_automata::util::alphabet::ByteClasses::alphabet_len (106 samples, 0.02%)</title><rect x="43.0185%" y="213" width="0.0173%" height="15" fill="rgb(241,228,46)" fg:x="263202" fg:w="106"/><text x="43.2685%" y="223.50"></text></g><g><title>rust_parser.exe`regex_automata::util::alphabet::ByteClasses::eoi (700 samples, 0.11%)</title><rect x="42.9754%" y="229" width="0.1144%" height="15" fill="rgb(223,209,38)" fg:x="262938" fg:w="700"/><text x="43.2254%" y="239.50"></text></g><g><title>rust_parser.exe`regex_automata::util::alphabet::Unit::eoi (330 samples, 0.05%)</title><rect x="43.0359%" y="213" width="0.0539%" height="15" fill="rgb(236,164,45)" fg:x="263308" fg:w="330"/><text x="43.2859%" y="223.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::dfa::DFA::next_eoi_state (1,106 samples, 0.18%)</title><rect x="42.9228%" y="245" width="0.1808%" height="15" fill="rgb(231,15,5)" fg:x="262616" fg:w="1106"/><text x="43.1728%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::util::alphabet::Unit::as_usize (84 samples, 0.01%)</title><rect x="43.0898%" y="229" width="0.0137%" height="15" fill="rgb(252,35,15)" fg:x="263638" fg:w="84"/><text x="43.3398%" y="239.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::id::LazyStateID::is_quit (103 samples, 0.02%)</title><rect x="43.1109%" y="245" width="0.0168%" height="15" fill="rgb(248,181,18)" fg:x="263767" fg:w="103"/><text x="43.3609%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::search::eoi_fwd(regex_automata::hybrid::dfa::DFA*, regex_automata::hybrid::dfa::Cache*, regex_automata::util::search::Input*, regex_automata::hybrid::id::LazyStateID*, enum2$&lt;core::option::Option (1,905 samples, 0.31%)</title><rect x="42.8291%" y="261" width="0.3114%" height="15" fill="rgb(233,39,42)" fg:x="262043" fg:w="1905"/><text x="43.0791%" y="271.50"></text></g><g><title>rust_parser.exe`core::result::impl$26::branch&lt;regex_automata::hybrid::id::LazyStateID,regex_automata::util::search::MatchError&gt;(enum2$&lt;core::result::Result (83 samples, 0.01%)</title><rect x="43.1480%" y="245" width="0.0136%" height="15" fill="rgb(238,110,33)" fg:x="263994" fg:w="83"/><text x="43.3980%" y="255.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::result::Result&lt;regex_automata::hybrid::id::LazyStateID,enum2$&lt;regex_automata::hybrid::error::StartError&gt; &gt; &gt;::map_err&lt;regex_automata::hybrid::id::LazyStateID,enum2$&lt;regex_automata::hybrid::error::StartError&gt;,regex_automata::util::search::MatchError,regex_automata::hybrid::dfa::impl$2::start_state_forward::closure_env$0&gt;(enum2$&lt;core::result::Result&lt;regex_automata::hybrid::id::LazyStateID,enum2$ (95 samples, 0.02%)</title><rect x="43.1615%" y="245" width="0.0155%" height="15" fill="rgb(233,195,10)" fg:x="264077" fg:w="95"/><text x="43.4115%" y="255.50"></text></g><g><title>rust_parser.exe`core::result::impl$26::branch&lt;regex_automata::hybrid::id::LazyStateID,enum2$&lt;regex_automata::hybrid::error::StartError&gt; &gt;(enum2$&lt;core::result::Result&lt;regex_automata::hybrid::id::LazyStateID,enum2$ (137 samples, 0.02%)</title><rect x="43.2331%" y="213" width="0.0224%" height="15" fill="rgb(254,105,3)" fg:x="264515" fg:w="137"/><text x="43.4831%" y="223.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;regex_automata::hybrid::id::LazyStateID,alloc::alloc::Global&gt;::as_ptr (68 samples, 0.01%)</title><rect x="43.2882%" y="165" width="0.0111%" height="15" fill="rgb(221,225,9)" fg:x="264852" fg:w="68"/><text x="43.5382%" y="175.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$12::index&lt;regex_automata::hybrid::id::LazyStateID,usize,alloc::alloc::Global&gt;(alloc::vec::Vec (255 samples, 0.04%)</title><rect x="43.2665%" y="197" width="0.0417%" height="15" fill="rgb(224,227,45)" fg:x="264719" fg:w="255"/><text x="43.5165%" y="207.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (129 samples, 0.02%)</title><rect x="43.2871%" y="181" width="0.0211%" height="15" fill="rgb(229,198,43)" fg:x="264845" fg:w="129"/><text x="43.5371%" y="191.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::dfa::LazyRef::get_cached_start_id(enum2$ (354 samples, 0.06%)</title><rect x="43.2555%" y="213" width="0.0579%" height="15" fill="rgb(206,209,35)" fg:x="264652" fg:w="354"/><text x="43.5055%" y="223.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::id::LazyStateID::is_unknown (71 samples, 0.01%)</title><rect x="43.3201%" y="213" width="0.0116%" height="15" fill="rgb(245,195,53)" fg:x="265047" fg:w="71"/><text x="43.5701%" y="223.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::dfa::DFA::start_state (903 samples, 0.15%)</title><rect x="43.1924%" y="229" width="0.1476%" height="15" fill="rgb(240,92,26)" fg:x="264266" fg:w="903"/><text x="43.4424%" y="239.50"></text></g><g><title>rust_parser.exe`core::num::impl$11::checked_sub (138 samples, 0.02%)</title><rect x="43.3717%" y="213" width="0.0226%" height="15" fill="rgb(207,40,23)" fg:x="265363" fg:w="138"/><text x="43.6217%" y="223.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::dfa::DFA::start_state_forward (1,428 samples, 0.23%)</title><rect x="43.1771%" y="245" width="0.2334%" height="15" fill="rgb(223,111,35)" fg:x="264172" fg:w="1428"/><text x="43.4271%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::util::start::Config::from_input_forward (431 samples, 0.07%)</title><rect x="43.3400%" y="229" width="0.0704%" height="15" fill="rgb(229,147,28)" fg:x="265169" fg:w="431"/><text x="43.5900%" y="239.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::search::init_fwd (1,722 samples, 0.28%)</title><rect x="43.1405%" y="261" width="0.2814%" height="15" fill="rgb(211,29,28)" fg:x="263948" fg:w="1722"/><text x="43.3905%" y="271.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::id::LazyStateID::is_match (70 samples, 0.01%)</title><rect x="43.4105%" y="245" width="0.0114%" height="15" fill="rgb(228,72,33)" fg:x="265600" fg:w="70"/><text x="43.6605%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::NFA::look_set_prefix_any (146 samples, 0.02%)</title><rect x="43.4219%" y="261" width="0.0239%" height="15" fill="rgb(205,214,31)" fg:x="265670" fg:w="146"/><text x="43.6719%" y="271.50"></text></g><g><title>rust_parser.exe`regex_automata::util::look::LookSet::is_empty (398 samples, 0.07%)</title><rect x="43.4458%" y="261" width="0.0651%" height="15" fill="rgb(224,111,15)" fg:x="265816" fg:w="398"/><text x="43.6958%" y="271.50"></text></g><g><title>rust_parser.exe`regex_automata::util::look::LookSet::len (274 samples, 0.04%)</title><rect x="43.4660%" y="245" width="0.0448%" height="15" fill="rgb(253,21,26)" fg:x="265940" fg:w="274"/><text x="43.7160%" y="255.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::result::Result&lt;usize,core::num::error::TryFromIntError&gt; &gt;::unwrap&lt;usize,core::num::error::TryFromIntError&gt;(enum2$&lt;core::result::Result (87 samples, 0.01%)</title><rect x="43.4966%" y="229" width="0.0142%" height="15" fill="rgb(245,139,43)" fg:x="266127" fg:w="87"/><text x="43.7466%" y="239.50"></text></g><g><title>rust_parser.exe`regex_automata::util::search::Input::end (656 samples, 0.11%)</title><rect x="43.5108%" y="261" width="0.1072%" height="15" fill="rgb(252,170,7)" fg:x="266214" fg:w="656"/><text x="43.7608%" y="271.50"></text></g><g><title>rust_parser.exe`regex_automata::util::search::Input::get_span (319 samples, 0.05%)</title><rect x="43.5659%" y="245" width="0.0521%" height="15" fill="rgb(231,118,14)" fg:x="266551" fg:w="319"/><text x="43.8159%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::util::search::Input::haystack (589 samples, 0.10%)</title><rect x="43.6180%" y="261" width="0.0963%" height="15" fill="rgb(238,83,0)" fg:x="266870" fg:w="589"/><text x="43.8680%" y="271.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::search::find_fwd_imp(regex_automata::hybrid::dfa::DFA*, regex_automata::hybrid::dfa::Cache*, regex_automata::util::search::Input*, enum2$&lt;core::option::Option&lt;ref$ (27,192 samples, 4.44%)</title><rect x="39.2736%" y="277" width="4.4443%" height="15" fill="rgb(221,39,39)" fg:x="240289" fg:w="27192"/><text x="39.5236%" y="287.50">rust_..</text></g><g><title>rust_parser.exe`regex_automata::hybrid::search::find_fwd (28,194 samples, 4.61%)</title><rect x="39.1243%" y="293" width="4.6081%" height="15" fill="rgb(222,119,46)" fg:x="239376" fg:w="28194"/><text x="39.3743%" y="303.50">rust_..</text></g><g><title>rust_parser.exe`regex_automata::util::search::Input::is_done (65 samples, 0.01%)</title><rect x="43.7218%" y="277" width="0.0106%" height="15" fill="rgb(222,165,49)" fg:x="267505" fg:w="65"/><text x="43.9718%" y="287.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::dfa::DFA::try_search_fwd (28,933 samples, 4.73%)</title><rect x="39.0312%" y="309" width="4.7289%" height="15" fill="rgb(219,113,52)" fg:x="238806" fg:w="28933"/><text x="39.2812%" y="319.50">rust_p..</text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::NFA::has_empty (169 samples, 0.03%)</title><rect x="43.7325%" y="293" width="0.0276%" height="15" fill="rgb(214,7,15)" fg:x="267570" fg:w="169"/><text x="43.9825%" y="303.50"></text></g><g><title>rust_parser.exe`alloc::sync::impl$29::deref&lt;regex_automata::nfa::thompson::nfa::Inner,alloc::alloc::Global&gt;(alloc::sync::Arc (102 samples, 0.02%)</title><rect x="43.7434%" y="277" width="0.0167%" height="15" fill="rgb(235,32,4)" fg:x="267637" fg:w="102"/><text x="43.9934%" y="287.50"></text></g><g><title>rust_parser.exe`alloc::sync::Arc&lt;regex_automata::nfa::thompson::nfa::Inner,alloc::alloc::Global&gt;::inner (93 samples, 0.02%)</title><rect x="43.7449%" y="261" width="0.0152%" height="15" fill="rgb(238,90,54)" fg:x="267646" fg:w="93"/><text x="43.9949%" y="271.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;regex_automata::nfa::thompson::nfa::Inner&gt; &gt;::as_ref (93 samples, 0.02%)</title><rect x="43.7449%" y="245" width="0.0152%" height="15" fill="rgb(213,208,19)" fg:x="267646" fg:w="93"/><text x="43.9949%" y="255.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::NFA::start_anchored (73 samples, 0.01%)</title><rect x="43.8088%" y="277" width="0.0119%" height="15" fill="rgb(233,156,4)" fg:x="268037" fg:w="73"/><text x="44.0588%" y="287.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::NFA::start_unanchored (64 samples, 0.01%)</title><rect x="43.8207%" y="277" width="0.0105%" height="15" fill="rgb(207,194,5)" fg:x="268110" fg:w="64"/><text x="44.0707%" y="287.50"></text></g><g><title>rust_parser.exe`regex_automata::nfa::thompson::nfa::NFA::is_always_start_anchored (317 samples, 0.05%)</title><rect x="43.7977%" y="293" width="0.0518%" height="15" fill="rgb(206,111,30)" fg:x="267969" fg:w="317"/><text x="44.0477%" y="303.50"></text></g><g><title>rust_parser.exe`regex_automata::util::primitives::impl$62::eq (112 samples, 0.02%)</title><rect x="43.8312%" y="277" width="0.0183%" height="15" fill="rgb(243,70,54)" fg:x="268174" fg:w="112"/><text x="44.0812%" y="287.50"></text></g><g><title>rust_parser.exe`regex_automata::hybrid::regex::Regex::is_anchored (525 samples, 0.09%)</title><rect x="43.7676%" y="309" width="0.0858%" height="15" fill="rgb(242,28,8)" fg:x="267785" fg:w="525"/><text x="44.0176%" y="319.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::strategy::Core::try_search_mayfail (31,047 samples, 5.07%)</title><rect x="38.8293%" y="357" width="5.0744%" height="15" fill="rgb(219,106,18)" fg:x="237571" fg:w="31047"/><text x="39.0793%" y="367.50">rust_p..</text></g><g><title>rust_parser.exe`regex_automata::meta::wrappers::HybridEngine::try_search (30,430 samples, 4.97%)</title><rect x="38.9302%" y="341" width="4.9736%" height="15" fill="rgb(244,222,10)" fg:x="238188" fg:w="30430"/><text x="39.1802%" y="351.50">rust_p..</text></g><g><title>rust_parser.exe`regex_automata::hybrid::regex::Regex::try_search (30,317 samples, 4.96%)</title><rect x="38.9486%" y="325" width="4.9551%" height="15" fill="rgb(236,179,52)" fg:x="238301" fg:w="30317"/><text x="39.1986%" y="335.50">rust_p..</text></g><g><title>rust_parser.exe`regex_automata::util::search::Match::new&lt;core::ops::range::Range&lt;usize&gt; &gt;(regex_automata::util::primitives::PatternID, core::ops::range::Range (160 samples, 0.03%)</title><rect x="43.8776%" y="309" width="0.0262%" height="15" fill="rgb(213,23,39)" fg:x="268458" fg:w="160"/><text x="44.1276%" y="319.50"></text></g><g><title>rust_parser.exe`core::option::impl$40::branch&lt;ref$&lt;regex_automata::meta::wrappers::OnePassEngine&gt; &gt;(enum2$&lt;core::option::Option&lt;ref$ (75 samples, 0.01%)</title><rect x="43.9119%" y="341" width="0.0123%" height="15" fill="rgb(238,48,10)" fg:x="268668" fg:w="75"/><text x="44.1619%" y="351.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::wrappers::OnePass::get (211 samples, 0.03%)</title><rect x="43.9037%" y="357" width="0.0345%" height="15" fill="rgb(251,196,23)" fg:x="268618" fg:w="211"/><text x="44.1537%" y="367.50"></text></g><g><title>rust_parser.exe`regex_automata::util::search::Input::anchored(regex_automata::util::search::Input, enum2$ (316 samples, 0.05%)</title><rect x="43.9382%" y="357" width="0.0516%" height="15" fill="rgb(250,152,24)" fg:x="268829" fg:w="316"/><text x="44.1882%" y="367.50"></text></g><g><title>rust_parser.exe`regex_automata::util::search::Input::set_anchored(enum2$ (119 samples, 0.02%)</title><rect x="43.9704%" y="341" width="0.0194%" height="15" fill="rgb(209,150,17)" fg:x="269026" fg:w="119"/><text x="44.2204%" y="351.50"></text></g><g><title>rust_parser.exe`regex_automata::util::search::Input::span&lt;core::ops::range::Range&lt;usize&gt; &gt;(regex_automata::util::search::Input, core::ops::range::Range (495 samples, 0.08%)</title><rect x="43.9899%" y="357" width="0.0809%" height="15" fill="rgb(234,202,34)" fg:x="269145" fg:w="495"/><text x="44.2399%" y="367.50"></text></g><g><title>rust_parser.exe`regex_automata::util::search::Input::set_span&lt;core::ops::range::Range&lt;usize&gt; &gt;(core::ops::range::Range (179 samples, 0.03%)</title><rect x="44.0415%" y="341" width="0.0293%" height="15" fill="rgb(253,148,53)" fg:x="269461" fg:w="179"/><text x="44.2915%" y="351.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::strategy::impl$4::search_slots(regex_automata::meta::strategy::Core*, regex_automata::meta::regex::Cache*, regex_automata::util::search::Input*, ref_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option (222,384 samples, 36.35%)</title><rect x="7.7599%" y="373" width="36.3471%" height="15" fill="rgb(218,129,16)" fg:x="47478" fg:w="222384"/><text x="8.0099%" y="383.50">rust_parser.exe`regex_automata::meta::strategy::impl$4::sea..</text></g><g><title>rust_parser.exe`regex_automata::util::search::impl$25::clone (137 samples, 0.02%)</title><rect x="44.0847%" y="357" width="0.0224%" height="15" fill="rgb(216,85,19)" fg:x="269725" fg:w="137"/><text x="44.3347%" y="367.50"></text></g><g><title>rust_parser.exe`core::sync::atomic::AtomicUsize::load (186 samples, 0.03%)</title><rect x="44.1337%" y="341" width="0.0304%" height="15" fill="rgb(235,228,7)" fg:x="270025" fg:w="186"/><text x="44.3837%" y="351.50"></text></g><g><title>rust_parser.exe`core::sync::atomic::atomic_load&lt;usize&gt; (167 samples, 0.03%)</title><rect x="44.1368%" y="325" width="0.0273%" height="15" fill="rgb(245,175,0)" fg:x="270044" fg:w="167"/><text x="44.3868%" y="335.50"></text></g><g><title>rust_parser.exe`core::sync::atomic::AtomicUsize::store (68 samples, 0.01%)</title><rect x="44.1641%" y="341" width="0.0111%" height="15" fill="rgb(208,168,36)" fg:x="270211" fg:w="68"/><text x="44.4141%" y="351.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;ref$&lt;usize&gt; &gt; &gt;::ok_or(enum2$&lt;core::option::Option&lt;ref$ (70 samples, 0.01%)</title><rect x="44.2195%" y="309" width="0.0114%" height="15" fill="rgb(246,171,24)" fg:x="270550" fg:w="70"/><text x="44.4695%" y="319.50"></text></g><g><title>rust_parser.exe`regex_automata::util::pool::inner::THREAD_ID::__getit::__KEY (111 samples, 0.02%)</title><rect x="44.2359%" y="293" width="0.0181%" height="15" fill="rgb(215,142,24)" fg:x="270650" fg:w="111"/><text x="44.4859%" y="303.50"></text></g><g><title>rust_parser.exe`regex_automata::util::pool::inner::THREAD_ID::__getit(enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;core::option::Option (341 samples, 0.06%)</title><rect x="44.2310%" y="309" width="0.0557%" height="15" fill="rgb(250,187,7)" fg:x="270620" fg:w="341"/><text x="44.4810%" y="319.50"></text></g><g><title>rust_parser.exe`std::sys::common::thread_local::fast_local::Key&lt;usize&gt;::get&lt;usize,regex_automata::util::pool::inner::THREAD_ID::__getit::closure_env$0&gt; (200 samples, 0.03%)</title><rect x="44.2540%" y="293" width="0.0327%" height="15" fill="rgb(228,66,33)" fg:x="270761" fg:w="200"/><text x="44.5040%" y="303.50"></text></g><g><title>rust_parser.exe`std::sys::common::thread_local::lazy::LazyKeyInner&lt;usize&gt;::get&lt;usize&gt; (114 samples, 0.02%)</title><rect x="44.2681%" y="277" width="0.0186%" height="15" fill="rgb(234,215,21)" fg:x="270847" fg:w="114"/><text x="44.5181%" y="287.50"></text></g><g><title>rust_parser.exe`regex_automata::util::pool::Pool&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$&lt;Output,regex_automata::meta::regex::Cache&gt; &gt;,core::marker::Send,core::marker::Sync,core::panic::unwind_safe::RefUnwindSafe,core::panic::unwind_safe::UnwindSafe&gt;,alloc::alloc::Global&gt; &gt;::get&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$&lt;Output,regex_automata::meta::regex::Cache&gt; &gt;,core::marker::Send,core::marker::Sync,core::panic::unwind_safe::RefUnwindSafe,core::panic::unwind_safe::UnwindSafe&gt;,alloc::alloc::Global&gt; &gt; (1,149 samples, 0.19%)</title><rect x="44.1071%" y="373" width="0.1878%" height="15" fill="rgb(222,191,20)" fg:x="269862" fg:w="1149"/><text x="44.3571%" y="383.50"></text></g><g><title>rust_parser.exe`regex_automata::util::pool::inner::Pool&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$&lt;Output,regex_automata::meta::regex::Cache&gt; &gt;,core::marker::Send,core::marker::Sync,core::panic::unwind_safe::RefUnwindSafe,core::panic::unwind_safe::UnwindSafe&gt;,alloc::alloc::Global&gt; &gt;::get&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$&lt;Output,regex_automata::meta::regex::Cache&gt; &gt;,core::marker::Send,core::marker::Sync,core::panic::unwind_safe::RefUnwindSafe,core::panic::unwind_safe::UnwindSafe&gt;,alloc::alloc::Global&gt; &gt; (1,053 samples, 0.17%)</title><rect x="44.1228%" y="357" width="0.1721%" height="15" fill="rgb(245,79,54)" fg:x="269958" fg:w="1053"/><text x="44.3728%" y="367.50"></text></g><g><title>rust_parser.exe`std::thread::local::LocalKey&lt;usize&gt;::with&lt;usize,regex_automata::util::pool::inner::impl$4::get::closure_env$0&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$&lt;Output,regex_automata::meta::regex::Cache&gt; &gt;,core::marker::Send,core::marker::Sync,core::panic::unwind_safe::RefUnwindSafe,core::panic::unwind_safe::UnwindSafe&gt;,alloc::alloc::Global&gt; &gt;,usize&gt;(regex_automata::util::pool::inner::impl$4::get::closure_env$0&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$ (697 samples, 0.11%)</title><rect x="44.1809%" y="341" width="0.1139%" height="15" fill="rgb(240,10,37)" fg:x="270314" fg:w="697"/><text x="44.4309%" y="351.50"></text></g><g><title>rust_parser.exe`std::thread::local::LocalKey&lt;usize&gt;::try_with&lt;usize,regex_automata::util::pool::inner::impl$4::get::closure_env$0&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$&lt;Output,regex_automata::meta::regex::Cache&gt; &gt;,core::marker::Send,core::marker::Sync,core::panic::unwind_safe::RefUnwindSafe,core::panic::unwind_safe::UnwindSafe&gt;,alloc::alloc::Global&gt; &gt;,usize&gt;(regex_automata::util::pool::inner::impl$4::get::closure_env$0&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$ (605 samples, 0.10%)</title><rect x="44.1960%" y="325" width="0.0989%" height="15" fill="rgb(214,192,32)" fg:x="270406" fg:w="605"/><text x="44.4460%" y="335.50"></text></g><g><title>rust_parser.exe`regex_automata::util::pool::PoolGuard&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$&lt;Output,regex_automata::meta::regex::Cache&gt; &gt;,core::marker::Send,core::marker::Sync,core::panic::unwind_safe::RefUnwindSafe,core::panic::unwind_safe::UnwindSafe&gt;,alloc::alloc::Global&gt; &gt;::put&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$&lt;Output,regex_automata::meta::regex::Cache&gt; &gt;,core::marker::Send,core::marker::Sync,core::panic::unwind_safe::RefUnwindSafe,core::panic::unwind_safe::UnwindSafe&gt;,alloc::alloc::Global&gt; &gt;(regex_automata::util::pool::PoolGuard&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$ (450 samples, 0.07%)</title><rect x="44.2949%" y="373" width="0.0735%" height="15" fill="rgb(209,36,54)" fg:x="271011" fg:w="450"/><text x="44.5449%" y="383.50"></text></g><g><title>rust_parser.exe`regex_automata::util::pool::inner::PoolGuard&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$&lt;Output,regex_automata::meta::regex::Cache&gt; &gt;,core::marker::Send,core::marker::Sync,core::panic::unwind_safe::RefUnwindSafe,core::panic::unwind_safe::UnwindSafe&gt;,alloc::alloc::Global&gt; &gt;::put&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$&lt;Output,regex_automata::meta::regex::Cache&gt; &gt;,core::marker::Send,core::marker::Sync,core::panic::unwind_safe::RefUnwindSafe,core::panic::unwind_safe::UnwindSafe&gt;,alloc::alloc::Global&gt; &gt;(regex_automata::util::pool::inner::PoolGuard&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$ (402 samples, 0.07%)</title><rect x="44.3027%" y="357" width="0.0657%" height="15" fill="rgb(220,10,11)" fg:x="271059" fg:w="402"/><text x="44.5527%" y="367.50"></text></g><g><title>rust_parser.exe`regex_automata::util::pool::inner::PoolGuard&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$&lt;Output,regex_automata::meta::regex::Cache&gt; &gt;,core::marker::Send,core::marker::Sync,core::panic::unwind_safe::RefUnwindSafe,core::panic::unwind_safe::UnwindSafe&gt;,alloc::alloc::Global&gt; &gt;::put_imp (283 samples, 0.05%)</title><rect x="44.3222%" y="341" width="0.0463%" height="15" fill="rgb(221,106,17)" fg:x="271178" fg:w="283"/><text x="44.5722%" y="351.50"></text></g><g><title>rust_parser.exe`core::sync::atomic::AtomicUsize::store (171 samples, 0.03%)</title><rect x="44.3405%" y="325" width="0.0279%" height="15" fill="rgb(251,142,44)" fg:x="271290" fg:w="171"/><text x="44.5905%" y="335.50"></text></g><g><title>rust_parser.exe`core::sync::atomic::atomic_store&lt;usize&gt; (89 samples, 0.01%)</title><rect x="44.3539%" y="309" width="0.0145%" height="15" fill="rgb(238,13,15)" fg:x="271372" fg:w="89"/><text x="44.6039%" y="319.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::regex::Regex::search_slots(regex_automata::util::search::Input*, ref_mut$&lt;slice2$&lt;enum2$&lt;core::option::Option (226,012 samples, 36.94%)</title><rect x="7.4837%" y="389" width="36.9401%" height="15" fill="rgb(208,107,27)" fg:x="45788" fg:w="226012"/><text x="7.7337%" y="399.50">rust_parser.exe`regex_automata::meta::regex::Regex::search_s..</text></g><g><title>rust_parser.exe`regex_automata::util::pool::impl$5::deref_mut&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$&lt;Output,regex_automata::meta::regex::Cache&gt; &gt;,core::marker::Send,core::marker::Sync,core::panic::unwind_safe::RefUnwindSafe,core::panic::unwind_safe::UnwindSafe&gt;,alloc::alloc::Global&gt; &gt;(regex_automata::util::pool::PoolGuard&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$ (339 samples, 0.06%)</title><rect x="44.3684%" y="373" width="0.0554%" height="15" fill="rgb(205,136,37)" fg:x="271461" fg:w="339"/><text x="44.6184%" y="383.50"></text></g><g><title>rust_parser.exe`regex_automata::util::pool::inner::PoolGuard&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$&lt;Output,regex_automata::meta::regex::Cache&gt; &gt;,core::marker::Send,core::marker::Sync,core::panic::unwind_safe::RefUnwindSafe,core::panic::unwind_safe::UnwindSafe&gt;,alloc::alloc::Global&gt; &gt;::value_mut&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;&gt;,assoc$&lt;Output,regex_automata::meta::regex::Cache&gt; &gt;,core::marker::Send,core::marker::Sync,core::panic::unwind_safe::RefUnwindSafe,core::panic::unwind_safe::UnwindSafe&gt;,alloc::alloc::Global&gt; &gt; (265 samples, 0.04%)</title><rect x="44.3805%" y="357" width="0.0433%" height="15" fill="rgb(250,205,27)" fg:x="271535" fg:w="265"/><text x="44.6305%" y="367.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;regex_automata::meta::regex::Cache&gt; &gt;::as_mut&lt;regex_automata::meta::regex::Cache&gt; (87 samples, 0.01%)</title><rect x="44.4096%" y="341" width="0.0142%" height="15" fill="rgb(210,80,43)" fg:x="271713" fg:w="87"/><text x="44.6596%" y="351.50"></text></g><g><title>rust_parser.exe`regex_automata::util::captures::Captures::set_pattern(enum2$&lt;core::option::Option (63 samples, 0.01%)</title><rect x="44.4238%" y="389" width="0.0103%" height="15" fill="rgb(247,160,36)" fg:x="271800" fg:w="63"/><text x="44.6738%" y="399.50"></text></g><g><title>rust_parser.exe`regex_automata::meta::regex::Regex::search_captures (226,292 samples, 36.99%)</title><rect x="7.4648%" y="405" width="36.9858%" height="15" fill="rgb(234,13,49)" fg:x="45672" fg:w="226292"/><text x="7.7148%" y="415.50">rust_parser.exe`regex_automata::meta::regex::Regex::search_c..</text></g><g><title>rust_parser.exe`regex_automata::util::captures::Captures::slots_mut (101 samples, 0.02%)</title><rect x="44.4341%" y="389" width="0.0165%" height="15" fill="rgb(234,122,0)" fg:x="271863" fg:w="101"/><text x="44.6841%" y="399.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$9::deref_mut&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt;,alloc::alloc::Global&gt;(alloc::vec::Vec&lt;enum2$&lt;core::option::Option (85 samples, 0.01%)</title><rect x="44.4367%" y="373" width="0.0139%" height="15" fill="rgb(207,146,38)" fg:x="271879" fg:w="85"/><text x="44.6867%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt;,alloc::alloc::Global&gt;::as_mut_ptr (70 samples, 0.01%)</title><rect x="44.4392%" y="357" width="0.0114%" height="15" fill="rgb(207,177,25)" fg:x="271894" fg:w="70"/><text x="44.6892%" y="367.50"></text></g><g><title>rust_parser.exe`regex_automata::util::captures::Captures::is_match (80 samples, 0.01%)</title><rect x="44.4506%" y="405" width="0.0131%" height="15" fill="rgb(211,178,42)" fg:x="271964" fg:w="80"/><text x="44.7006%" y="415.50"></text></g><g><title>rust_parser.exe`regex_automata::util::search::Input::new&lt;str$&gt;(ref$ (175 samples, 0.03%)</title><rect x="44.4637%" y="405" width="0.0286%" height="15" fill="rgb(230,69,54)" fg:x="272044" fg:w="175"/><text x="44.7137%" y="415.50"></text></g><g><title>rust_parser.exe`core::convert::impl$3::into&lt;core::ops::range::Range&lt;usize&gt;,regex_automata::util::search::Span&gt;(core::ops::range::Range (79 samples, 0.01%)</title><rect x="44.5482%" y="373" width="0.0129%" height="15" fill="rgb(214,135,41)" fg:x="272561" fg:w="79"/><text x="44.7982%" y="383.50"></text></g><g><title>rust_parser.exe`regex::regex::string::Regex::captures(ref$ (232,601 samples, 38.02%)</title><rect x="6.5447%" y="437" width="38.0170%" height="15" fill="rgb(237,67,25)" fg:x="40043" fg:w="232601"/><text x="6.7947%" y="447.50">rust_parser.exe`regex::regex::string::Regex::captures(ref$</text></g><g><title>rust_parser.exe`regex::regex::string::Regex::captures_at(ref$ (232,572 samples, 38.01%)</title><rect x="6.5495%" y="421" width="38.0123%" height="15" fill="rgb(222,189,50)" fg:x="40072" fg:w="232572"/><text x="6.7995%" y="431.50">rust_parser.exe`regex::regex::string::Regex::captures_at(ref$</text></g><g><title>rust_parser.exe`regex_automata::util::search::Input::span&lt;core::ops::range::Range&lt;usize&gt; &gt;(regex_automata::util::search::Input, core::ops::range::Range (425 samples, 0.07%)</title><rect x="44.4923%" y="405" width="0.0695%" height="15" fill="rgb(245,148,34)" fg:x="272219" fg:w="425"/><text x="44.7423%" y="415.50"></text></g><g><title>rust_parser.exe`regex_automata::util::search::Input::set_span&lt;core::ops::range::Range&lt;usize&gt; &gt;(core::ops::range::Range (200 samples, 0.03%)</title><rect x="44.5291%" y="389" width="0.0327%" height="15" fill="rgb(222,29,6)" fg:x="272444" fg:w="200"/><text x="44.7791%" y="399.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;::unwrap_or_else&lt;ref$&lt;str$&gt;,regex::regex::string::impl$15::index::closure_env$1&gt;(enum2$&lt;core::option::Option&lt;ref$ (180 samples, 0.03%)</title><rect x="44.5927%" y="421" width="0.0294%" height="15" fill="rgb(221,189,43)" fg:x="272833" fg:w="180"/><text x="44.8427%" y="431.50"></text></g><g><title>rust_parser.exe`core::str::impl$0::is_char_boundary(ref$ (804 samples, 0.13%)</title><rect x="44.8055%" y="325" width="0.1314%" height="15" fill="rgb(207,36,27)" fg:x="274135" fg:w="804"/><text x="45.0555%" y="335.50"></text></g><g><title>rust_parser.exe`core::str::impl$0::as_bytes(ref$ (175 samples, 0.03%)</title><rect x="44.9083%" y="309" width="0.0286%" height="15" fill="rgb(217,90,24)" fg:x="274764" fg:w="175"/><text x="45.1583%" y="319.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$2::get(unsigned long long, ref$&lt;slice2$ (136 samples, 0.02%)</title><rect x="44.9146%" y="293" width="0.0222%" height="15" fill="rgb(224,66,35)" fg:x="274803" fg:w="136"/><text x="45.1646%" y="303.50"></text></g><g><title>rust_parser.exe`core::str::traits::impl$4::index&lt;core::ops::range::Range&lt;usize&gt; &gt;(ref$&lt;str$&gt;, core::ops::range::Range (1,621 samples, 0.26%)</title><rect x="44.6883%" y="373" width="0.2649%" height="15" fill="rgb(221,13,50)" fg:x="273418" fg:w="1621"/><text x="44.9383%" y="383.50"></text></g><g><title>rust_parser.exe`core::str::traits::impl$7::index(core::ops::range::Range&lt;usize&gt;, ref$ (1,464 samples, 0.24%)</title><rect x="44.7139%" y="357" width="0.2393%" height="15" fill="rgb(236,68,49)" fg:x="273575" fg:w="1464"/><text x="44.9639%" y="367.50"></text></g><g><title>rust_parser.exe`core::str::traits::impl$7::get(core::ops::range::Range&lt;usize&gt;, ref$ (1,228 samples, 0.20%)</title><rect x="44.7525%" y="341" width="0.2007%" height="15" fill="rgb(229,146,28)" fg:x="273811" fg:w="1228"/><text x="45.0025%" y="351.50"></text></g><g><title>rust_parser.exe`core::str::traits::impl$7::get_unchecked(core::ops::range::Range&lt;usize&gt;, ptr_const$ (100 samples, 0.02%)</title><rect x="44.9369%" y="325" width="0.0163%" height="15" fill="rgb(225,31,38)" fg:x="274939" fg:w="100"/><text x="45.1869%" y="335.50"></text></g><g><title>rust_parser.exe`core::ptr::slice_from_raw_parts (75 samples, 0.01%)</title><rect x="44.9409%" y="309" width="0.0123%" height="15" fill="rgb(250,208,3)" fg:x="274964" fg:w="75"/><text x="45.1909%" y="319.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::cast (75 samples, 0.01%)</title><rect x="44.9409%" y="293" width="0.0123%" height="15" fill="rgb(246,54,23)" fg:x="274964" fg:w="75"/><text x="45.1909%" y="303.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;regex::regex::string::Match&gt; &gt;::map&lt;regex::regex::string::Match,ref$&lt;str$&gt;,regex::regex::string::impl$15::index::closure_env$0&gt;(enum2$&lt;core::option::Option (2,133 samples, 0.35%)</title><rect x="44.6221%" y="421" width="0.3486%" height="15" fill="rgb(243,76,11)" fg:x="273013" fg:w="2133"/><text x="44.8721%" y="431.50"></text></g><g><title>rust_parser.exe`regex::regex::string::impl$15::index::closure$0 (1,836 samples, 0.30%)</title><rect x="44.6706%" y="405" width="0.3001%" height="15" fill="rgb(245,21,50)" fg:x="273310" fg:w="1836"/><text x="44.9206%" y="415.50"></text></g><g><title>rust_parser.exe`regex::regex::string::Match::as_str (1,803 samples, 0.29%)</title><rect x="44.6760%" y="389" width="0.2947%" height="15" fill="rgb(228,9,43)" fg:x="273343" fg:w="1803"/><text x="44.9260%" y="399.50"></text></g><g><title>rust_parser.exe`regex::regex::string::Match::range (107 samples, 0.02%)</title><rect x="44.9532%" y="373" width="0.0175%" height="15" fill="rgb(208,100,47)" fg:x="275039" fg:w="107"/><text x="45.2032%" y="383.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;regex_automata::util::search::Span&gt; &gt;::map&lt;regex_automata::util::search::Span,regex::regex::string::Match,regex::regex::string::impl$12::name::closure_env$0&gt;(enum2$&lt;core::option::Option (523 samples, 0.09%)</title><rect x="44.9950%" y="405" width="0.0855%" height="15" fill="rgb(232,26,8)" fg:x="275295" fg:w="523"/><text x="45.2450%" y="415.50"></text></g><g><title>rust_parser.exe`regex::regex::string::impl$12::name::closure$0 (244 samples, 0.04%)</title><rect x="45.0406%" y="389" width="0.0399%" height="15" fill="rgb(216,166,38)" fg:x="275574" fg:w="244"/><text x="45.2906%" y="399.50"></text></g><g><title>rust_parser.exe`regex::regex::string::Match::new(ref$ (155 samples, 0.03%)</title><rect x="45.0552%" y="373" width="0.0253%" height="15" fill="rgb(251,202,51)" fg:x="275663" fg:w="155"/><text x="45.3052%" y="383.50"></text></g><g><title>rust_parser.exe`core::option::impl$40::branch&lt;regex_automata::util::primitives::PatternID&gt;(enum2$&lt;core::option::Option (118 samples, 0.02%)</title><rect x="45.1296%" y="389" width="0.0193%" height="15" fill="rgb(254,216,34)" fg:x="276118" fg:w="118"/><text x="45.3796%" y="399.50"></text></g><g><title>rust_parser.exe`core::option::impl$40::branch&lt;usize&gt;(enum2$&lt;core::option::Option (154 samples, 0.03%)</title><rect x="45.1488%" y="389" width="0.0252%" height="15" fill="rgb(251,32,27)" fg:x="276236" fg:w="154"/><text x="45.3988%" y="399.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt;,alloc::alloc::Global&gt;(alloc::vec::Vec&lt;enum2$&lt;core::option::Option (208 samples, 0.03%)</title><rect x="45.3396%" y="373" width="0.0340%" height="15" fill="rgb(208,127,28)" fg:x="277403" fg:w="208"/><text x="45.5896%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt;,alloc::alloc::Global&gt;::as_ptr (168 samples, 0.03%)</title><rect x="45.3461%" y="357" width="0.0275%" height="15" fill="rgb(224,137,22)" fg:x="277443" fg:w="168"/><text x="45.5961%" y="367.50"></text></g><g><title>rust_parser.exe`core::ptr::slice_from_raw_parts(enum2$&lt;core::option::Option (125 samples, 0.02%)</title><rect x="45.3532%" y="341" width="0.0204%" height="15" fill="rgb(254,70,32)" fg:x="277486" fg:w="125"/><text x="45.6032%" y="351.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::cast(enum2$&lt;core::option::Option (125 samples, 0.02%)</title><rect x="45.3532%" y="325" width="0.0204%" height="15" fill="rgb(229,75,37)" fg:x="277486" fg:w="125"/><text x="45.6032%" y="335.50"></text></g><g><title>rust_parser.exe`core::num::impl$11::checked_add (156 samples, 0.03%)</title><rect x="45.3736%" y="373" width="0.0255%" height="15" fill="rgb(252,64,23)" fg:x="277611" fg:w="156"/><text x="45.6236%" y="383.50"></text></g><g><title>rust_parser.exe`core::num::impl$11::checked_mul (373 samples, 0.06%)</title><rect x="45.3991%" y="373" width="0.0610%" height="15" fill="rgb(232,162,48)" fg:x="277767" fg:w="373"/><text x="45.6491%" y="383.50"></text></g><g><title>rust_parser.exe`core::num::impl$11::overflowing_mul (89 samples, 0.01%)</title><rect x="45.4455%" y="357" width="0.0145%" height="15" fill="rgb(246,160,12)" fg:x="278051" fg:w="89"/><text x="45.6955%" y="367.50"></text></g><g><title>rust_parser.exe`core::option::impl$40::branch&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt; &gt;(enum2$&lt;core::option::Option&lt;enum2$&lt;core::option::Option (275 samples, 0.04%)</title><rect x="45.4600%" y="373" width="0.0449%" height="15" fill="rgb(247,166,0)" fg:x="278140" fg:w="275"/><text x="45.7100%" y="383.50"></text></g><g><title>rust_parser.exe`core::option::impl$40::branch&lt;regex_automata::util::primitives::NonMaxUsize&gt;(enum2$&lt;core::option::Option (308 samples, 0.05%)</title><rect x="45.5050%" y="373" width="0.0503%" height="15" fill="rgb(249,219,21)" fg:x="278415" fg:w="308"/><text x="45.7550%" y="383.50"></text></g><g><title>rust_parser.exe`core::option::impl$40::branch&lt;regex_automata::util::primitives::PatternID&gt;(enum2$&lt;core::option::Option (71 samples, 0.01%)</title><rect x="45.5553%" y="373" width="0.0116%" height="15" fill="rgb(205,209,3)" fg:x="278723" fg:w="71"/><text x="45.8053%" y="383.50"></text></g><g><title>rust_parser.exe`core::option::impl$40::branch&lt;usize&gt;(enum2$&lt;core::option::Option (456 samples, 0.07%)</title><rect x="45.5669%" y="373" width="0.0745%" height="15" fill="rgb(243,44,1)" fg:x="278794" fg:w="456"/><text x="45.8169%" y="383.50"></text></g><g><title>rust_parser.exe`core::slice::impl$0::get&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt;,usize&gt;(ref$&lt;slice2$&lt;enum2$&lt;core::option::Option (382 samples, 0.06%)</title><rect x="45.6415%" y="373" width="0.0624%" height="15" fill="rgb(206,159,16)" fg:x="279250" fg:w="382"/><text x="45.8915%" y="383.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$2::get&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt; &gt;(unsigned long long, ref$&lt;slice2$&lt;enum2$&lt;core::option::Option (196 samples, 0.03%)</title><rect x="45.6719%" y="357" width="0.0320%" height="15" fill="rgb(244,77,30)" fg:x="279436" fg:w="196"/><text x="45.9219%" y="367.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;ref$&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt; &gt; &gt; &gt;::copied&lt;enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt; &gt; &gt;(enum2$&lt;core::option::Option&lt;ref$&lt;enum2$&lt;core::option::Option (338 samples, 0.06%)</title><rect x="45.7039%" y="373" width="0.0552%" height="15" fill="rgb(218,69,12)" fg:x="279632" fg:w="338"/><text x="45.9539%" y="383.50"></text></g><g><title>rust_parser.exe`regex_automata::util::captures::GroupInfo::pattern_len (140 samples, 0.02%)</title><rect x="45.7694%" y="373" width="0.0229%" height="15" fill="rgb(212,87,7)" fg:x="280033" fg:w="140"/><text x="46.0194%" y="383.50"></text></g><g><title>rust_parser.exe`regex_automata::util::captures::GroupInfoInner::pattern_len (80 samples, 0.01%)</title><rect x="45.7792%" y="357" width="0.0131%" height="15" fill="rgb(245,114,25)" fg:x="280093" fg:w="80"/><text x="46.0292%" y="367.50"></text></g><g><title>rust_parser.exe`regex_automata::util::captures::Captures::get_group (4,012 samples, 0.66%)</title><rect x="45.1740%" y="389" width="0.6557%" height="15" fill="rgb(210,61,42)" fg:x="276390" fg:w="4012"/><text x="45.4240%" y="399.50"></text></g><g><title>rust_parser.exe`regex_automata::util::primitives::NonMaxUsize::get (229 samples, 0.04%)</title><rect x="45.7923%" y="373" width="0.0374%" height="15" fill="rgb(211,52,33)" fg:x="280173" fg:w="229"/><text x="46.0423%" y="383.50"></text></g><g><title>rust_parser.exe`core::num::nonzero::NonZeroUsize::get (160 samples, 0.03%)</title><rect x="45.8036%" y="357" width="0.0262%" height="15" fill="rgb(234,58,33)" fg:x="280242" fg:w="160"/><text x="46.0536%" y="367.50"></text></g><g><title>rust_parser.exe`alloc::sync::impl$29::deref&lt;regex_automata::util::captures::GroupInfoInner,alloc::alloc::Global&gt;(alloc::sync::Arc (195 samples, 0.03%)</title><rect x="45.9017%" y="373" width="0.0319%" height="15" fill="rgb(220,115,36)" fg:x="280842" fg:w="195"/><text x="46.1517%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::sync::Arc&lt;regex_automata::util::captures::GroupInfoInner,alloc::alloc::Global&gt;::inner (181 samples, 0.03%)</title><rect x="45.9040%" y="357" width="0.0296%" height="15" fill="rgb(243,153,54)" fg:x="280856" fg:w="181"/><text x="46.1540%" y="367.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;regex_automata::util::captures::GroupInfoInner&gt; &gt;::as_ref (181 samples, 0.03%)</title><rect x="45.9040%" y="341" width="0.0296%" height="15" fill="rgb(251,47,18)" fg:x="280856" fg:w="181"/><text x="46.1540%" y="351.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;std::collections::hash::map::HashMap&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;::ptr (73 samples, 0.01%)</title><rect x="45.9438%" y="341" width="0.0119%" height="15" fill="rgb(242,102,42)" fg:x="281100" fg:w="73"/><text x="46.1938%" y="351.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref&lt;std::collections::hash::map::HashMap&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;(alloc::vec::Vec&lt;std::collections::hash::map::HashMap&lt;alloc::sync::Arc (256 samples, 0.04%)</title><rect x="45.9335%" y="373" width="0.0418%" height="15" fill="rgb(234,31,38)" fg:x="281037" fg:w="256"/><text x="46.1835%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;std::collections::hash::map::HashMap&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex,std::collections::hash::map::RandomState&gt;,alloc::alloc::Global&gt;::as_ptr (208 samples, 0.03%)</title><rect x="45.9414%" y="357" width="0.0340%" height="15" fill="rgb(221,117,51)" fg:x="281085" fg:w="208"/><text x="46.1914%" y="367.50"></text></g><g><title>rust_parser.exe`core::ptr::slice_from_raw_parts(std::collections::hash::map::HashMap&lt;alloc::sync::Arc (120 samples, 0.02%)</title><rect x="45.9558%" y="341" width="0.0196%" height="15" fill="rgb(212,20,18)" fg:x="281173" fg:w="120"/><text x="46.2058%" y="351.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::cast(std::collections::hash::map::HashMap&lt;alloc::sync::Arc (120 samples, 0.02%)</title><rect x="45.9558%" y="325" width="0.0196%" height="15" fill="rgb(245,133,36)" fg:x="281173" fg:w="120"/><text x="46.2058%" y="335.50"></text></g><g><title>rust_parser.exe`core::option::impl$40::branch&lt;ref$&lt;std::collections::hash::map::HashMap&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex,std::collections::hash::map::RandomState&gt; &gt; &gt;(enum2$&lt;core::option::Option&lt;ref$&lt;std::collections::hash::map::HashMap&lt;alloc::sync::Arc (135 samples, 0.02%)</title><rect x="45.9754%" y="373" width="0.0221%" height="15" fill="rgb(212,6,19)" fg:x="281293" fg:w="135"/><text x="46.2254%" y="383.50"></text></g><g><title>rust_parser.exe`core::slice::impl$0::get&lt;std::collections::hash::map::HashMap&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex,std::collections::hash::map::RandomState&gt;,usize&gt;(ref$&lt;slice2$&lt;std::collections::hash::map::HashMap&lt;alloc::sync::Arc (160 samples, 0.03%)</title><rect x="45.9974%" y="373" width="0.0262%" height="15" fill="rgb(218,1,36)" fg:x="281428" fg:w="160"/><text x="46.2474%" y="383.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$2::get&lt;std::collections::hash::map::HashMap&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex,std::collections::hash::map::RandomState&gt; &gt;(unsigned long long, ref$&lt;slice2$&lt;std::collections::hash::map::HashMap&lt;alloc::sync::Arc (98 samples, 0.02%)</title><rect x="46.0076%" y="357" width="0.0160%" height="15" fill="rgb(246,84,54)" fg:x="281490" fg:w="98"/><text x="46.2576%" y="367.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;ref$&lt;regex_automata::util::primitives::SmallIndex&gt; &gt; &gt;::cloned&lt;regex_automata::util::primitives::SmallIndex&gt;(enum2$&lt;core::option::Option&lt;ref$ (219 samples, 0.04%)</title><rect x="46.0236%" y="373" width="0.0358%" height="15" fill="rgb(242,110,6)" fg:x="281588" fg:w="219"/><text x="46.2736%" y="383.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;regex_automata::util::primitives::SmallIndex&gt; &gt;::map&lt;regex_automata::util::primitives::SmallIndex,usize,regex_automata::util::captures::impl$7::to_index::closure_env$0&gt;(enum2$&lt;core::option::Option (304 samples, 0.05%)</title><rect x="46.0594%" y="373" width="0.0497%" height="15" fill="rgb(214,47,5)" fg:x="281807" fg:w="304"/><text x="46.3094%" y="383.50"></text></g><g><title>rust_parser.exe`regex_automata::util::captures::impl$7::to_index::closure$0 (94 samples, 0.02%)</title><rect x="46.0937%" y="357" width="0.0154%" height="15" fill="rgb(218,159,25)" fg:x="282017" fg:w="94"/><text x="46.3437%" y="367.50"></text></g><g><title>rust_parser.exe`regex_automata::util::primitives::PatternID::as_usize (71 samples, 0.01%)</title><rect x="46.1091%" y="373" width="0.0116%" height="15" fill="rgb(215,211,28)" fg:x="282111" fg:w="71"/><text x="46.3591%" y="383.50"></text></g><g><title>rust_parser.exe`core::num::impl$9::rotate_left (108 samples, 0.02%)</title><rect x="46.3781%" y="181" width="0.0177%" height="15" fill="rgb(238,59,32)" fg:x="283757" fg:w="108"/><text x="46.6281%" y="191.50"></text></g><g><title>rust_parser.exe`core::hash::sip::impl$8::c_rounds (496 samples, 0.08%)</title><rect x="46.3183%" y="197" width="0.0811%" height="15" fill="rgb(226,82,3)" fg:x="283391" fg:w="496"/><text x="46.5683%" y="207.50"></text></g><g><title>rust_parser.exe`core::intrinsics::copy_nonoverlapping (69 samples, 0.01%)</title><rect x="46.4443%" y="181" width="0.0113%" height="15" fill="rgb(240,164,32)" fg:x="284162" fg:w="69"/><text x="46.6943%" y="191.50"></text></g><g><title>rust_parser.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (360 samples, 0.06%)</title><rect x="46.3994%" y="197" width="0.0588%" height="15" fill="rgb(232,46,7)" fg:x="283887" fg:w="360"/><text x="46.6494%" y="207.50"></text></g><g><title>rust_parser.exe`core::intrinsics::copy_nonoverlapping (72 samples, 0.01%)</title><rect x="46.4582%" y="197" width="0.0118%" height="15" fill="rgb(229,129,53)" fg:x="284247" fg:w="72"/><text x="46.7082%" y="207.50"></text></g><g><title>rust_parser.exe`core::hash::sip::impl$4::write_str(core::hash::sip::SipHasher13*, ref$ (1,408 samples, 0.23%)</title><rect x="46.2420%" y="245" width="0.2301%" height="15" fill="rgb(234,188,29)" fg:x="282924" fg:w="1408"/><text x="46.4920%" y="255.50"></text></g><g><title>rust_parser.exe`core::hash::sip::impl$5::write_str(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$ (1,400 samples, 0.23%)</title><rect x="46.2433%" y="229" width="0.2288%" height="15" fill="rgb(246,141,4)" fg:x="282932" fg:w="1400"/><text x="46.4933%" y="239.50"></text></g><g><title>rust_parser.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (1,350 samples, 0.22%)</title><rect x="46.2514%" y="213" width="0.2206%" height="15" fill="rgb(229,23,39)" fg:x="282982" fg:w="1350"/><text x="46.5014%" y="223.50"></text></g><g><title>rust_parser.exe`core::cmp::min (326 samples, 0.05%)</title><rect x="46.5051%" y="229" width="0.0533%" height="15" fill="rgb(206,12,3)" fg:x="284534" fg:w="326"/><text x="46.7551%" y="239.50"></text></g><g><title>rust_parser.exe`core::cmp::Ord::min (326 samples, 0.05%)</title><rect x="46.5051%" y="213" width="0.0533%" height="15" fill="rgb(252,226,20)" fg:x="284534" fg:w="326"/><text x="46.7551%" y="223.50"></text></g><g><title>rust_parser.exe`core::cmp::min_by&lt;usize,core::cmp::Ordering (*)(ref$&lt;usize&gt;,ref$&lt;usize&gt;)&gt;(unsigned long long, unsigned long long, core::cmp::Ordering (*) (306 samples, 0.05%)</title><rect x="46.5084%" y="197" width="0.0500%" height="15" fill="rgb(216,123,35)" fg:x="284554" fg:w="306"/><text x="46.7584%" y="207.50"></text></g><g><title>rust_parser.exe`core::ops::function::FnOnce::call_once&lt;core::cmp::Ordering (*)(ref$&lt;usize&gt;,ref$&lt;usize&gt;),tuple$&lt;ref$&lt;usize&gt;,ref$&lt;usize&gt; &gt; &gt;(core::cmp::Ordering (*) (120 samples, 0.02%)</title><rect x="46.5388%" y="181" width="0.0196%" height="15" fill="rgb(212,68,40)" fg:x="284740" fg:w="120"/><text x="46.7888%" y="191.50"></text></g><g><title>rust_parser.exe`core::cmp::impls::impl$55::cmp (72 samples, 0.01%)</title><rect x="46.5466%" y="165" width="0.0118%" height="15" fill="rgb(254,125,32)" fg:x="284788" fg:w="72"/><text x="46.7966%" y="175.50"></text></g><g><title>rust_parser.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (232 samples, 0.04%)</title><rect x="46.5584%" y="229" width="0.0379%" height="15" fill="rgb(253,97,22)" fg:x="284860" fg:w="232"/><text x="46.8084%" y="239.50"></text></g><g><title>rust_parser.exe`core::hash::impls::impl$5::hash&lt;str$,std::collections::hash::map::DefaultHasher&gt;(ref$ (2,394 samples, 0.39%)</title><rect x="46.2083%" y="293" width="0.3913%" height="15" fill="rgb(241,101,14)" fg:x="282718" fg:w="2394"/><text x="46.4583%" y="303.50"></text></g><g><title>rust_parser.exe`core::hash::impls::impl$2::hash&lt;std::collections::hash::map::DefaultHasher&gt;(ref$ (2,269 samples, 0.37%)</title><rect x="46.2287%" y="277" width="0.3709%" height="15" fill="rgb(238,103,29)" fg:x="282843" fg:w="2269"/><text x="46.4787%" y="287.50"></text></g><g><title>rust_parser.exe`std::collections::hash::map::impl$86::write_str(std::collections::hash::map::DefaultHasher*, ref$ (2,212 samples, 0.36%)</title><rect x="46.2380%" y="261" width="0.3615%" height="15" fill="rgb(233,195,47)" fg:x="282900" fg:w="2212"/><text x="46.4880%" y="271.50"></text></g><g><title>rust_parser.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (780 samples, 0.13%)</title><rect x="46.4721%" y="245" width="0.1275%" height="15" fill="rgb(246,218,30)" fg:x="284332" fg:w="780"/><text x="46.7221%" y="255.50"></text></g><g><title>`0x7FF85D971490 (223 samples, 0.04%)</title><rect x="46.6926%" y="261" width="0.0364%" height="15" fill="rgb(219,145,47)" fg:x="285681" fg:w="223"/><text x="46.9426%" y="271.50"></text></g><g><title>rust_parser.exe`core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::new_with_keys (230 samples, 0.04%)</title><rect x="46.7691%" y="261" width="0.0376%" height="15" fill="rgb(243,12,26)" fg:x="286149" fg:w="230"/><text x="47.0191%" y="271.50"></text></g><g><title>rust_parser.exe`core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::reset (113 samples, 0.02%)</title><rect x="46.7882%" y="245" width="0.0185%" height="15" fill="rgb(214,87,16)" fg:x="286266" fg:w="113"/><text x="47.0382%" y="255.50"></text></g><g><title>rust_parser.exe`core::hash::sip::SipHasher13::new_with_keys (899 samples, 0.15%)</title><rect x="46.6615%" y="277" width="0.1469%" height="15" fill="rgb(208,99,42)" fg:x="285491" fg:w="899"/><text x="46.9115%" y="287.50"></text></g><g><title>rust_parser.exe`std::collections::hash::map::impl$83::build_hasher (1,288 samples, 0.21%)</title><rect x="46.5996%" y="293" width="0.2105%" height="15" fill="rgb(253,99,2)" fg:x="285112" fg:w="1288"/><text x="46.8496%" y="303.50"></text></g><g><title>rust_parser.exe`core::num::impl$9::rotate_left (137 samples, 0.02%)</title><rect x="46.9314%" y="245" width="0.0224%" height="15" fill="rgb(220,168,23)" fg:x="287142" fg:w="137"/><text x="47.1814%" y="255.50"></text></g><g><title>rust_parser.exe`core::hash::sip::impl$8::c_rounds (707 samples, 0.12%)</title><rect x="46.8423%" y="261" width="0.1156%" height="15" fill="rgb(242,38,24)" fg:x="286597" fg:w="707"/><text x="47.0923%" y="271.50"></text></g><g><title>rust_parser.exe`core::num::impl$9::rotate_left (263 samples, 0.04%)</title><rect x="47.2408%" y="245" width="0.0430%" height="15" fill="rgb(225,182,9)" fg:x="289035" fg:w="263"/><text x="47.4908%" y="255.50"></text></g><g><title>rust_parser.exe`hashbrown::map::make_hash(std::collections::hash::map::RandomState*, ref$ (6,892 samples, 1.13%)</title><rect x="46.1754%" y="325" width="1.1264%" height="15" fill="rgb(243,178,37)" fg:x="282517" fg:w="6892"/><text x="46.4254%" y="335.50"></text></g><g><title>rust_parser.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;str$&gt; &gt;(std::collections::hash::map::RandomState*, ref$ (6,863 samples, 1.12%)</title><rect x="46.1802%" y="309" width="1.1217%" height="15" fill="rgb(232,139,19)" fg:x="282546" fg:w="6863"/><text x="46.4302%" y="319.50"></text></g><g><title>rust_parser.exe`std::collections::hash::map::impl$86::finish (3,009 samples, 0.49%)</title><rect x="46.8101%" y="293" width="0.4918%" height="15" fill="rgb(225,201,24)" fg:x="286400" fg:w="3009"/><text x="47.0601%" y="303.50"></text></g><g><title>rust_parser.exe`core::hash::sip::impl$5::finish&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher (2,960 samples, 0.48%)</title><rect x="46.8181%" y="277" width="0.4838%" height="15" fill="rgb(221,47,46)" fg:x="286449" fg:w="2960"/><text x="47.0681%" y="287.50"></text></g><g><title>rust_parser.exe`core::hash::sip::impl$8::d_rounds (2,105 samples, 0.34%)</title><rect x="46.9578%" y="261" width="0.3440%" height="15" fill="rgb(249,23,13)" fg:x="287304" fg:w="2105"/><text x="47.2078%" y="271.50"></text></g><g><title>rust_parser.exe`core::num::impl$9::wrapping_add (111 samples, 0.02%)</title><rect x="47.2837%" y="245" width="0.0181%" height="15" fill="rgb(219,9,5)" fg:x="289298" fg:w="111"/><text x="47.5337%" y="255.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt; &gt;::as_ref (89 samples, 0.01%)</title><rect x="47.3401%" y="309" width="0.0145%" height="15" fill="rgb(254,171,16)" fg:x="289643" fg:w="89"/><text x="47.5901%" y="319.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt; &gt;::as_ptr (77 samples, 0.01%)</title><rect x="47.3421%" y="293" width="0.0126%" height="15" fill="rgb(230,171,20)" fg:x="289655" fg:w="77"/><text x="47.5921%" y="303.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;tuple$&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt; &gt;::as_ptr(core::ptr::non_null::NonNull&lt;tuple$&lt;alloc::sync::Arc (65 samples, 0.01%)</title><rect x="47.4307%" y="261" width="0.0106%" height="15" fill="rgb(210,71,41)" fg:x="290197" fg:w="65"/><text x="47.6807%" y="271.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt; &gt;::from_base_index&lt;tuple$&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt; &gt;(core::ptr::non_null::NonNull&lt;tuple$&lt;alloc::sync::Arc (196 samples, 0.03%)</title><rect x="47.4098%" y="277" width="0.0320%" height="15" fill="rgb(206,173,20)" fg:x="290069" fg:w="196"/><text x="47.6598%" y="287.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt;,alloc::alloc::Global&gt;::bucket (293 samples, 0.05%)</title><rect x="47.3973%" y="293" width="0.0479%" height="15" fill="rgb(233,88,34)" fg:x="289993" fg:w="293"/><text x="47.6473%" y="303.50"></text></g><g><title>rust_parser.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (575 samples, 0.09%)</title><rect x="47.5601%" y="261" width="0.0940%" height="15" fill="rgb(223,209,46)" fg:x="290989" fg:w="575"/><text x="47.8101%" y="271.50"></text></g><g><title>rust_parser.exe`core::intrinsics::copy_nonoverlapping (130 samples, 0.02%)</title><rect x="47.6329%" y="245" width="0.0212%" height="15" fill="rgb(250,43,18)" fg:x="291434" fg:w="130"/><text x="47.8829%" y="255.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::ctrl (653 samples, 0.11%)</title><rect x="47.5477%" y="277" width="0.1067%" height="15" fill="rgb(208,13,10)" fg:x="290913" fg:w="653"/><text x="47.7977%" y="287.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::bitmask::impl$1::into_iter (84 samples, 0.01%)</title><rect x="47.6593%" y="277" width="0.0137%" height="15" fill="rgb(212,200,36)" fg:x="291596" fg:w="84"/><text x="47.9093%" y="287.50"></text></g><g><title>rust_parser.exe`core::num::nonzero::NonZeroU16::new (232 samples, 0.04%)</title><rect x="47.7311%" y="245" width="0.0379%" height="15" fill="rgb(225,90,30)" fg:x="292035" fg:w="232"/><text x="47.9811%" y="255.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::bitmask::BitMask::lowest_set_bit (533 samples, 0.09%)</title><rect x="47.6995%" y="261" width="0.0871%" height="15" fill="rgb(236,182,39)" fg:x="291842" fg:w="533"/><text x="47.9495%" y="271.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (108 samples, 0.02%)</title><rect x="47.7690%" y="245" width="0.0177%" height="15" fill="rgb(212,144,35)" fg:x="292267" fg:w="108"/><text x="48.0190%" y="255.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::bitmask::impl$3::next (707 samples, 0.12%)</title><rect x="47.6731%" y="277" width="0.1156%" height="15" fill="rgb(228,63,44)" fg:x="291680" fg:w="707"/><text x="47.9231%" y="287.50"></text></g><g><title>rust_parser.exe`alloc::sync::impl$66::borrow&lt;str$,alloc::alloc::Global&gt;(alloc::sync::Arc (160 samples, 0.03%)</title><rect x="47.8409%" y="229" width="0.0262%" height="15" fill="rgb(228,109,6)" fg:x="292707" fg:w="160"/><text x="48.0909%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::sync::impl$29::deref(alloc::sync::Arc (136 samples, 0.02%)</title><rect x="47.8448%" y="213" width="0.0222%" height="15" fill="rgb(238,117,24)" fg:x="292731" fg:w="136"/><text x="48.0948%" y="223.50"></text></g><g><title>rust_parser.exe`alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;::inner (136 samples, 0.02%)</title><rect x="47.8448%" y="197" width="0.0222%" height="15" fill="rgb(242,26,26)" fg:x="292731" fg:w="136"/><text x="48.0948%" y="207.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;str$&gt; &gt;::as_ref (136 samples, 0.02%)</title><rect x="47.8448%" y="181" width="0.0222%" height="15" fill="rgb(221,92,48)" fg:x="292731" fg:w="136"/><text x="48.0948%" y="191.50"></text></g><g><title>rust_parser.exe`core::cmp::impls::impl$9::eq(ref$&lt;str$&gt;*, ref$ (70 samples, 0.01%)</title><rect x="47.8671%" y="229" width="0.0114%" height="15" fill="rgb(209,209,32)" fg:x="292867" fg:w="70"/><text x="48.1171%" y="239.50"></text></g><g><title>`0x7FF85D971247 (87 samples, 0.01%)</title><rect x="47.9159%" y="197" width="0.0142%" height="15" fill="rgb(221,70,22)" fg:x="293166" fg:w="87"/><text x="48.1659%" y="207.50"></text></g><g><title>`0x7FF85D9712A9 (71 samples, 0.01%)</title><rect x="47.9390%" y="197" width="0.0116%" height="15" fill="rgb(248,145,5)" fg:x="293307" fg:w="71"/><text x="48.1890%" y="207.50"></text></g><g><title>rust_parser.exe`core::slice::cmp::impl$5::equal&lt;u8,u8&gt;(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (445 samples, 0.07%)</title><rect x="47.8872%" y="213" width="0.0727%" height="15" fill="rgb(226,116,26)" fg:x="292990" fg:w="445"/><text x="48.1372%" y="223.50"></text></g><g><title>rust_parser.exe`hashbrown::map::equivalent_key::closure$0&lt;str$,alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt;(hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt;*, tuple$&lt;alloc::sync::Arc (978 samples, 0.16%)</title><rect x="47.8143%" y="261" width="0.1598%" height="15" fill="rgb(244,5,17)" fg:x="292544" fg:w="978"/><text x="48.0643%" y="271.50"></text></g><g><title>rust_parser.exe`hashbrown::impl$0::equivalent&lt;str$,alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt; &gt;(ref$&lt;str$&gt;, alloc::sync::Arc (922 samples, 0.15%)</title><rect x="47.8234%" y="245" width="0.1507%" height="15" fill="rgb(252,159,33)" fg:x="292600" fg:w="922"/><text x="48.0734%" y="255.50"></text></g><g><title>rust_parser.exe`core::str::traits::impl$1::eq(ref$&lt;str$&gt;, ref$ (585 samples, 0.10%)</title><rect x="47.8785%" y="229" width="0.0956%" height="15" fill="rgb(206,71,0)" fg:x="292937" fg:w="585"/><text x="48.1285%" y="239.50"></text></g><g><title>rust_parser.exe`core::str::impl$0::as_bytes(ref$ (87 samples, 0.01%)</title><rect x="47.9599%" y="213" width="0.0142%" height="15" fill="rgb(233,118,54)" fg:x="293435" fg:w="87"/><text x="48.2099%" y="223.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt; &gt;::as_ptr (127 samples, 0.02%)</title><rect x="47.9844%" y="245" width="0.0208%" height="15" fill="rgb(234,83,48)" fg:x="293585" fg:w="127"/><text x="48.2344%" y="255.50"></text></g><g><title>rust_parser.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;alloc::sync::Arc (71 samples, 0.01%)</title><rect x="47.9936%" y="229" width="0.0116%" height="15" fill="rgb(228,3,54)" fg:x="293641" fg:w="71"/><text x="48.2436%" y="239.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt; &gt;::from_base_index&lt;tuple$&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt; &gt;(core::ptr::non_null::NonNull&lt;tuple$&lt;alloc::sync::Arc (257 samples, 0.04%)</title><rect x="48.0052%" y="245" width="0.0420%" height="15" fill="rgb(226,155,13)" fg:x="293712" fg:w="257"/><text x="48.2552%" y="255.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::impl$7::find::closure$0&lt;tuple$&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt; &gt;(hashbrown::raw::impl$7::find::closure_env$0&lt;tuple$&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::sync::Arc (1,562 samples, 0.26%)</title><rect x="47.7937%" y="277" width="0.2553%" height="15" fill="rgb(241,28,37)" fg:x="292418" fg:w="1562"/><text x="48.0437%" y="287.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt;,alloc::alloc::Global&gt;::bucket (458 samples, 0.07%)</title><rect x="47.9741%" y="261" width="0.0749%" height="15" fill="rgb(233,93,10)" fg:x="293522" fg:w="458"/><text x="48.2241%" y="271.50"></text></g><g><title>rust_parser.exe`core::core_arch::x86::sse2::_mm_cmpeq_epi8 (219 samples, 0.04%)</title><rect x="48.0979%" y="261" width="0.0358%" height="15" fill="rgb(225,113,19)" fg:x="294279" fg:w="219"/><text x="48.3479%" y="271.50"></text></g><g><title>rust_parser.exe`core::core_arch::simd::i8x16::splat (68 samples, 0.01%)</title><rect x="48.2190%" y="245" width="0.0111%" height="15" fill="rgb(241,2,18)" fg:x="295020" fg:w="68"/><text x="48.4690%" y="255.50"></text></g><g><title>rust_parser.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (592 samples, 0.10%)</title><rect x="48.1336%" y="261" width="0.0968%" height="15" fill="rgb(228,207,21)" fg:x="294498" fg:w="592"/><text x="48.3836%" y="271.50"></text></g><g><title>rust_parser.exe`regex::regex::string::impl$15::index(regex::regex::string::Captures*, ref$ (22,861 samples, 3.74%)</title><rect x="44.5652%" y="437" width="3.7365%" height="15" fill="rgb(213,211,35)" fg:x="272665" fg:w="22861"/><text x="44.8152%" y="447.50">rust..</text></g><g><title>rust_parser.exe`regex::regex::string::Captures::name(ref$ (20,380 samples, 3.33%)</title><rect x="44.9707%" y="421" width="3.3310%" height="15" fill="rgb(209,83,10)" fg:x="275146" fg:w="20380"/><text x="45.2207%" y="431.50">rus..</text></g><g><title>rust_parser.exe`regex_automata::util::captures::Captures::get_group_by_name(ref$ (19,708 samples, 3.22%)</title><rect x="45.0805%" y="405" width="3.2211%" height="15" fill="rgb(209,164,1)" fg:x="275818" fg:w="19708"/><text x="45.3305%" y="415.50">rus..</text></g><g><title>rust_parser.exe`regex_automata::util::captures::GroupInfo::to_index(regex_automata::util::primitives::PatternID, ref$ (15,028 samples, 2.46%)</title><rect x="45.8454%" y="389" width="2.4562%" height="15" fill="rgb(213,184,43)" fg:x="280498" fg:w="15028"/><text x="46.0954%" y="399.50">ru..</text></g><g><title>rust_parser.exe`std::collections::hash::map::HashMap&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex,std::collections::hash::map::RandomState&gt;::get&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex,std::collections::hash::map::RandomState,str$&gt;(ref$ (13,344 samples, 2.18%)</title><rect x="46.1207%" y="373" width="2.1810%" height="15" fill="rgb(231,61,34)" fg:x="282182" fg:w="13344"/><text x="46.3707%" y="383.50">r..</text></g><g><title>rust_parser.exe`hashbrown::map::HashMap&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex,std::collections::hash::map::RandomState,alloc::alloc::Global,str$&gt;(ref$ (13,311 samples, 2.18%)</title><rect x="46.1261%" y="357" width="2.1756%" height="15" fill="rgb(235,75,3)" fg:x="282215" fg:w="13311"/><text x="46.3761%" y="367.50">r..</text></g><g><title>rust_parser.exe`hashbrown::map::HashMap&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get_inner(ref$ (13,115 samples, 2.14%)</title><rect x="46.1581%" y="341" width="2.1436%" height="15" fill="rgb(220,106,47)" fg:x="282411" fg:w="13115"/><text x="46.4081%" y="351.50">r..</text></g><g><title>rust_parser.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt;,alloc::alloc::Global&gt;::get&lt;tuple$&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt; &gt;(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::sync::Arc (6,117 samples, 1.00%)</title><rect x="47.3019%" y="325" width="0.9998%" height="15" fill="rgb(210,196,33)" fg:x="289409" fg:w="6117"/><text x="47.5519%" y="335.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt;,alloc::alloc::Global&gt;::find&lt;tuple$&lt;alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::sync::Arc&lt;str$,alloc::alloc::Global&gt;,regex_automata::util::primitives::SmallIndex&gt; &gt;(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::sync::Arc (5,794 samples, 0.95%)</title><rect x="47.3547%" y="309" width="0.9470%" height="15" fill="rgb(229,154,42)" fg:x="289732" fg:w="5794"/><text x="47.6047%" y="319.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (5,240 samples, 0.86%)</title><rect x="47.4452%" y="293" width="0.8564%" height="15" fill="rgb(228,114,26)" fg:x="290286" fg:w="5240"/><text x="47.6952%" y="303.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::sse2::Group::match_byte (1,546 samples, 0.25%)</title><rect x="48.0490%" y="277" width="0.2527%" height="15" fill="rgb(208,144,1)" fg:x="293980" fg:w="1546"/><text x="48.2990%" y="287.50"></text></g><g><title>rust_parser.exe`core::core_arch::x86::sse2::_mm_set1_epi8 (436 samples, 0.07%)</title><rect x="48.2304%" y="261" width="0.0713%" height="15" fill="rgb(239,112,37)" fg:x="295090" fg:w="436"/><text x="48.4804%" y="271.50"></text></g><g><title>rust_parser.exe`core::core_arch::x86::sse2::_mm_set_epi8 (384 samples, 0.06%)</title><rect x="48.2389%" y="245" width="0.0628%" height="15" fill="rgb(210,96,50)" fg:x="295142" fg:w="384"/><text x="48.4889%" y="255.50"></text></g><g><title>rust_parser.exe`core::fmt::Arguments::as_str (259 samples, 0.04%)</title><rect x="49.7034%" y="405" width="0.0423%" height="15" fill="rgb(222,178,2)" fg:x="304102" fg:w="259"/><text x="49.9534%" y="415.50"></text></g><g><title>`0x7FF85D971310 (82 samples, 0.01%)</title><rect x="50.0634%" y="373" width="0.0134%" height="15" fill="rgb(226,74,18)" fg:x="306305" fg:w="82"/><text x="50.3134%" y="383.50"></text></g><g><title>`0x7FF85D971460 (72 samples, 0.01%)</title><rect x="50.0986%" y="373" width="0.0118%" height="15" fill="rgb(225,67,54)" fg:x="306520" fg:w="72"/><text x="50.3486%" y="383.50"></text></g><g><title>`0x7FF85D971490 (103 samples, 0.02%)</title><rect x="50.1283%" y="373" width="0.0168%" height="15" fill="rgb(251,92,32)" fg:x="306702" fg:w="103"/><text x="50.3783%" y="383.50"></text></g><g><title>`0x7FF85D9715FF (103 samples, 0.02%)</title><rect x="50.1824%" y="373" width="0.0168%" height="15" fill="rgb(228,149,22)" fg:x="307033" fg:w="103"/><text x="50.4324%" y="383.50"></text></g><g><title>`0x7FF85D97160A (63 samples, 0.01%)</title><rect x="50.2068%" y="373" width="0.0103%" height="15" fill="rgb(243,54,13)" fg:x="307182" fg:w="63"/><text x="50.4568%" y="383.50"></text></g><g><title>`0x7FF85D97160D (68 samples, 0.01%)</title><rect x="50.2171%" y="373" width="0.0111%" height="15" fill="rgb(243,180,28)" fg:x="307245" fg:w="68"/><text x="50.4671%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::string::String::with_capacity (148 samples, 0.02%)</title><rect x="50.3504%" y="357" width="0.0242%" height="15" fill="rgb(208,167,24)" fg:x="308061" fg:w="148"/><text x="50.6004%" y="367.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::sum (392 samples, 0.06%)</title><rect x="50.3973%" y="341" width="0.0641%" height="15" fill="rgb(245,73,45)" fg:x="308348" fg:w="392"/><text x="50.6473%" y="351.50"></text></g><g><title>rust_parser.exe`core::iter::traits::accum::impl$48::sum (392 samples, 0.06%)</title><rect x="50.3973%" y="325" width="0.0641%" height="15" fill="rgb(237,203,48)" fg:x="308348" fg:w="392"/><text x="50.6473%" y="335.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::map::impl$2::fold (392 samples, 0.06%)</title><rect x="50.3973%" y="309" width="0.0641%" height="15" fill="rgb(211,197,16)" fg:x="308348" fg:w="392"/><text x="50.6473%" y="319.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$181::fold (392 samples, 0.06%)</title><rect x="50.3973%" y="293" width="0.0641%" height="15" fill="rgb(243,99,51)" fg:x="308348" fg:w="392"/><text x="50.6473%" y="303.50"></text></g><g><title>rust_parser.exe`core::fmt::Arguments::estimated_capacity (584 samples, 0.10%)</title><rect x="50.3746%" y="357" width="0.0955%" height="15" fill="rgb(215,123,29)" fg:x="308209" fg:w="584"/><text x="50.6246%" y="367.50"></text></g><g><title>rust_parser.exe`core::fmt::Write::write_fmt (65 samples, 0.01%)</title><rect x="50.4701%" y="357" width="0.0106%" height="15" fill="rgb(239,186,37)" fg:x="308793" fg:w="65"/><text x="50.7201%" y="367.50"></text></g><g><title>`0x7FF87490D0F2 (111 samples, 0.02%)</title><rect x="50.9939%" y="85" width="0.0181%" height="15" fill="rgb(252,136,39)" fg:x="311998" fg:w="111"/><text x="51.2439%" y="95.50"></text></g><g><title>`0x7FF87490D19A (107 samples, 0.02%)</title><rect x="51.0184%" y="85" width="0.0175%" height="15" fill="rgb(223,213,32)" fg:x="312148" fg:w="107"/><text x="51.2684%" y="95.50"></text></g><g><title>`0x7FF87490D1D7 (98 samples, 0.02%)</title><rect x="51.0408%" y="85" width="0.0160%" height="15" fill="rgb(233,115,5)" fg:x="312285" fg:w="98"/><text x="51.2908%" y="95.50"></text></g><g><title>`0x7FF87490C7AA (763 samples, 0.12%)</title><rect x="50.9555%" y="101" width="0.1247%" height="15" fill="rgb(207,226,44)" fg:x="311763" fg:w="763"/><text x="51.2055%" y="111.50"></text></g><g><title>`0x7FF874913015 (972 samples, 0.16%)</title><rect x="50.9275%" y="117" width="0.1589%" height="15" fill="rgb(208,126,0)" fg:x="311592" fg:w="972"/><text x="51.1775%" y="127.50"></text></g><g><title>`0x7FF87497C0EF (80 samples, 0.01%)</title><rect x="51.1477%" y="85" width="0.0131%" height="15" fill="rgb(244,66,21)" fg:x="312939" fg:w="80"/><text x="51.3977%" y="95.50"></text></g><g><title>`0x7FF87490AB01 (500 samples, 0.08%)</title><rect x="51.0995%" y="101" width="0.0817%" height="15" fill="rgb(222,97,12)" fg:x="312644" fg:w="500"/><text x="51.3495%" y="111.50"></text></g><g><title>`0x7FF874913072 (544 samples, 0.09%)</title><rect x="51.0936%" y="117" width="0.0889%" height="15" fill="rgb(219,213,19)" fg:x="312608" fg:w="544"/><text x="51.3436%" y="127.50"></text></g><g><title>`0x7FF874911DD7 (1,855 samples, 0.30%)</title><rect x="50.8926%" y="133" width="0.3032%" height="15" fill="rgb(252,169,30)" fg:x="311378" fg:w="1855"/><text x="51.1426%" y="143.50"></text></g><g><title>`0x7FF874911C9A (2,043 samples, 0.33%)</title><rect x="50.8741%" y="149" width="0.3339%" height="15" fill="rgb(206,32,51)" fg:x="311265" fg:w="2043"/><text x="51.1241%" y="159.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::reserve_for_push&lt;u8,alloc::alloc::Global&gt; (2,371 samples, 0.39%)</title><rect x="50.8309%" y="229" width="0.3875%" height="15" fill="rgb(250,172,42)" fg:x="311001" fg:w="2371"/><text x="51.0809%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::grow_amortized (2,332 samples, 0.38%)</title><rect x="50.8373%" y="213" width="0.3811%" height="15" fill="rgb(209,34,43)" fg:x="311040" fg:w="2332"/><text x="51.0873%" y="223.50"></text></g><g><title>rust_parser.exe`core::result::impl$26::branch (2,262 samples, 0.37%)</title><rect x="50.8488%" y="197" width="0.3697%" height="15" fill="rgb(223,11,35)" fg:x="311110" fg:w="2262"/><text x="51.0988%" y="207.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (2,252 samples, 0.37%)</title><rect x="50.8504%" y="181" width="0.3681%" height="15" fill="rgb(251,219,26)" fg:x="311120" fg:w="2252"/><text x="51.1004%" y="191.50"></text></g><g><title>rust_parser.exe`core::result::Result::map_err (2,214 samples, 0.36%)</title><rect x="50.8566%" y="165" width="0.3619%" height="15" fill="rgb(231,119,3)" fg:x="311158" fg:w="2214"/><text x="51.1066%" y="175.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec::push (2,788 samples, 0.46%)</title><rect x="50.7806%" y="245" width="0.4557%" height="15" fill="rgb(216,97,11)" fg:x="310693" fg:w="2788"/><text x="51.0306%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::string::String::push (3,047 samples, 0.50%)</title><rect x="50.7394%" y="261" width="0.4980%" height="15" fill="rgb(223,59,9)" fg:x="310441" fg:w="3047"/><text x="50.9894%" y="271.50"></text></g><g><title>rust_parser.exe`core::fmt::impl$0::write_char&lt;alloc::string::String&gt; (3,193 samples, 0.52%)</title><rect x="50.7174%" y="277" width="0.5219%" height="15" fill="rgb(233,93,31)" fg:x="310306" fg:w="3193"/><text x="50.9674%" y="287.50"></text></g><g><title>rust_parser.exe`core::fmt::PostPadding::write (3,371 samples, 0.55%)</title><rect x="50.6974%" y="293" width="0.5510%" height="15" fill="rgb(239,81,33)" fg:x="310184" fg:w="3371"/><text x="50.9474%" y="303.50"></text></g><g><title>`0x7FF874933254 (62 samples, 0.01%)</title><rect x="51.3817%" y="53" width="0.0101%" height="15" fill="rgb(213,120,34)" fg:x="314371" fg:w="62"/><text x="51.6317%" y="63.50"></text></g><g><title>`0x7FF874933168 (67 samples, 0.01%)</title><rect x="51.3811%" y="69" width="0.0110%" height="15" fill="rgb(243,49,53)" fg:x="314367" fg:w="67"/><text x="51.6311%" y="79.50"></text></g><g><title>`0x7FF87490D651 (91 samples, 0.01%)</title><rect x="51.3777%" y="85" width="0.0149%" height="15" fill="rgb(247,216,33)" fg:x="314346" fg:w="91"/><text x="51.6277%" y="95.50"></text></g><g><title>`0x7FF874911434 (66 samples, 0.01%)</title><rect x="51.4247%" y="69" width="0.0108%" height="15" fill="rgb(226,26,14)" fg:x="314634" fg:w="66"/><text x="51.6747%" y="79.50"></text></g><g><title>`0x7FF8749117B3 (437 samples, 0.07%)</title><rect x="51.4966%" y="53" width="0.0714%" height="15" fill="rgb(215,49,53)" fg:x="315074" fg:w="437"/><text x="51.7466%" y="63.50"></text></g><g><title>`0x7FF874911624 (454 samples, 0.07%)</title><rect x="51.4953%" y="69" width="0.0742%" height="15" fill="rgb(245,162,40)" fg:x="315066" fg:w="454"/><text x="51.7453%" y="79.50"></text></g><g><title>`0x7FF8749117B3 (527 samples, 0.09%)</title><rect x="51.5717%" y="53" width="0.0861%" height="15" fill="rgb(229,68,17)" fg:x="315533" fg:w="527"/><text x="51.8217%" y="63.50"></text></g><g><title>`0x7FF87491162F (546 samples, 0.09%)</title><rect x="51.5695%" y="69" width="0.0892%" height="15" fill="rgb(213,182,10)" fg:x="315520" fg:w="546"/><text x="51.8195%" y="79.50"></text></g><g><title>`0x7FF87490D6CF (1,619 samples, 0.26%)</title><rect x="51.3948%" y="85" width="0.2646%" height="15" fill="rgb(245,125,30)" fg:x="314451" fg:w="1619"/><text x="51.6448%" y="95.50"></text></g><g><title>`0x7FF87490C7AA (2,082 samples, 0.34%)</title><rect x="51.3219%" y="101" width="0.3403%" height="15" fill="rgb(232,202,2)" fg:x="314005" fg:w="2082"/><text x="51.5719%" y="111.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec::len (2,461 samples, 0.40%)</title><rect x="51.2711%" y="197" width="0.4022%" height="15" fill="rgb(237,140,51)" fg:x="313694" fg:w="2461"/><text x="51.5211%" y="207.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle&lt;u8,alloc::alloc::Global&gt; (2,455 samples, 0.40%)</title><rect x="51.2721%" y="181" width="0.4013%" height="15" fill="rgb(236,157,25)" fg:x="313700" fg:w="2455"/><text x="51.5221%" y="191.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::grow_amortized (2,397 samples, 0.39%)</title><rect x="51.2816%" y="165" width="0.3918%" height="15" fill="rgb(219,209,0)" fg:x="313758" fg:w="2397"/><text x="51.5316%" y="175.50"></text></g><g><title>rust_parser.exe`core::result::impl$26::branch (2,363 samples, 0.39%)</title><rect x="51.2871%" y="149" width="0.3862%" height="15" fill="rgb(240,116,54)" fg:x="313792" fg:w="2363"/><text x="51.5371%" y="159.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (2,363 samples, 0.39%)</title><rect x="51.2871%" y="133" width="0.3862%" height="15" fill="rgb(216,10,36)" fg:x="313792" fg:w="2363"/><text x="51.5371%" y="143.50"></text></g><g><title>rust_parser.exe`core::result::Result::map_err (2,280 samples, 0.37%)</title><rect x="51.3007%" y="117" width="0.3727%" height="15" fill="rgb(222,72,44)" fg:x="313875" fg:w="2280"/><text x="51.5507%" y="127.50"></text></g><g><title>rust_parser.exe`core::fmt::impl$0::write_str&lt;alloc::string::String&gt; (2,615 samples, 0.43%)</title><rect x="51.2484%" y="293" width="0.4274%" height="15" fill="rgb(232,159,9)" fg:x="313555" fg:w="2615"/><text x="51.4984%" y="303.50"></text></g><g><title>rust_parser.exe`alloc::string::impl$67::write_str (2,528 samples, 0.41%)</title><rect x="51.2626%" y="277" width="0.4132%" height="15" fill="rgb(210,39,32)" fg:x="313642" fg:w="2528"/><text x="51.5126%" y="287.50"></text></g><g><title>rust_parser.exe`alloc::string::String::push_str (2,528 samples, 0.41%)</title><rect x="51.2626%" y="261" width="0.4132%" height="15" fill="rgb(216,194,45)" fg:x="313642" fg:w="2528"/><text x="51.5126%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec::extend_from_slice (2,528 samples, 0.41%)</title><rect x="51.2626%" y="245" width="0.4132%" height="15" fill="rgb(218,18,35)" fg:x="313642" fg:w="2528"/><text x="51.5126%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::vec::spec_extend::impl$4::spec_extend (2,528 samples, 0.41%)</title><rect x="51.2626%" y="229" width="0.4132%" height="15" fill="rgb(207,83,51)" fg:x="313642" fg:w="2528"/><text x="51.5126%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec::append_elements (2,528 samples, 0.41%)</title><rect x="51.2626%" y="213" width="0.4132%" height="15" fill="rgb(225,63,43)" fg:x="313642" fg:w="2528"/><text x="51.5126%" y="223.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::map::map_fold::closure$0 (92 samples, 0.02%)</title><rect x="51.6931%" y="165" width="0.0150%" height="15" fill="rgb(207,57,36)" fg:x="316276" fg:w="92"/><text x="51.9431%" y="175.50"></text></g><g><title>rust_parser.exe`core::fmt::Formatter::pad (6,341 samples, 1.04%)</title><rect x="50.6719%" y="309" width="1.0364%" height="15" fill="rgb(216,99,33)" fg:x="310028" fg:w="6341"/><text x="50.9219%" y="319.50"></text></g><g><title>rust_parser.exe`core::str::iter::impl$0::count (192 samples, 0.03%)</title><rect x="51.6769%" y="293" width="0.0314%" height="15" fill="rgb(225,42,16)" fg:x="316177" fg:w="192"/><text x="51.9269%" y="303.50"></text></g><g><title>rust_parser.exe`core::str::count::count_chars (192 samples, 0.03%)</title><rect x="51.6769%" y="277" width="0.0314%" height="15" fill="rgb(220,201,45)" fg:x="316177" fg:w="192"/><text x="51.9269%" y="287.50"></text></g><g><title>rust_parser.exe`core::str::count::char_count_general_case (189 samples, 0.03%)</title><rect x="51.6774%" y="261" width="0.0309%" height="15" fill="rgb(225,33,4)" fg:x="316180" fg:w="189"/><text x="51.9274%" y="271.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::filter::impl$2::count (189 samples, 0.03%)</title><rect x="51.6774%" y="245" width="0.0309%" height="15" fill="rgb(224,33,50)" fg:x="316180" fg:w="189"/><text x="51.9274%" y="255.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::sum (189 samples, 0.03%)</title><rect x="51.6774%" y="229" width="0.0309%" height="15" fill="rgb(246,198,51)" fg:x="316180" fg:w="189"/><text x="51.9274%" y="239.50"></text></g><g><title>rust_parser.exe`core::iter::traits::accum::impl$48::sum (189 samples, 0.03%)</title><rect x="51.6774%" y="213" width="0.0309%" height="15" fill="rgb(205,22,4)" fg:x="316180" fg:w="189"/><text x="51.9274%" y="223.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::map::impl$2::fold (189 samples, 0.03%)</title><rect x="51.6774%" y="197" width="0.0309%" height="15" fill="rgb(206,3,8)" fg:x="316180" fg:w="189"/><text x="51.9274%" y="207.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$181::fold (189 samples, 0.03%)</title><rect x="51.6774%" y="181" width="0.0309%" height="15" fill="rgb(251,23,15)" fg:x="316180" fg:w="189"/><text x="51.9274%" y="191.50"></text></g><g><title>rust_parser.exe`alloc::string::impl$21::fmt (6,540 samples, 1.07%)</title><rect x="50.6503%" y="325" width="1.0689%" height="15" fill="rgb(252,88,28)" fg:x="309896" fg:w="6540"/><text x="50.9003%" y="335.50"></text></g><g><title>rust_parser.exe`core::fmt::impl$15::fmt (67 samples, 0.01%)</title><rect x="51.7083%" y="309" width="0.0110%" height="15" fill="rgb(212,127,14)" fg:x="316369" fg:w="67"/><text x="51.9583%" y="319.50"></text></g><g><title>rust_parser.exe`core::fmt::Formatter::new (215 samples, 0.04%)</title><rect x="51.7193%" y="325" width="0.0351%" height="15" fill="rgb(247,145,37)" fg:x="316436" fg:w="215"/><text x="51.9693%" y="335.50"></text></g><g><title>`0x7FF87490D0F2 (503 samples, 0.08%)</title><rect x="52.3629%" y="133" width="0.0822%" height="15" fill="rgb(209,117,53)" fg:x="320374" fg:w="503"/><text x="52.6129%" y="143.50"></text></g><g><title>`0x7FF87490D19A (354 samples, 0.06%)</title><rect x="52.4786%" y="133" width="0.0579%" height="15" fill="rgb(212,90,42)" fg:x="321082" fg:w="354"/><text x="52.7286%" y="143.50"></text></g><g><title>`0x7FF87490D1D7 (73 samples, 0.01%)</title><rect x="52.5592%" y="133" width="0.0119%" height="15" fill="rgb(218,164,37)" fg:x="321575" fg:w="73"/><text x="52.8092%" y="143.50"></text></g><g><title>`0x7FF8749117B3 (228 samples, 0.04%)</title><rect x="52.5955%" y="117" width="0.0373%" height="15" fill="rgb(246,65,34)" fg:x="321797" fg:w="228"/><text x="52.8455%" y="127.50"></text></g><g><title>`0x7FF87490C7AA (2,328 samples, 0.38%)</title><rect x="52.2531%" y="149" width="0.3805%" height="15" fill="rgb(231,100,33)" fg:x="319702" fg:w="2328"/><text x="52.5031%" y="159.50"></text></g><g><title>`0x7FF87490D2D3 (239 samples, 0.04%)</title><rect x="52.5945%" y="133" width="0.0391%" height="15" fill="rgb(228,126,14)" fg:x="321791" fg:w="239"/><text x="52.8445%" y="143.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::reserve_for_push&lt;u8,alloc::alloc::Global&gt; (3,960 samples, 0.65%)</title><rect x="52.0396%" y="229" width="0.6472%" height="15" fill="rgb(215,173,21)" fg:x="318396" fg:w="3960"/><text x="52.2896%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::grow_amortized (3,890 samples, 0.64%)</title><rect x="52.0510%" y="213" width="0.6358%" height="15" fill="rgb(210,6,40)" fg:x="318466" fg:w="3890"/><text x="52.3010%" y="223.50"></text></g><g><title>rust_parser.exe`core::result::impl$26::branch (3,692 samples, 0.60%)</title><rect x="52.0834%" y="197" width="0.6034%" height="15" fill="rgb(212,48,18)" fg:x="318664" fg:w="3692"/><text x="52.3334%" y="207.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (3,630 samples, 0.59%)</title><rect x="52.0935%" y="181" width="0.5933%" height="15" fill="rgb(230,214,11)" fg:x="318726" fg:w="3630"/><text x="52.3435%" y="191.50"></text></g><g><title>rust_parser.exe`core::result::Result::map_err (3,511 samples, 0.57%)</title><rect x="52.1130%" y="165" width="0.5738%" height="15" fill="rgb(254,105,39)" fg:x="318845" fg:w="3511"/><text x="52.3630%" y="175.50"></text></g><g><title>rust_parser.exe`std::alloc::__default_lib_allocator::__rdl_alloc (155 samples, 0.03%)</title><rect x="52.6615%" y="149" width="0.0253%" height="15" fill="rgb(245,158,5)" fg:x="322201" fg:w="155"/><text x="52.9115%" y="159.50"></text></g><g><title>rust_parser.exe`std::sys::windows::alloc::impl$0::alloc (70 samples, 0.01%)</title><rect x="52.6754%" y="133" width="0.0114%" height="15" fill="rgb(249,208,11)" fg:x="322286" fg:w="70"/><text x="52.9254%" y="143.50"></text></g><g><title>rust_parser.exe`std::sys::windows::alloc::allocate (70 samples, 0.01%)</title><rect x="52.6754%" y="117" width="0.0114%" height="15" fill="rgb(210,39,28)" fg:x="322286" fg:w="70"/><text x="52.9254%" y="127.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec::push (4,298 samples, 0.70%)</title><rect x="51.9932%" y="245" width="0.7025%" height="15" fill="rgb(211,56,53)" fg:x="318112" fg:w="4298"/><text x="52.2432%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::string::String::push (4,491 samples, 0.73%)</title><rect x="51.9634%" y="261" width="0.7340%" height="15" fill="rgb(226,201,30)" fg:x="317930" fg:w="4491"/><text x="52.2134%" y="271.50"></text></g><g><title>rust_parser.exe`core::fmt::impl$0::write_char&lt;alloc::string::String&gt; (4,669 samples, 0.76%)</title><rect x="51.9350%" y="277" width="0.7631%" height="15" fill="rgb(239,101,34)" fg:x="317756" fg:w="4669"/><text x="52.1850%" y="287.50"></text></g><g><title>rust_parser.exe`core::fmt::Formatter::padding (4,921 samples, 0.80%)</title><rect x="51.9033%" y="293" width="0.8043%" height="15" fill="rgb(226,209,5)" fg:x="317562" fg:w="4921"/><text x="52.1533%" y="303.50"></text></g><g><title>`0x7FF85D971310 (111 samples, 0.02%)</title><rect x="52.8879%" y="181" width="0.0181%" height="15" fill="rgb(250,105,47)" fg:x="323586" fg:w="111"/><text x="53.1379%" y="191.50"></text></g><g><title>`0x7FF85D971330 (78 samples, 0.01%)</title><rect x="52.9129%" y="181" width="0.0127%" height="15" fill="rgb(230,72,3)" fg:x="323739" fg:w="78"/><text x="53.1629%" y="191.50"></text></g><g><title>`0x7FF85D97137B (68 samples, 0.01%)</title><rect x="52.9353%" y="181" width="0.0111%" height="15" fill="rgb(232,218,39)" fg:x="323876" fg:w="68"/><text x="53.1853%" y="191.50"></text></g><g><title>`0x7FF85D97137E (64 samples, 0.01%)</title><rect x="52.9464%" y="181" width="0.0105%" height="15" fill="rgb(248,166,6)" fg:x="323944" fg:w="64"/><text x="53.1964%" y="191.50"></text></g><g><title>`0x7FF85D971427 (74 samples, 0.01%)</title><rect x="52.9714%" y="181" width="0.0121%" height="15" fill="rgb(247,89,20)" fg:x="324097" fg:w="74"/><text x="53.2214%" y="191.50"></text></g><g><title>`0x7FF85D971429 (63 samples, 0.01%)</title><rect x="52.9835%" y="181" width="0.0103%" height="15" fill="rgb(248,130,54)" fg:x="324171" fg:w="63"/><text x="53.2335%" y="191.50"></text></g><g><title>`0x7FF87490C7AA (304 samples, 0.05%)</title><rect x="53.0342%" y="85" width="0.0497%" height="15" fill="rgb(234,196,4)" fg:x="324481" fg:w="304"/><text x="53.2842%" y="95.50"></text></g><g><title>`0x7FF87490C7AA (114 samples, 0.02%)</title><rect x="53.0979%" y="37" width="0.0186%" height="15" fill="rgb(250,143,31)" fg:x="324871" fg:w="114"/><text x="53.3479%" y="47.50"></text></g><g><title>`0x7FF874913015 (146 samples, 0.02%)</title><rect x="53.0940%" y="53" width="0.0239%" height="15" fill="rgb(211,110,34)" fg:x="324847" fg:w="146"/><text x="53.3440%" y="63.50"></text></g><g><title>`0x7FF874913072 (79 samples, 0.01%)</title><rect x="53.1182%" y="53" width="0.0129%" height="15" fill="rgb(215,124,48)" fg:x="324995" fg:w="79"/><text x="53.3682%" y="63.50"></text></g><g><title>`0x7FF87490AB01 (72 samples, 0.01%)</title><rect x="53.1193%" y="37" width="0.0118%" height="15" fill="rgb(216,46,13)" fg:x="325002" fg:w="72"/><text x="53.3693%" y="47.50"></text></g><g><title>`0x7FF874911DD7 (251 samples, 0.04%)</title><rect x="53.0912%" y="69" width="0.0410%" height="15" fill="rgb(205,184,25)" fg:x="324830" fg:w="251"/><text x="53.3412%" y="79.50"></text></g><g><title>`0x7FF874911C9A (272 samples, 0.04%)</title><rect x="53.0892%" y="85" width="0.0445%" height="15" fill="rgb(228,1,10)" fg:x="324818" fg:w="272"/><text x="53.3392%" y="95.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec::len (887 samples, 0.14%)</title><rect x="52.9943%" y="181" width="0.1450%" height="15" fill="rgb(213,116,27)" fg:x="324237" fg:w="887"/><text x="53.2443%" y="191.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle&lt;u8,alloc::alloc::Global&gt; (876 samples, 0.14%)</title><rect x="52.9961%" y="165" width="0.1432%" height="15" fill="rgb(241,95,50)" fg:x="324248" fg:w="876"/><text x="53.2461%" y="175.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::grow_amortized (864 samples, 0.14%)</title><rect x="52.9980%" y="149" width="0.1412%" height="15" fill="rgb(238,48,32)" fg:x="324260" fg:w="864"/><text x="53.2480%" y="159.50"></text></g><g><title>rust_parser.exe`core::result::impl$26::branch (814 samples, 0.13%)</title><rect x="53.0062%" y="133" width="0.1330%" height="15" fill="rgb(235,113,49)" fg:x="324310" fg:w="814"/><text x="53.2562%" y="143.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (811 samples, 0.13%)</title><rect x="53.0067%" y="117" width="0.1326%" height="15" fill="rgb(205,127,43)" fg:x="324313" fg:w="811"/><text x="53.2567%" y="127.50"></text></g><g><title>rust_parser.exe`core::result::Result::map_err (779 samples, 0.13%)</title><rect x="53.0119%" y="101" width="0.1273%" height="15" fill="rgb(250,162,2)" fg:x="324345" fg:w="779"/><text x="53.2619%" y="111.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec::reserve (220 samples, 0.04%)</title><rect x="53.1393%" y="181" width="0.0360%" height="15" fill="rgb(220,13,41)" fg:x="325124" fg:w="220"/><text x="53.3893%" y="191.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::reserve (134 samples, 0.02%)</title><rect x="53.1533%" y="165" width="0.0219%" height="15" fill="rgb(249,221,25)" fg:x="325210" fg:w="134"/><text x="53.4033%" y="175.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::needs_to_grow (126 samples, 0.02%)</title><rect x="53.1546%" y="149" width="0.0206%" height="15" fill="rgb(215,208,19)" fg:x="325218" fg:w="126"/><text x="53.4046%" y="159.50"></text></g><g><title>rust_parser.exe`core::ptr::mut_ptr::impl$0::add (173 samples, 0.03%)</title><rect x="53.1752%" y="181" width="0.0283%" height="15" fill="rgb(236,175,2)" fg:x="325344" fg:w="173"/><text x="53.4252%" y="191.50"></text></g><g><title>rust_parser.exe`core::fmt::impl$0::write_str&lt;alloc::string::String&gt; (2,642 samples, 0.43%)</title><rect x="52.7826%" y="277" width="0.4318%" height="15" fill="rgb(241,52,2)" fg:x="322942" fg:w="2642"/><text x="53.0326%" y="287.50"></text></g><g><title>rust_parser.exe`alloc::string::impl$67::write_str (2,039 samples, 0.33%)</title><rect x="52.8812%" y="261" width="0.3333%" height="15" fill="rgb(248,140,14)" fg:x="323545" fg:w="2039"/><text x="53.1312%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::string::String::push_str (2,039 samples, 0.33%)</title><rect x="52.8812%" y="245" width="0.3333%" height="15" fill="rgb(253,22,42)" fg:x="323545" fg:w="2039"/><text x="53.1312%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec::extend_from_slice (2,039 samples, 0.33%)</title><rect x="52.8812%" y="229" width="0.3333%" height="15" fill="rgb(234,61,47)" fg:x="323545" fg:w="2039"/><text x="53.1312%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::vec::spec_extend::impl$4::spec_extend (2,039 samples, 0.33%)</title><rect x="52.8812%" y="213" width="0.3333%" height="15" fill="rgb(208,226,15)" fg:x="323545" fg:w="2039"/><text x="53.1312%" y="223.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec::append_elements (2,039 samples, 0.33%)</title><rect x="52.8812%" y="197" width="0.3333%" height="15" fill="rgb(217,221,4)" fg:x="323545" fg:w="2039"/><text x="53.1312%" y="207.50"></text></g><g><title>rust_parser.exe`memcpy (67 samples, 0.01%)</title><rect x="53.2035%" y="181" width="0.0110%" height="15" fill="rgb(212,174,34)" fg:x="325517" fg:w="67"/><text x="53.4535%" y="191.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$181::next (110 samples, 0.02%)</title><rect x="53.2229%" y="277" width="0.0180%" height="15" fill="rgb(253,83,4)" fg:x="325636" fg:w="110"/><text x="53.4729%" y="287.50"></text></g><g><title>rust_parser.exe`core::fmt::Formatter::write_formatted_parts (3,281 samples, 0.54%)</title><rect x="52.7079%" y="293" width="0.5363%" height="15" fill="rgb(250,195,49)" fg:x="322485" fg:w="3281"/><text x="52.9579%" y="303.50"></text></g><g><title>rust_parser.exe`core::fmt::PostPadding::write (122 samples, 0.02%)</title><rect x="53.2442%" y="293" width="0.0199%" height="15" fill="rgb(241,192,25)" fg:x="325766" fg:w="122"/><text x="53.4942%" y="303.50"></text></g><g><title>rust_parser.exe`core::num::fmt::Part::len (155 samples, 0.03%)</title><rect x="53.2713%" y="277" width="0.0253%" height="15" fill="rgb(208,124,10)" fg:x="325932" fg:w="155"/><text x="53.5213%" y="287.50"></text></g><g><title>rust_parser.exe`core::num::fmt::Formatted::len (262 samples, 0.04%)</title><rect x="53.2641%" y="293" width="0.0428%" height="15" fill="rgb(222,33,0)" fg:x="325888" fg:w="262"/><text x="53.5141%" y="303.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$181::next (63 samples, 0.01%)</title><rect x="53.2966%" y="277" width="0.0103%" height="15" fill="rgb(234,209,28)" fg:x="326087" fg:w="63"/><text x="53.5466%" y="287.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::impl$12::eq (63 samples, 0.01%)</title><rect x="53.2966%" y="261" width="0.0103%" height="15" fill="rgb(224,11,23)" fg:x="326087" fg:w="63"/><text x="53.5466%" y="271.50"></text></g><g><title>rust_parser.exe`core::fmt::Formatter::pad_formatted_parts (9,133 samples, 1.49%)</title><rect x="51.8235%" y="309" width="1.4927%" height="15" fill="rgb(232,99,1)" fg:x="317074" fg:w="9133"/><text x="52.0735%" y="319.50"></text></g><g><title>rust_parser.exe`core::num::dec2flt::float::impl$0::classify (69 samples, 0.01%)</title><rect x="53.4164%" y="277" width="0.0113%" height="15" fill="rgb(237,95,45)" fg:x="326820" fg:w="69"/><text x="53.6664%" y="287.50"></text></g><g><title>rust_parser.exe`core::f32::impl$0::classify (69 samples, 0.01%)</title><rect x="53.4164%" y="261" width="0.0113%" height="15" fill="rgb(208,109,11)" fg:x="326820" fg:w="69"/><text x="53.6664%" y="271.50"></text></g><g><title>rust_parser.exe`core::num::flt2dec::decoder::decode (403 samples, 0.07%)</title><rect x="53.3780%" y="293" width="0.0659%" height="15" fill="rgb(216,190,48)" fg:x="326585" fg:w="403"/><text x="53.6280%" y="303.50"></text></g><g><title>rust_parser.exe`core::num::dec2flt::float::impl$0::integer_decode (99 samples, 0.02%)</title><rect x="53.4277%" y="277" width="0.0162%" height="15" fill="rgb(251,171,36)" fg:x="326889" fg:w="99"/><text x="53.6777%" y="287.50"></text></g><g><title>rust_parser.exe`core::num::flt2dec::determine_sign (151 samples, 0.02%)</title><rect x="53.4439%" y="293" width="0.0247%" height="15" fill="rgb(230,62,22)" fg:x="326988" fg:w="151"/><text x="53.6939%" y="303.50"></text></g><g><title>rust_parser.exe`core::num::flt2dec::digits_to_dec_str (428 samples, 0.07%)</title><rect x="53.4686%" y="293" width="0.0700%" height="15" fill="rgb(225,114,35)" fg:x="327139" fg:w="428"/><text x="53.7186%" y="303.50"></text></g><g><title>rust_parser.exe`core::array::impl$15::index (164 samples, 0.03%)</title><rect x="53.7095%" y="229" width="0.0268%" height="15" fill="rgb(215,118,42)" fg:x="328613" fg:w="164"/><text x="53.9595%" y="239.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$0::index (164 samples, 0.03%)</title><rect x="53.7095%" y="213" width="0.0268%" height="15" fill="rgb(243,119,21)" fg:x="328613" fg:w="164"/><text x="53.9595%" y="223.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$5::index (164 samples, 0.03%)</title><rect x="53.7095%" y="197" width="0.0268%" height="15" fill="rgb(252,177,53)" fg:x="328613" fg:w="164"/><text x="53.9595%" y="207.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$4::index (164 samples, 0.03%)</title><rect x="53.7095%" y="181" width="0.0268%" height="15" fill="rgb(237,209,29)" fg:x="328613" fg:w="164"/><text x="53.9595%" y="191.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::cloned::clone_try_fold::closure$0 (480 samples, 0.08%)</title><rect x="53.7523%" y="117" width="0.0785%" height="15" fill="rgb(212,65,23)" fg:x="328875" fg:w="480"/><text x="54.0023%" y="127.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::try_for_each::call::closure$0 (480 samples, 0.08%)</title><rect x="53.7523%" y="101" width="0.0785%" height="15" fill="rgb(230,222,46)" fg:x="328875" fg:w="480"/><text x="54.0023%" y="111.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::iter_compare::compare::closure$0 (480 samples, 0.08%)</title><rect x="53.7523%" y="85" width="0.0785%" height="15" fill="rgb(215,135,32)" fg:x="328875" fg:w="480"/><text x="54.0023%" y="95.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::cmp_by::compare::closure$0 (310 samples, 0.05%)</title><rect x="53.7801%" y="69" width="0.0507%" height="15" fill="rgb(246,101,22)" fg:x="329045" fg:w="310"/><text x="54.0301%" y="79.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::cmp::closure$0 (309 samples, 0.05%)</title><rect x="53.7803%" y="53" width="0.0505%" height="15" fill="rgb(206,107,13)" fg:x="329046" fg:w="309"/><text x="54.0303%" y="63.50"></text></g><g><title>rust_parser.exe`core::cmp::impls::impl$61::cmp (309 samples, 0.05%)</title><rect x="53.7803%" y="37" width="0.0505%" height="15" fill="rgb(250,100,44)" fg:x="329046" fg:w="309"/><text x="54.0303%" y="47.50"></text></g><g><title>rust_parser.exe`core::cmp::PartialOrd::ge (991 samples, 0.16%)</title><rect x="53.6816%" y="277" width="0.1620%" height="15" fill="rgb(231,147,38)" fg:x="328442" fg:w="991"/><text x="53.9316%" y="287.50"></text></g><g><title>rust_parser.exe`core::num::bignum::impl$6::partial_cmp (820 samples, 0.13%)</title><rect x="53.7095%" y="261" width="0.1340%" height="15" fill="rgb(229,8,40)" fg:x="328613" fg:w="820"/><text x="53.9595%" y="271.50"></text></g><g><title>rust_parser.exe`core::num::bignum::impl$7::cmp (820 samples, 0.13%)</title><rect x="53.7095%" y="245" width="0.1340%" height="15" fill="rgb(221,135,30)" fg:x="328613" fg:w="820"/><text x="53.9595%" y="255.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::cmp (656 samples, 0.11%)</title><rect x="53.7363%" y="229" width="0.1072%" height="15" fill="rgb(249,193,18)" fg:x="328777" fg:w="656"/><text x="53.9863%" y="239.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::cmp_by (656 samples, 0.11%)</title><rect x="53.7363%" y="213" width="0.1072%" height="15" fill="rgb(209,133,39)" fg:x="328777" fg:w="656"/><text x="53.9863%" y="223.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::iter_compare (656 samples, 0.11%)</title><rect x="53.7363%" y="197" width="0.1072%" height="15" fill="rgb(232,100,14)" fg:x="328777" fg:w="656"/><text x="53.9863%" y="207.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::try_for_each (596 samples, 0.10%)</title><rect x="53.7461%" y="181" width="0.0974%" height="15" fill="rgb(224,185,1)" fg:x="328837" fg:w="596"/><text x="53.9961%" y="191.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::rev::impl$1::try_fold (596 samples, 0.10%)</title><rect x="53.7461%" y="165" width="0.0974%" height="15" fill="rgb(223,139,8)" fg:x="328837" fg:w="596"/><text x="53.9961%" y="175.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::cloned::impl$2::try_rfold (596 samples, 0.10%)</title><rect x="53.7461%" y="149" width="0.0974%" height="15" fill="rgb(232,213,38)" fg:x="328837" fg:w="596"/><text x="53.9961%" y="159.50"></text></g><g><title>rust_parser.exe`core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (596 samples, 0.10%)</title><rect x="53.7461%" y="133" width="0.0974%" height="15" fill="rgb(207,94,22)" fg:x="328837" fg:w="596"/><text x="53.9961%" y="143.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$182::next_back (78 samples, 0.01%)</title><rect x="53.8308%" y="117" width="0.0127%" height="15" fill="rgb(219,183,54)" fg:x="329355" fg:w="78"/><text x="54.0808%" y="127.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::impl$12::eq (78 samples, 0.01%)</title><rect x="53.8308%" y="101" width="0.0127%" height="15" fill="rgb(216,185,54)" fg:x="329355" fg:w="78"/><text x="54.0808%" y="111.50"></text></g><g><title>rust_parser.exe`core::num::bignum::Big32x40::add (69 samples, 0.01%)</title><rect x="53.8479%" y="277" width="0.0113%" height="15" fill="rgb(254,217,39)" fg:x="329460" fg:w="69"/><text x="54.0979%" y="287.50"></text></g><g><title>rust_parser.exe`core::num::bignum::Big32x40::from_small (79 samples, 0.01%)</title><rect x="53.8592%" y="277" width="0.0129%" height="15" fill="rgb(240,178,23)" fg:x="329529" fg:w="79"/><text x="54.1092%" y="287.50"></text></g><g><title>rust_parser.exe`core::num::bignum::Big32x40::is_zero (80 samples, 0.01%)</title><rect x="53.8813%" y="277" width="0.0131%" height="15" fill="rgb(218,11,47)" fg:x="329664" fg:w="80"/><text x="54.1313%" y="287.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$181::all (69 samples, 0.01%)</title><rect x="53.8831%" y="261" width="0.0113%" height="15" fill="rgb(218,51,51)" fg:x="329675" fg:w="69"/><text x="54.1331%" y="271.50"></text></g><g><title>rust_parser.exe`core::num::bignum::Big32x40::mul_pow2 (262 samples, 0.04%)</title><rect x="53.8944%" y="277" width="0.0428%" height="15" fill="rgb(238,126,27)" fg:x="329744" fg:w="262"/><text x="54.1444%" y="287.50"></text></g><g><title>rust_parser.exe`core::num::bignum::Big32x40::mul_small (154 samples, 0.03%)</title><rect x="53.9372%" y="277" width="0.0252%" height="15" fill="rgb(249,202,22)" fg:x="330006" fg:w="154"/><text x="54.1872%" y="287.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::zip::impl$1::next (205 samples, 0.03%)</title><rect x="53.9821%" y="261" width="0.0335%" height="15" fill="rgb(254,195,49)" fg:x="330281" fg:w="205"/><text x="54.2321%" y="271.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::zip::impl$5::next (205 samples, 0.03%)</title><rect x="53.9821%" y="245" width="0.0335%" height="15" fill="rgb(208,123,14)" fg:x="330281" fg:w="205"/><text x="54.2321%" y="255.50"></text></g><g><title>rust_parser.exe`core::num::bignum::Big32x40::sub (398 samples, 0.07%)</title><rect x="53.9623%" y="277" width="0.0651%" height="15" fill="rgb(224,200,8)" fg:x="330160" fg:w="398"/><text x="54.2123%" y="287.50"></text></g><g><title>rust_parser.exe`core::num::impl$8::carrying_add (72 samples, 0.01%)</title><rect x="54.0156%" y="261" width="0.0118%" height="15" fill="rgb(217,61,36)" fg:x="330486" fg:w="72"/><text x="54.2656%" y="271.50"></text></g><g><title>rust_parser.exe`core::num::bignum::Big32x40::mul_pow2 (210 samples, 0.03%)</title><rect x="54.0733%" y="261" width="0.0343%" height="15" fill="rgb(206,35,45)" fg:x="330839" fg:w="210"/><text x="54.3233%" y="271.50"></text></g><g><title>rust_parser.exe`core::num::flt2dec::strategy::dragon::mul_pow10 (194 samples, 0.03%)</title><rect x="54.1077%" y="261" width="0.0317%" height="15" fill="rgb(217,65,33)" fg:x="331049" fg:w="194"/><text x="54.3577%" y="271.50"></text></g><g><title>rust_parser.exe`core::num::bignum::Big32x40::mul_small (78 samples, 0.01%)</title><rect x="54.1266%" y="245" width="0.0127%" height="15" fill="rgb(222,158,48)" fg:x="331165" fg:w="78"/><text x="54.3766%" y="255.50"></text></g><g><title>rust_parser.exe`core::num::bignum::impl$8::clone (670 samples, 0.11%)</title><rect x="54.0307%" y="277" width="0.1095%" height="15" fill="rgb(254,2,54)" fg:x="330578" fg:w="670"/><text x="54.2807%" y="287.50"></text></g><g><title>rust_parser.exe`core::num::flt2dec::strategy::dragon::div_2pow10 (364 samples, 0.06%)</title><rect x="54.1456%" y="277" width="0.0595%" height="15" fill="rgb(250,143,38)" fg:x="331281" fg:w="364"/><text x="54.3956%" y="287.50"></text></g><g><title>rust_parser.exe`core::num::bignum::Big32x40::div_rem_small (333 samples, 0.05%)</title><rect x="54.1506%" y="261" width="0.0544%" height="15" fill="rgb(248,25,0)" fg:x="331312" fg:w="333"/><text x="54.4006%" y="271.50"></text></g><g><title>rust_parser.exe`core::num::bignum::impl$2::full_div_rem (134 samples, 0.02%)</title><rect x="54.1832%" y="245" width="0.0219%" height="15" fill="rgb(206,152,27)" fg:x="331511" fg:w="134"/><text x="54.4332%" y="255.50"></text></g><g><title>rust_parser.exe`core::num::flt2dec::strategy::dragon::format_exact (4,071 samples, 0.67%)</title><rect x="53.5479%" y="293" width="0.6654%" height="15" fill="rgb(240,77,30)" fg:x="327624" fg:w="4071"/><text x="53.7979%" y="303.50"></text></g><g><title>rust_parser.exe`core::num::diy_float::Fp::mul (543 samples, 0.09%)</title><rect x="54.6727%" y="245" width="0.0887%" height="15" fill="rgb(231,5,3)" fg:x="334506" fg:w="543"/><text x="54.9227%" y="255.50"></text></g><g><title>rust_parser.exe`core::num::diy_float::Fp::normalize (556 samples, 0.09%)</title><rect x="54.7614%" y="245" width="0.0909%" height="15" fill="rgb(207,226,32)" fg:x="335049" fg:w="556"/><text x="55.0114%" y="255.50"></text></g><g><title>rust_parser.exe`core::num::flt2dec::strategy::grisu::cached_power (421 samples, 0.07%)</title><rect x="54.8523%" y="245" width="0.0688%" height="15" fill="rgb(222,207,47)" fg:x="335605" fg:w="421"/><text x="55.1023%" y="255.50"></text></g><g><title>rust_parser.exe`core::num::flt2dec::round_up (138 samples, 0.02%)</title><rect x="54.9688%" y="229" width="0.0226%" height="15" fill="rgb(229,115,45)" fg:x="336318" fg:w="138"/><text x="55.2188%" y="239.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$181::rposition (64 samples, 0.01%)</title><rect x="54.9809%" y="213" width="0.0105%" height="15" fill="rgb(224,191,6)" fg:x="336392" fg:w="64"/><text x="55.2309%" y="223.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$0::index (65 samples, 0.01%)</title><rect x="54.9914%" y="229" width="0.0106%" height="15" fill="rgb(230,227,24)" fg:x="336456" fg:w="65"/><text x="55.2414%" y="239.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$5::index (65 samples, 0.01%)</title><rect x="54.9914%" y="213" width="0.0106%" height="15" fill="rgb(228,80,19)" fg:x="336456" fg:w="65"/><text x="55.2414%" y="223.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$4::index (65 samples, 0.01%)</title><rect x="54.9914%" y="197" width="0.0106%" height="15" fill="rgb(247,229,0)" fg:x="336456" fg:w="65"/><text x="55.2414%" y="207.50"></text></g><g><title>rust_parser.exe`core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (527 samples, 0.09%)</title><rect x="54.9211%" y="245" width="0.0861%" height="15" fill="rgb(237,194,15)" fg:x="336026" fg:w="527"/><text x="55.1711%" y="255.50"></text></g><g><title>rust_parser.exe`core::num::flt2dec::strategy::grisu::max_pow10_no_more_than (116 samples, 0.02%)</title><rect x="55.0072%" y="245" width="0.0190%" height="15" fill="rgb(219,203,20)" fg:x="336553" fg:w="116"/><text x="55.2572%" y="255.50"></text></g><g><title>rust_parser.exe`core::fmt::float::float_to_decimal_common_exact&lt;f32&gt; (20,053 samples, 3.28%)</title><rect x="51.7544%" y="325" width="3.2775%" height="15" fill="rgb(234,128,8)" fg:x="316651" fg:w="20053"/><text x="52.0044%" y="335.50">rus..</text></g><g><title>rust_parser.exe`core::num::flt2dec::to_exact_fixed_str (10,497 samples, 1.72%)</title><rect x="53.3163%" y="309" width="1.7157%" height="15" fill="rgb(248,202,8)" fg:x="326207" fg:w="10497"/><text x="53.5663%" y="319.50"></text></g><g><title>rust_parser.exe`core::ops::function::FnMut::call_mut (5,009 samples, 0.82%)</title><rect x="54.2132%" y="293" width="0.8187%" height="15" fill="rgb(206,104,37)" fg:x="331695" fg:w="5009"/><text x="54.4632%" y="303.50"></text></g><g><title>rust_parser.exe`core::num::flt2dec::strategy::grisu::format_exact (5,009 samples, 0.82%)</title><rect x="54.2132%" y="277" width="0.8187%" height="15" fill="rgb(223,8,27)" fg:x="331695" fg:w="5009"/><text x="54.4632%" y="287.50"></text></g><g><title>rust_parser.exe`core::num::flt2dec::strategy::grisu::format_exact_opt (4,700 samples, 0.77%)</title><rect x="54.2637%" y="261" width="0.7682%" height="15" fill="rgb(216,217,28)" fg:x="332004" fg:w="4700"/><text x="54.5137%" y="271.50"></text></g><g><title>rust_parser.exe`core::fmt::float::impl$3::fmt (166 samples, 0.03%)</title><rect x="55.0319%" y="325" width="0.0271%" height="15" fill="rgb(249,199,1)" fg:x="336704" fg:w="166"/><text x="55.2819%" y="335.50"></text></g><g><title>rust_parser.exe`core::fmt::float::float_to_decimal_display (96 samples, 0.02%)</title><rect x="55.0434%" y="309" width="0.0157%" height="15" fill="rgb(240,85,17)" fg:x="336774" fg:w="96"/><text x="55.2934%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (107 samples, 0.02%)</title><rect x="55.1305%" y="245" width="0.0175%" height="15" fill="rgb(206,108,45)" fg:x="337307" fg:w="107"/><text x="55.3805%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::string::impl$38::deref (513 samples, 0.08%)</title><rect x="55.1161%" y="293" width="0.0838%" height="15" fill="rgb(245,210,41)" fg:x="337219" fg:w="513"/><text x="55.3661%" y="303.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (513 samples, 0.08%)</title><rect x="55.1161%" y="277" width="0.0838%" height="15" fill="rgb(206,13,37)" fg:x="337219" fg:w="513"/><text x="55.3661%" y="287.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (449 samples, 0.07%)</title><rect x="55.1266%" y="261" width="0.0734%" height="15" fill="rgb(250,61,18)" fg:x="337283" fg:w="449"/><text x="55.3766%" y="271.50"></text></g><g><title>rust_parser.exe`core::ptr::slice_from_raw_parts (318 samples, 0.05%)</title><rect x="55.1480%" y="245" width="0.0520%" height="15" fill="rgb(235,172,48)" fg:x="337414" fg:w="318"/><text x="55.3980%" y="255.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::cast (318 samples, 0.05%)</title><rect x="55.1480%" y="229" width="0.0520%" height="15" fill="rgb(249,201,17)" fg:x="337414" fg:w="318"/><text x="55.3980%" y="239.50"></text></g><g><title>rust_parser.exe`core::fmt::Formatter::padding (154 samples, 0.03%)</title><rect x="55.2665%" y="277" width="0.0252%" height="15" fill="rgb(219,208,6)" fg:x="338139" fg:w="154"/><text x="55.5165%" y="287.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::current_memory (111 samples, 0.02%)</title><rect x="56.1848%" y="181" width="0.0181%" height="15" fill="rgb(248,31,23)" fg:x="343758" fg:w="111"/><text x="56.4348%" y="191.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::set_ptr_and_cap (74 samples, 0.01%)</title><rect x="56.2030%" y="181" width="0.0121%" height="15" fill="rgb(245,15,42)" fg:x="343869" fg:w="74"/><text x="56.4530%" y="191.50"></text></g><g><title>`0x7FF874911C45 (70 samples, 0.01%)</title><rect x="56.3700%" y="133" width="0.0114%" height="15" fill="rgb(222,217,39)" fg:x="344891" fg:w="70"/><text x="56.6200%" y="143.50"></text></g><g><title>`0x7FF874911C90 (91 samples, 0.01%)</title><rect x="56.4249%" y="133" width="0.0149%" height="15" fill="rgb(210,219,27)" fg:x="345227" fg:w="91"/><text x="56.6749%" y="143.50"></text></g><g><title>`0x7FF874911F13 (62 samples, 0.01%)</title><rect x="56.5684%" y="101" width="0.0101%" height="15" fill="rgb(252,166,36)" fg:x="346105" fg:w="62"/><text x="56.8184%" y="111.50"></text></g><g><title>`0x7FF874911F17 (242 samples, 0.04%)</title><rect x="56.5786%" y="101" width="0.0396%" height="15" fill="rgb(245,132,34)" fg:x="346167" fg:w="242"/><text x="56.8286%" y="111.50"></text></g><g><title>`0x7FF874911FD5 (78 samples, 0.01%)</title><rect x="56.7440%" y="101" width="0.0127%" height="15" fill="rgb(236,54,3)" fg:x="347179" fg:w="78"/><text x="56.9940%" y="111.50"></text></g><g><title>`0x7FF87490C685 (67 samples, 0.01%)</title><rect x="56.8401%" y="85" width="0.0110%" height="15" fill="rgb(241,173,43)" fg:x="347767" fg:w="67"/><text x="57.0901%" y="95.50"></text></g><g><title>`0x7FF87490C7A5 (65 samples, 0.01%)</title><rect x="56.9926%" y="85" width="0.0106%" height="15" fill="rgb(215,190,9)" fg:x="348700" fg:w="65"/><text x="57.2426%" y="95.50"></text></g><g><title>`0x7FF87490CFE5 (174 samples, 0.03%)</title><rect x="57.0083%" y="69" width="0.0284%" height="15" fill="rgb(242,101,16)" fg:x="348796" fg:w="174"/><text x="57.2583%" y="79.50"></text></g><g><title>`0x7FF87490CFEA (90 samples, 0.01%)</title><rect x="57.0367%" y="69" width="0.0147%" height="15" fill="rgb(223,190,21)" fg:x="348970" fg:w="90"/><text x="57.2867%" y="79.50"></text></g><g><title>`0x7FF87490D08C (147 samples, 0.02%)</title><rect x="57.1647%" y="69" width="0.0240%" height="15" fill="rgb(215,228,25)" fg:x="349753" fg:w="147"/><text x="57.4147%" y="79.50"></text></g><g><title>`0x7FF87490D098 (249 samples, 0.04%)</title><rect x="57.1964%" y="69" width="0.0407%" height="15" fill="rgb(225,36,22)" fg:x="349947" fg:w="249"/><text x="57.4464%" y="79.50"></text></g><g><title>`0x7FF87490D0AA (77 samples, 0.01%)</title><rect x="57.2433%" y="69" width="0.0126%" height="15" fill="rgb(251,106,46)" fg:x="350234" fg:w="77"/><text x="57.4933%" y="79.50"></text></g><g><title>`0x7FF87490D0F2 (961 samples, 0.16%)</title><rect x="57.2887%" y="69" width="0.1571%" height="15" fill="rgb(208,90,1)" fg:x="350512" fg:w="961"/><text x="57.5387%" y="79.50"></text></g><g><title>`0x7FF87490D19A (709 samples, 0.12%)</title><rect x="57.5011%" y="69" width="0.1159%" height="15" fill="rgb(243,10,4)" fg:x="351811" fg:w="709"/><text x="57.7511%" y="79.50"></text></g><g><title>`0x7FF87490D1D7 (497 samples, 0.08%)</title><rect x="57.6575%" y="69" width="0.0812%" height="15" fill="rgb(212,137,27)" fg:x="352768" fg:w="497"/><text x="57.9075%" y="79.50"></text></g><g><title>`0x7FF8749117B3 (470 samples, 0.08%)</title><rect x="57.7915%" y="53" width="0.0768%" height="15" fill="rgb(231,220,49)" fg:x="353588" fg:w="470"/><text x="58.0415%" y="63.50"></text></g><g><title>`0x7FF87490C7AA (5,297 samples, 0.87%)</title><rect x="57.0032%" y="85" width="0.8658%" height="15" fill="rgb(237,96,20)" fg:x="348765" fg:w="5297"/><text x="57.2532%" y="95.50"></text></g><g><title>`0x7FF87490D2D3 (491 samples, 0.08%)</title><rect x="57.7887%" y="69" width="0.0803%" height="15" fill="rgb(239,229,30)" fg:x="353571" fg:w="491"/><text x="58.0387%" y="79.50"></text></g><g><title>`0x7FF874913015 (6,942 samples, 1.13%)</title><rect x="56.7821%" y="101" width="1.1346%" height="15" fill="rgb(219,65,33)" fg:x="347412" fg:w="6942"/><text x="57.0321%" y="111.50"></text></g><g><title>`0x7FF874913060 (186 samples, 0.03%)</title><rect x="57.9345%" y="101" width="0.0304%" height="15" fill="rgb(243,134,7)" fg:x="354463" fg:w="186"/><text x="58.1845%" y="111.50"></text></g><g><title>`0x7FF87490BABC (63 samples, 0.01%)</title><rect x="58.0875%" y="69" width="0.0103%" height="15" fill="rgb(216,177,54)" fg:x="355399" fg:w="63"/><text x="58.3375%" y="79.50"></text></g><g><title>`0x7FF87490BE60 (163 samples, 0.03%)</title><rect x="58.1565%" y="69" width="0.0266%" height="15" fill="rgb(211,160,20)" fg:x="355821" fg:w="163"/><text x="58.4065%" y="79.50"></text></g><g><title>`0x7FF87497BFF0 (180 samples, 0.03%)</title><rect x="58.2274%" y="69" width="0.0294%" height="15" fill="rgb(239,85,39)" fg:x="356255" fg:w="180"/><text x="58.4774%" y="79.50"></text></g><g><title>`0x7FF87497C005 (125 samples, 0.02%)</title><rect x="58.2642%" y="69" width="0.0204%" height="15" fill="rgb(232,125,22)" fg:x="356480" fg:w="125"/><text x="58.5142%" y="79.50"></text></g><g><title>`0x7FF87497C01D (139 samples, 0.02%)</title><rect x="58.2983%" y="69" width="0.0227%" height="15" fill="rgb(244,57,34)" fg:x="356689" fg:w="139"/><text x="58.5483%" y="79.50"></text></g><g><title>`0x7FF87497C021 (175 samples, 0.03%)</title><rect x="58.3210%" y="69" width="0.0286%" height="15" fill="rgb(214,203,32)" fg:x="356828" fg:w="175"/><text x="58.5710%" y="79.50"></text></g><g><title>`0x7FF87497C028 (81 samples, 0.01%)</title><rect x="58.3497%" y="69" width="0.0132%" height="15" fill="rgb(207,58,43)" fg:x="357003" fg:w="81"/><text x="58.5997%" y="79.50"></text></g><g><title>`0x7FF87497C036 (132 samples, 0.02%)</title><rect x="58.3825%" y="69" width="0.0216%" height="15" fill="rgb(215,193,15)" fg:x="357204" fg:w="132"/><text x="58.6325%" y="79.50"></text></g><g><title>`0x7FF87497C052 (95 samples, 0.02%)</title><rect x="58.4261%" y="69" width="0.0155%" height="15" fill="rgb(232,15,44)" fg:x="357471" fg:w="95"/><text x="58.6761%" y="79.50"></text></g><g><title>`0x7FF87497C0EF (889 samples, 0.15%)</title><rect x="58.4905%" y="69" width="0.1453%" height="15" fill="rgb(212,3,48)" fg:x="357865" fg:w="889"/><text x="58.7405%" y="79.50"></text></g><g><title>`0x7FF87497C12F (134 samples, 0.02%)</title><rect x="58.6528%" y="69" width="0.0219%" height="15" fill="rgb(218,128,7)" fg:x="358858" fg:w="134"/><text x="58.9028%" y="79.50"></text></g><g><title>`0x7FF87497C1D5 (323 samples, 0.05%)</title><rect x="58.7032%" y="69" width="0.0528%" height="15" fill="rgb(226,216,39)" fg:x="359166" fg:w="323"/><text x="58.9532%" y="79.50"></text></g><g><title>`0x7FF87497C1EB (204 samples, 0.03%)</title><rect x="58.7609%" y="69" width="0.0333%" height="15" fill="rgb(243,47,51)" fg:x="359519" fg:w="204"/><text x="59.0109%" y="79.50"></text></g><g><title>`0x7FF8749731DA (406 samples, 0.07%)</title><rect x="58.8027%" y="53" width="0.0664%" height="15" fill="rgb(241,183,40)" fg:x="359775" fg:w="406"/><text x="59.0527%" y="63.50"></text></g><g><title>`0x7FF87497C20A (471 samples, 0.08%)</title><rect x="58.7944%" y="69" width="0.0770%" height="15" fill="rgb(231,217,32)" fg:x="359724" fg:w="471"/><text x="59.0444%" y="79.50"></text></g><g><title>`0x7FF874917571 (359 samples, 0.06%)</title><rect x="58.9040%" y="53" width="0.0587%" height="15" fill="rgb(229,61,38)" fg:x="360395" fg:w="359"/><text x="59.1540%" y="63.50"></text></g><g><title>`0x7FF8749731DA (411 samples, 0.07%)</title><rect x="58.9748%" y="37" width="0.0672%" height="15" fill="rgb(225,210,5)" fg:x="360828" fg:w="411"/><text x="59.2248%" y="47.50"></text></g><g><title>`0x7FF8749175A3 (465 samples, 0.08%)</title><rect x="58.9680%" y="53" width="0.0760%" height="15" fill="rgb(231,79,45)" fg:x="360786" fg:w="465"/><text x="59.2180%" y="63.50"></text></g><g><title>`0x7FF87497C296 (1,081 samples, 0.18%)</title><rect x="58.8782%" y="69" width="0.1767%" height="15" fill="rgb(224,100,7)" fg:x="360237" fg:w="1081"/><text x="59.1282%" y="79.50"></text></g><g><title>`0x7FF87497C2C7 (268 samples, 0.04%)</title><rect x="59.0624%" y="69" width="0.0438%" height="15" fill="rgb(241,198,18)" fg:x="361364" fg:w="268"/><text x="59.3124%" y="79.50"></text></g><g><title>`0x7FF87497C2D1 (325 samples, 0.05%)</title><rect x="59.1077%" y="69" width="0.0531%" height="15" fill="rgb(252,97,53)" fg:x="361641" fg:w="325"/><text x="59.3577%" y="79.50"></text></g><g><title>`0x7FF87497C2E5 (303 samples, 0.05%)</title><rect x="59.1633%" y="69" width="0.0495%" height="15" fill="rgb(220,88,7)" fg:x="361981" fg:w="303"/><text x="59.4133%" y="79.50"></text></g><g><title>`0x7FF874932EF2 (126 samples, 0.02%)</title><rect x="59.2195%" y="53" width="0.0206%" height="15" fill="rgb(213,176,14)" fg:x="362325" fg:w="126"/><text x="59.4695%" y="63.50"></text></g><g><title>`0x7FF87497C314 (182 samples, 0.03%)</title><rect x="59.2154%" y="69" width="0.0297%" height="15" fill="rgb(246,73,7)" fg:x="362300" fg:w="182"/><text x="59.4654%" y="79.50"></text></g><g><title>`0x7FF87497C339 (257 samples, 0.04%)</title><rect x="59.2532%" y="69" width="0.0420%" height="15" fill="rgb(245,64,36)" fg:x="362531" fg:w="257"/><text x="59.5032%" y="79.50"></text></g><g><title>`0x7FF87497C3AB (237 samples, 0.04%)</title><rect x="59.3019%" y="69" width="0.0387%" height="15" fill="rgb(245,80,10)" fg:x="362829" fg:w="237"/><text x="59.5519%" y="79.50"></text></g><g><title>`0x7FF87497C3BE (251 samples, 0.04%)</title><rect x="59.3431%" y="69" width="0.0410%" height="15" fill="rgb(232,107,50)" fg:x="363081" fg:w="251"/><text x="59.5931%" y="79.50"></text></g><g><title>`0x7FF87490AB01 (8,437 samples, 1.38%)</title><rect x="58.0198%" y="85" width="1.3790%" height="15" fill="rgb(253,3,0)" fg:x="354985" fg:w="8437"/><text x="58.2698%" y="95.50"></text></g><g><title>`0x7FF874913072 (8,806 samples, 1.44%)</title><rect x="57.9750%" y="101" width="1.4393%" height="15" fill="rgb(212,99,53)" fg:x="354711" fg:w="8806"/><text x="58.2250%" y="111.50"></text></g><g><title>`0x7FF8749130BC (201 samples, 0.03%)</title><rect x="59.4501%" y="101" width="0.0329%" height="15" fill="rgb(249,111,54)" fg:x="363736" fg:w="201"/><text x="59.7001%" y="111.50"></text></g><g><title>`0x7FF874911DD7 (17,887 samples, 2.92%)</title><rect x="56.5673%" y="117" width="2.9235%" height="15" fill="rgb(249,55,30)" fg:x="346098" fg:w="17887"/><text x="56.8173%" y="127.50">`0..</text></g><g><title>`0x7FF874911E10 (95 samples, 0.02%)</title><rect x="59.5194%" y="117" width="0.0155%" height="15" fill="rgb(237,47,42)" fg:x="364160" fg:w="95"/><text x="59.7694%" y="127.50"></text></g><g><title>`0x7FF874911EC8 (100 samples, 0.02%)</title><rect x="59.5590%" y="117" width="0.0163%" height="15" fill="rgb(211,20,18)" fg:x="364402" fg:w="100"/><text x="59.8090%" y="127.50"></text></g><g><title>`0x7FF874911C9A (19,212 samples, 3.14%)</title><rect x="56.4408%" y="133" width="3.1401%" height="15" fill="rgb(231,203,46)" fg:x="345324" fg:w="19212"/><text x="56.6908%" y="143.50">`0x..</text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::reserve_for_push&lt;u8,alloc::alloc::Global&gt; (21,765 samples, 3.56%)</title><rect x="56.1097%" y="213" width="3.5573%" height="15" fill="rgb(237,142,3)" fg:x="343298" fg:w="21765"/><text x="56.3597%" y="223.50">rust..</text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::grow_amortized (21,527 samples, 3.52%)</title><rect x="56.1486%" y="197" width="3.5184%" height="15" fill="rgb(241,107,1)" fg:x="343536" fg:w="21527"/><text x="56.3986%" y="207.50">rus..</text></g><g><title>rust_parser.exe`core::result::impl$26::branch (21,036 samples, 3.44%)</title><rect x="56.2288%" y="181" width="3.4382%" height="15" fill="rgb(229,83,13)" fg:x="344027" fg:w="21036"/><text x="56.4788%" y="191.50">rus..</text></g><g><title>rust_parser.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (20,640 samples, 3.37%)</title><rect x="56.2935%" y="165" width="3.3735%" height="15" fill="rgb(241,91,40)" fg:x="344423" fg:w="20640"/><text x="56.5435%" y="175.50">rus..</text></g><g><title>rust_parser.exe`core::result::Result::map_err (20,334 samples, 3.32%)</title><rect x="56.3436%" y="149" width="3.3235%" height="15" fill="rgb(225,3,45)" fg:x="344729" fg:w="20334"/><text x="56.5936%" y="159.50">rus..</text></g><g><title>rust_parser.exe`std::alloc::__default_lib_allocator::__rdl_realloc (388 samples, 0.06%)</title><rect x="59.6036%" y="133" width="0.0634%" height="15" fill="rgb(244,223,14)" fg:x="364675" fg:w="388"/><text x="59.8536%" y="143.50"></text></g><g><title>rust_parser.exe`std::sys::windows::alloc::impl$0::realloc (157 samples, 0.03%)</title><rect x="59.6413%" y="117" width="0.0257%" height="15" fill="rgb(224,124,37)" fg:x="364906" fg:w="157"/><text x="59.8913%" y="127.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec::as_mut_ptr (126 samples, 0.02%)</title><rect x="59.6670%" y="213" width="0.0206%" height="15" fill="rgb(251,171,30)" fg:x="365063" fg:w="126"/><text x="59.9170%" y="223.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::ptr (126 samples, 0.02%)</title><rect x="59.6670%" y="197" width="0.0206%" height="15" fill="rgb(236,46,54)" fg:x="365063" fg:w="126"/><text x="59.9170%" y="207.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec::push (23,436 samples, 3.83%)</title><rect x="55.8754%" y="229" width="3.8305%" height="15" fill="rgb(245,213,5)" fg:x="341865" fg:w="23436"/><text x="56.1254%" y="239.50">rust..</text></g><g><title>rust_parser.exe`core::ptr::write (112 samples, 0.02%)</title><rect x="59.6876%" y="213" width="0.0183%" height="15" fill="rgb(230,144,27)" fg:x="365189" fg:w="112"/><text x="59.9376%" y="223.50"></text></g><g><title>rust_parser.exe`alloc::string::String::push (25,139 samples, 4.11%)</title><rect x="55.6084%" y="245" width="4.1088%" height="15" fill="rgb(220,86,6)" fg:x="340231" fg:w="25139"/><text x="55.8584%" y="255.50">rust..</text></g><g><title>rust_parser.exe`core::char::methods::impl$0::len_utf8 (69 samples, 0.01%)</title><rect x="59.7059%" y="229" width="0.0113%" height="15" fill="rgb(240,20,13)" fg:x="365301" fg:w="69"/><text x="59.9559%" y="239.50"></text></g><g><title>rust_parser.exe`core::char::methods::len_utf8 (69 samples, 0.01%)</title><rect x="59.7059%" y="213" width="0.0113%" height="15" fill="rgb(217,89,34)" fg:x="365301" fg:w="69"/><text x="59.9559%" y="223.50"></text></g><g><title>rust_parser.exe`core::fmt::impl$0::write_char&lt;alloc::string::String&gt; (26,156 samples, 4.28%)</title><rect x="55.4484%" y="261" width="4.2750%" height="15" fill="rgb(229,13,5)" fg:x="339252" fg:w="26156"/><text x="55.6984%" y="271.50">rust_..</text></g><g><title>rust_parser.exe`core::fmt::PostPadding::write (27,551 samples, 4.50%)</title><rect x="55.2916%" y="277" width="4.5030%" height="15" fill="rgb(244,67,35)" fg:x="338293" fg:w="27551"/><text x="55.5416%" y="287.50">rust_..</text></g><g><title>rust_parser.exe`core::iter::range::impl$3::next (436 samples, 0.07%)</title><rect x="59.7234%" y="261" width="0.0713%" height="15" fill="rgb(221,40,2)" fg:x="365408" fg:w="436"/><text x="59.9734%" y="271.50"></text></g><g><title>rust_parser.exe`core::iter::range::impl$2::spec_next (436 samples, 0.07%)</title><rect x="59.7234%" y="245" width="0.0713%" height="15" fill="rgb(237,157,21)" fg:x="365408" fg:w="436"/><text x="59.9734%" y="255.50"></text></g><g><title>rust_parser.exe`core::cmp::impls::impl$54::lt (436 samples, 0.07%)</title><rect x="59.7234%" y="229" width="0.0713%" height="15" fill="rgb(222,94,11)" fg:x="365408" fg:w="436"/><text x="59.9734%" y="239.50"></text></g><g><title>`0x7FF87490D08C (233 samples, 0.04%)</title><rect x="60.1956%" y="69" width="0.0381%" height="15" fill="rgb(249,113,6)" fg:x="368297" fg:w="233"/><text x="60.4456%" y="79.50"></text></g><g><title>`0x7FF87490D098 (109 samples, 0.02%)</title><rect x="60.2376%" y="69" width="0.0178%" height="15" fill="rgb(238,137,36)" fg:x="368554" fg:w="109"/><text x="60.4876%" y="79.50"></text></g><g><title>`0x7FF87490D0F2 (542 samples, 0.09%)</title><rect x="60.2873%" y="69" width="0.0886%" height="15" fill="rgb(210,102,26)" fg:x="368858" fg:w="542"/><text x="60.5373%" y="79.50"></text></g><g><title>`0x7FF87490D19A (406 samples, 0.07%)</title><rect x="60.4123%" y="69" width="0.0664%" height="15" fill="rgb(218,30,30)" fg:x="369623" fg:w="406"/><text x="60.6623%" y="79.50"></text></g><g><title>`0x7FF87490D1D7 (74 samples, 0.01%)</title><rect x="60.5051%" y="69" width="0.0121%" height="15" fill="rgb(214,67,26)" fg:x="370191" fg:w="74"/><text x="60.7551%" y="79.50"></text></g><g><title>`0x7FF8749117B3 (287 samples, 0.05%)</title><rect x="60.5447%" y="53" width="0.0469%" height="15" fill="rgb(251,9,53)" fg:x="370433" fg:w="287"/><text x="60.7947%" y="63.50"></text></g><g><title>`0x7FF87490D2D3 (300 samples, 0.05%)</title><rect x="60.5437%" y="69" width="0.0490%" height="15" fill="rgb(228,204,25)" fg:x="370427" fg:w="300"/><text x="60.7937%" y="79.50"></text></g><g><title>`0x7FF87490D310 (72 samples, 0.01%)</title><rect x="60.6035%" y="69" width="0.0118%" height="15" fill="rgb(207,153,8)" fg:x="370793" fg:w="72"/><text x="60.8535%" y="79.50"></text></g><g><title>`0x7FF87490D313 (89 samples, 0.01%)</title><rect x="60.6153%" y="69" width="0.0145%" height="15" fill="rgb(242,9,16)" fg:x="370865" fg:w="89"/><text x="60.8653%" y="79.50"></text></g><g><title>`0x7FF87490D31C (80 samples, 0.01%)</title><rect x="60.6298%" y="69" width="0.0131%" height="15" fill="rgb(217,211,10)" fg:x="370954" fg:w="80"/><text x="60.8798%" y="79.50"></text></g><g><title>`0x7FF87490D52F (62 samples, 0.01%)</title><rect x="60.6720%" y="69" width="0.0101%" height="15" fill="rgb(219,228,52)" fg:x="371212" fg:w="62"/><text x="60.9220%" y="79.50"></text></g><g><title>`0x7FF87490D53E (314 samples, 0.05%)</title><rect x="60.6851%" y="69" width="0.0513%" height="15" fill="rgb(231,92,29)" fg:x="371292" fg:w="314"/><text x="60.9351%" y="79.50"></text></g><g><title>`0x7FF8749731A1 (241 samples, 0.04%)</title><rect x="60.6970%" y="53" width="0.0394%" height="15" fill="rgb(232,8,23)" fg:x="371365" fg:w="241"/><text x="60.9470%" y="63.50"></text></g><g><title>`0x7FF87490D59C (69 samples, 0.01%)</title><rect x="60.7467%" y="69" width="0.0113%" height="15" fill="rgb(216,211,34)" fg:x="371669" fg:w="69"/><text x="60.9967%" y="79.50"></text></g><g><title>`0x7FF87490D5A6 (202 samples, 0.03%)</title><rect x="60.7586%" y="69" width="0.0330%" height="15" fill="rgb(236,151,0)" fg:x="371742" fg:w="202"/><text x="61.0086%" y="79.50"></text></g><g><title>`0x7FF87490D5AC (214 samples, 0.03%)</title><rect x="60.7917%" y="69" width="0.0350%" height="15" fill="rgb(209,168,3)" fg:x="371944" fg:w="214"/><text x="61.0417%" y="79.50"></text></g><g><title>`0x7FF87490D5F5 (123 samples, 0.02%)</title><rect x="60.8369%" y="69" width="0.0201%" height="15" fill="rgb(208,129,28)" fg:x="372221" fg:w="123"/><text x="61.0869%" y="79.50"></text></g><g><title>`0x7FF87490D612 (88 samples, 0.01%)</title><rect x="60.8645%" y="69" width="0.0144%" height="15" fill="rgb(229,78,22)" fg:x="372390" fg:w="88"/><text x="61.1145%" y="79.50"></text></g><g><title>`0x7FF874973177 (84 samples, 0.01%)</title><rect x="60.9144%" y="37" width="0.0137%" height="15" fill="rgb(228,187,13)" fg:x="372695" fg:w="84"/><text x="61.1644%" y="47.50"></text></g><g><title>`0x7FF874973195 (408 samples, 0.07%)</title><rect x="60.9281%" y="37" width="0.0667%" height="15" fill="rgb(240,119,24)" fg:x="372779" fg:w="408"/><text x="61.1781%" y="47.50"></text></g><g><title>`0x7FF87493309E (538 samples, 0.09%)</title><rect x="60.9116%" y="53" width="0.0879%" height="15" fill="rgb(209,194,42)" fg:x="372678" fg:w="538"/><text x="61.1616%" y="63.50"></text></g><g><title>`0x7FF874933108 (206 samples, 0.03%)</title><rect x="61.0144%" y="53" width="0.0337%" height="15" fill="rgb(247,200,46)" fg:x="373307" fg:w="206"/><text x="61.2644%" y="63.50"></text></g><g><title>`0x7FF87490D651 (1,057 samples, 0.17%)</title><rect x="60.8858%" y="69" width="0.1728%" height="15" fill="rgb(218,76,16)" fg:x="372520" fg:w="1057"/><text x="61.1358%" y="79.50"></text></g><g><title>`0x7FF87490D67F (240 samples, 0.04%)</title><rect x="61.0646%" y="69" width="0.0392%" height="15" fill="rgb(225,21,48)" fg:x="373614" fg:w="240"/><text x="61.3146%" y="79.50"></text></g><g><title>`0x7FF874973195 (323 samples, 0.05%)</title><rect x="61.1109%" y="53" width="0.0528%" height="15" fill="rgb(239,223,50)" fg:x="373897" fg:w="323"/><text x="61.3609%" y="63.50"></text></g><g><title>`0x7FF87490D689 (379 samples, 0.06%)</title><rect x="61.1038%" y="69" width="0.0619%" height="15" fill="rgb(244,45,21)" fg:x="373854" fg:w="379"/><text x="61.3538%" y="79.50"></text></g><g><title>`0x7FF8749113FE (146 samples, 0.02%)</title><rect x="61.1954%" y="53" width="0.0239%" height="15" fill="rgb(232,33,43)" fg:x="374414" fg:w="146"/><text x="61.4454%" y="63.50"></text></g><g><title>`0x7FF874911420 (1,821 samples, 0.30%)</title><rect x="61.2238%" y="53" width="0.2976%" height="15" fill="rgb(209,8,3)" fg:x="374588" fg:w="1821"/><text x="61.4738%" y="63.50"></text></g><g><title>`0x7FF874911422 (2,142 samples, 0.35%)</title><rect x="61.5214%" y="53" width="0.3501%" height="15" fill="rgb(214,25,53)" fg:x="376409" fg:w="2142"/><text x="61.7714%" y="63.50"></text></g><g><title>`0x7FF874911425 (1,908 samples, 0.31%)</title><rect x="61.8715%" y="53" width="0.3118%" height="15" fill="rgb(254,186,54)" fg:x="378551" fg:w="1908"/><text x="62.1215%" y="63.50"></text></g><g><title>`0x7FF874911428 (1,187 samples, 0.19%)</title><rect x="62.1834%" y="53" width="0.1940%" height="15" fill="rgb(208,174,49)" fg:x="380459" fg:w="1187"/><text x="62.4334%" y="63.50"></text></g><g><title>`0x7FF87491142C (1,877 samples, 0.31%)</title><rect x="62.3774%" y="53" width="0.3068%" height="15" fill="rgb(233,191,51)" fg:x="381646" fg:w="1877"/><text x="62.6274%" y="63.50"></text></g><g><title>`0x7FF87491142F (2,113 samples, 0.35%)</title><rect x="62.6842%" y="53" width="0.3454%" height="15" fill="rgb(222,134,10)" fg:x="383523" fg:w="2113"/><text x="62.9342%" y="63.50"></text></g><g><title>`0x7FF874911431 (1,945 samples, 0.32%)</title><rect x="63.0295%" y="53" width="0.3179%" height="15" fill="rgb(230,226,20)" fg:x="385636" fg:w="1945"/><text x="63.2795%" y="63.50"></text></g><g><title>`0x7FF874911434 (1,523 samples, 0.25%)</title><rect x="63.3474%" y="53" width="0.2489%" height="15" fill="rgb(251,111,25)" fg:x="387581" fg:w="1523"/><text x="63.5974%" y="63.50"></text></g><g><title>`0x7FF874911437 (1,825 samples, 0.30%)</title><rect x="63.5963%" y="53" width="0.2983%" height="15" fill="rgb(224,40,46)" fg:x="389104" fg:w="1825"/><text x="63.8463%" y="63.50"></text></g><g><title>`0x7FF87491143D (2,082 samples, 0.34%)</title><rect x="63.8946%" y="53" width="0.3403%" height="15" fill="rgb(236,108,47)" fg:x="390929" fg:w="2082"/><text x="64.1446%" y="63.50"></text></g><g><title>`0x7FF874911440 (2,187 samples, 0.36%)</title><rect x="64.2349%" y="53" width="0.3574%" height="15" fill="rgb(234,93,0)" fg:x="393011" fg:w="2187"/><text x="64.4849%" y="63.50"></text></g><g><title>`0x7FF874911443 (2,685 samples, 0.44%)</title><rect x="64.5924%" y="53" width="0.4388%" height="15" fill="rgb(224,213,32)" fg:x="395198" fg:w="2685"/><text x="64.8424%" y="63.50"></text></g><g><title>`0x7FF874911446 (1,413 samples, 0.23%)</title><rect x="65.0312%" y="53" width="0.2309%" height="15" fill="rgb(251,11,48)" fg:x="397883" fg:w="1413"/><text x="65.2812%" y="63.50"></text></g><g><title>`0x7FF874911448 (1,616 samples, 0.26%)</title><rect x="65.2621%" y="53" width="0.2641%" height="15" fill="rgb(236,173,5)" fg:x="399296" fg:w="1616"/><text x="65.5121%" y="63.50"></text></g><g><title>`0x7FF87491144B (1,802 samples, 0.29%)</title><rect x="65.5263%" y="53" width="0.2945%" height="15" fill="rgb(230,95,12)" fg:x="400912" fg:w="1802"/><text x="65.7763%" y="63.50"></text></g><g><title>`0x7FF87491144D (2,295 samples, 0.38%)</title><rect x="65.8208%" y="53" width="0.3751%" height="15" fill="rgb(232,209,1)" fg:x="402714" fg:w="2295"/><text x="66.0708%" y="63.50"></text></g><g><title>`0x7FF874911451 (1,400 samples, 0.23%)</title><rect x="66.1959%" y="53" width="0.2288%" height="15" fill="rgb(232,6,1)" fg:x="405009" fg:w="1400"/><text x="66.4459%" y="63.50"></text></g><g><title>`0x7FF874911454 (2,439 samples, 0.40%)</title><rect x="66.4247%" y="53" width="0.3986%" height="15" fill="rgb(210,224,50)" fg:x="406409" fg:w="2439"/><text x="66.6747%" y="63.50"></text></g><g><title>`0x7FF874911458 (2,308 samples, 0.38%)</title><rect x="66.8234%" y="53" width="0.3772%" height="15" fill="rgb(228,127,35)" fg:x="408848" fg:w="2308"/><text x="67.0734%" y="63.50"></text></g><g><title>`0x7FF87491145B (1,950 samples, 0.32%)</title><rect x="67.2006%" y="53" width="0.3187%" height="15" fill="rgb(245,102,45)" fg:x="411156" fg:w="1950"/><text x="67.4506%" y="63.50"></text></g><g><title>`0x7FF87491145E (1,170 samples, 0.19%)</title><rect x="67.5193%" y="53" width="0.1912%" height="15" fill="rgb(214,1,49)" fg:x="413106" fg:w="1170"/><text x="67.7693%" y="63.50"></text></g><g><title>`0x7FF874911463 (79 samples, 0.01%)</title><rect x="67.7105%" y="53" width="0.0129%" height="15" fill="rgb(226,163,40)" fg:x="414276" fg:w="79"/><text x="67.9605%" y="63.50"></text></g><g><title>`0x7FF874911469 (66 samples, 0.01%)</title><rect x="67.7256%" y="53" width="0.0108%" height="15" fill="rgb(239,212,28)" fg:x="414368" fg:w="66"/><text x="67.9756%" y="63.50"></text></g><g><title>`0x7FF87491146F (79 samples, 0.01%)</title><rect x="67.7363%" y="53" width="0.0129%" height="15" fill="rgb(220,20,13)" fg:x="414434" fg:w="79"/><text x="67.9863%" y="63.50"></text></g><g><title>`0x7FF874911483 (316 samples, 0.05%)</title><rect x="67.7524%" y="53" width="0.0516%" height="15" fill="rgb(210,164,35)" fg:x="414532" fg:w="316"/><text x="68.0024%" y="63.50"></text></g><g><title>`0x7FF874911569 (278 samples, 0.05%)</title><rect x="67.8459%" y="53" width="0.0454%" height="15" fill="rgb(248,109,41)" fg:x="415104" fg:w="278"/><text x="68.0959%" y="63.50"></text></g><g><title>`0x7FF8749115D0 (292 samples, 0.05%)</title><rect x="67.9152%" y="53" width="0.0477%" height="15" fill="rgb(238,23,50)" fg:x="415528" fg:w="292"/><text x="68.1652%" y="63.50"></text></g><g><title>`0x7FF8749115E7 (346 samples, 0.06%)</title><rect x="67.9660%" y="53" width="0.0566%" height="15" fill="rgb(211,48,49)" fg:x="415839" fg:w="346"/><text x="68.2160%" y="63.50"></text></g><g><title>`0x7FF874911606 (313 samples, 0.05%)</title><rect x="68.0237%" y="53" width="0.0512%" height="15" fill="rgb(223,36,21)" fg:x="416192" fg:w="313"/><text x="68.2737%" y="63.50"></text></g><g><title>`0x7FF874911796 (348 samples, 0.06%)</title><rect x="68.0971%" y="37" width="0.0569%" height="15" fill="rgb(207,123,46)" fg:x="416641" fg:w="348"/><text x="68.3471%" y="47.50"></text></g><g><title>`0x7FF8749117B3 (29,576 samples, 4.83%)</title><rect x="68.1554%" y="37" width="4.8340%" height="15" fill="rgb(240,218,32)" fg:x="416998" fg:w="29576"/><text x="68.4054%" y="47.50">`0x7FF..</text></g><g><title>`0x7FF8749117BC (82 samples, 0.01%)</title><rect x="72.9910%" y="37" width="0.0134%" height="15" fill="rgb(252,5,43)" fg:x="446584" fg:w="82"/><text x="73.2410%" y="47.50"></text></g><g><title>`0x7FF8749117CF (101 samples, 0.02%)</title><rect x="73.0085%" y="37" width="0.0165%" height="15" fill="rgb(252,84,19)" fg:x="446691" fg:w="101"/><text x="73.2585%" y="47.50"></text></g><g><title>`0x7FF8749117DA (338 samples, 0.06%)</title><rect x="73.0250%" y="37" width="0.0552%" height="15" fill="rgb(243,152,39)" fg:x="446792" fg:w="338"/><text x="73.2750%" y="47.50"></text></g><g><title>`0x7FF874911624 (30,631 samples, 5.01%)</title><rect x="68.0763%" y="53" width="5.0064%" height="15" fill="rgb(234,160,15)" fg:x="416514" fg:w="30631"/><text x="68.3263%" y="63.50">`0x7FF..</text></g><g><title>`0x7FF87491174A (129 samples, 0.02%)</title><rect x="73.0909%" y="37" width="0.0211%" height="15" fill="rgb(237,34,20)" fg:x="447195" fg:w="129"/><text x="73.3409%" y="47.50"></text></g><g><title>`0x7FF874911796 (366 samples, 0.06%)</title><rect x="73.1221%" y="37" width="0.0598%" height="15" fill="rgb(229,97,13)" fg:x="447386" fg:w="366"/><text x="73.3721%" y="47.50"></text></g><g><title>`0x7FF8749117B3 (38,481 samples, 6.29%)</title><rect x="73.1850%" y="37" width="6.2895%" height="15" fill="rgb(234,71,50)" fg:x="447771" fg:w="38481"/><text x="73.4350%" y="47.50">`0x7FF87..</text></g><g><title>`0x7FF8749117BC (84 samples, 0.01%)</title><rect x="79.4758%" y="37" width="0.0137%" height="15" fill="rgb(253,155,4)" fg:x="486260" fg:w="84"/><text x="79.7258%" y="47.50"></text></g><g><title>`0x7FF8749117DA (383 samples, 0.06%)</title><rect x="79.4966%" y="37" width="0.0626%" height="15" fill="rgb(222,185,37)" fg:x="486387" fg:w="383"/><text x="79.7466%" y="47.50"></text></g><g><title>`0x7FF87491162F (39,619 samples, 6.48%)</title><rect x="73.0850%" y="53" width="6.4754%" height="15" fill="rgb(251,177,13)" fg:x="447159" fg:w="39619"/><text x="73.3350%" y="63.50">`0x7FF87..</text></g><g><title>`0x7FF8749117B3 (127 samples, 0.02%)</title><rect x="79.5981%" y="37" width="0.0208%" height="15" fill="rgb(250,179,40)" fg:x="487008" fg:w="127"/><text x="79.8481%" y="47.50"></text></g><g><title>`0x7FF87490D6CF (112,861 samples, 18.45%)</title><rect x="61.1728%" y="69" width="18.4463%" height="15" fill="rgb(242,44,2)" fg:x="374276" fg:w="112861"/><text x="61.4228%" y="79.50">`0x7FF87490D6CF</text></g><g><title>`0x7FF8749116EB (134 samples, 0.02%)</title><rect x="79.5972%" y="53" width="0.0219%" height="15" fill="rgb(216,177,13)" fg:x="487003" fg:w="134"/><text x="79.8472%" y="63.50"></text></g><g><title>`0x7FF87490D6ED (237 samples, 0.04%)</title><rect x="79.6245%" y="69" width="0.0387%" height="15" fill="rgb(216,106,43)" fg:x="487170" fg:w="237"/><text x="79.8745%" y="79.50"></text></g><g><title>`0x7FF87490D71F (229 samples, 0.04%)</title><rect x="79.6731%" y="69" width="0.0374%" height="15" fill="rgb(216,183,2)" fg:x="487467" fg:w="229"/><text x="79.9231%" y="79.50"></text></g><g><title>`0x7FF87490C7AA (119,963 samples, 19.61%)</title><rect x="60.1153%" y="85" width="19.6071%" height="15" fill="rgb(249,75,3)" fg:x="367806" fg:w="119963"/><text x="60.3653%" y="95.50">`0x7FF87490C7AA</text></g><g><title>rust_parser.exe`alloc::vec::Vec::len (121,692 samples, 19.89%)</title><rect x="59.8893%" y="181" width="19.8897%" height="15" fill="rgb(219,67,39)" fg:x="366423" fg:w="121692"/><text x="60.1393%" y="191.50">rust_parser.exe`alloc::vec::Vec..</text></g><g><title>rust_parser.exe`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle&lt;u8,alloc::alloc::Global&gt; (121,657 samples, 19.88%)</title><rect x="59.8950%" y="165" width="19.8840%" height="15" fill="rgb(253,228,2)" fg:x="366458" fg:w="121657"/><text x="60.1450%" y="175.50">rust_parser.exe`alloc::raw_vec:..</text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::grow_amortized (121,579 samples, 19.87%)</title><rect x="59.9078%" y="149" width="19.8712%" height="15" fill="rgb(235,138,27)" fg:x="366536" fg:w="121579"/><text x="60.1578%" y="159.50">rust_parser.exe`alloc::raw_vec:..</text></g><g><title>rust_parser.exe`core::result::impl$26::branch (121,372 samples, 19.84%)</title><rect x="59.9416%" y="133" width="19.8374%" height="15" fill="rgb(236,97,51)" fg:x="366743" fg:w="121372"/><text x="60.1916%" y="143.50">rust_parser.exe`core::result::i..</text></g><g><title>rust_parser.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (121,336 samples, 19.83%)</title><rect x="59.9475%" y="117" width="19.8315%" height="15" fill="rgb(240,80,30)" fg:x="366779" fg:w="121336"/><text x="60.1975%" y="127.50">rust_parser.exe`alloc::raw_vec:..</text></g><g><title>rust_parser.exe`core::result::Result::map_err (121,195 samples, 19.81%)</title><rect x="59.9705%" y="101" width="19.8085%" height="15" fill="rgb(230,178,19)" fg:x="366920" fg:w="121195"/><text x="60.2205%" y="111.50">rust_parser.exe`core::result::R..</text></g><g><title>rust_parser.exe`std::alloc::__default_lib_allocator::__rdl_alloc (161 samples, 0.03%)</title><rect x="79.7527%" y="85" width="0.0263%" height="15" fill="rgb(210,190,27)" fg:x="487954" fg:w="161"/><text x="80.0027%" y="95.50"></text></g><g><title>rust_parser.exe`std::sys::windows::alloc::impl$0::alloc (90 samples, 0.01%)</title><rect x="79.7643%" y="69" width="0.0147%" height="15" fill="rgb(222,107,31)" fg:x="488025" fg:w="90"/><text x="80.0143%" y="79.50"></text></g><g><title>rust_parser.exe`std::sys::windows::alloc::allocate (90 samples, 0.01%)</title><rect x="79.7643%" y="53" width="0.0147%" height="15" fill="rgb(216,127,34)" fg:x="488025" fg:w="90"/><text x="80.0143%" y="63.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec::reserve (79 samples, 0.01%)</title><rect x="79.7790%" y="181" width="0.0129%" height="15" fill="rgb(234,116,52)" fg:x="488115" fg:w="79"/><text x="80.0290%" y="191.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::reserve (70 samples, 0.01%)</title><rect x="79.7805%" y="165" width="0.0114%" height="15" fill="rgb(222,124,15)" fg:x="488124" fg:w="70"/><text x="80.0305%" y="175.50"></text></g><g><title>rust_parser.exe`core::ptr::mut_ptr::impl$0::add (68 samples, 0.01%)</title><rect x="79.7919%" y="181" width="0.0111%" height="15" fill="rgb(231,179,28)" fg:x="488194" fg:w="68"/><text x="80.0419%" y="191.50"></text></g><g><title>rust_parser.exe`core::fmt::impl$0::write_str&lt;alloc::string::String&gt; (122,433 samples, 20.01%)</title><rect x="59.7947%" y="277" width="20.0108%" height="15" fill="rgb(226,93,45)" fg:x="365844" fg:w="122433"/><text x="60.0447%" y="287.50">rust_parser.exe`core::fmt::impl..</text></g><g><title>rust_parser.exe`alloc::string::impl$67::write_str (122,256 samples, 19.98%)</title><rect x="59.8236%" y="261" width="19.9819%" height="15" fill="rgb(215,8,51)" fg:x="366021" fg:w="122256"/><text x="60.0736%" y="271.50">rust_parser.exe`alloc::string::..</text></g><g><title>rust_parser.exe`alloc::string::String::push_str (122,256 samples, 19.98%)</title><rect x="59.8236%" y="245" width="19.9819%" height="15" fill="rgb(223,106,5)" fg:x="366021" fg:w="122256"/><text x="60.0736%" y="255.50">rust_parser.exe`alloc::string::..</text></g><g><title>rust_parser.exe`alloc::vec::Vec::extend_from_slice (122,256 samples, 19.98%)</title><rect x="59.8236%" y="229" width="19.9819%" height="15" fill="rgb(250,191,5)" fg:x="366021" fg:w="122256"/><text x="60.0736%" y="239.50">rust_parser.exe`alloc::vec::Vec..</text></g><g><title>rust_parser.exe`alloc::vec::spec_extend::impl$4::spec_extend (122,256 samples, 19.98%)</title><rect x="59.8236%" y="213" width="19.9819%" height="15" fill="rgb(242,132,44)" fg:x="366021" fg:w="122256"/><text x="60.0736%" y="223.50">rust_parser.exe`alloc::vec::spe..</text></g><g><title>rust_parser.exe`alloc::vec::Vec::append_elements (122,256 samples, 19.98%)</title><rect x="59.8236%" y="197" width="19.9819%" height="15" fill="rgb(251,152,29)" fg:x="366021" fg:w="122256"/><text x="60.0736%" y="207.50">rust_parser.exe`alloc::vec::Vec..</text></g><g><title>rust_parser.exe`core::iter::adapters::filter::impl$2::count::to_usize::closure$0 (616 samples, 0.10%)</title><rect x="79.8592%" y="133" width="0.1007%" height="15" fill="rgb(218,179,5)" fg:x="488606" fg:w="616"/><text x="80.1092%" y="143.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::map::map_fold::closure$0 (979 samples, 0.16%)</title><rect x="79.8592%" y="149" width="0.1600%" height="15" fill="rgb(227,67,19)" fg:x="488606" fg:w="979"/><text x="80.1092%" y="159.50"></text></g><g><title>rust_parser.exe`core::iter::traits::accum::impl$48::sum::closure$0 (363 samples, 0.06%)</title><rect x="79.9599%" y="133" width="0.0593%" height="15" fill="rgb(233,119,31)" fg:x="489222" fg:w="363"/><text x="80.2099%" y="143.50"></text></g><g><title>rust_parser.exe`core::fmt::Formatter::pad (151,856 samples, 24.82%)</title><rect x="55.1999%" y="293" width="24.8198%" height="15" fill="rgb(241,120,22)" fg:x="337732" fg:w="151856"/><text x="55.4499%" y="303.50">rust_parser.exe`core::fmt::Formatter::pad</text></g><g><title>rust_parser.exe`core::str::iter::impl$0::count (1,286 samples, 0.21%)</title><rect x="79.8096%" y="277" width="0.2102%" height="15" fill="rgb(224,102,30)" fg:x="488302" fg:w="1286"/><text x="80.0596%" y="287.50"></text></g><g><title>rust_parser.exe`core::str::count::count_chars (1,286 samples, 0.21%)</title><rect x="79.8096%" y="261" width="0.2102%" height="15" fill="rgb(210,164,37)" fg:x="488302" fg:w="1286"/><text x="80.0596%" y="271.50"></text></g><g><title>rust_parser.exe`core::str::count::char_count_general_case (1,276 samples, 0.21%)</title><rect x="79.8112%" y="245" width="0.2086%" height="15" fill="rgb(226,191,16)" fg:x="488312" fg:w="1276"/><text x="80.0612%" y="255.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::filter::impl$2::count (1,276 samples, 0.21%)</title><rect x="79.8112%" y="229" width="0.2086%" height="15" fill="rgb(214,40,45)" fg:x="488312" fg:w="1276"/><text x="80.0612%" y="239.50"></text></g><g><title>rust_parser.exe`core::iter::traits::iterator::Iterator::sum (1,276 samples, 0.21%)</title><rect x="79.8112%" y="213" width="0.2086%" height="15" fill="rgb(244,29,26)" fg:x="488312" fg:w="1276"/><text x="80.0612%" y="223.50"></text></g><g><title>rust_parser.exe`core::iter::traits::accum::impl$48::sum (1,276 samples, 0.21%)</title><rect x="79.8112%" y="197" width="0.2086%" height="15" fill="rgb(216,16,5)" fg:x="488312" fg:w="1276"/><text x="80.0612%" y="207.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::map::impl$2::fold (1,276 samples, 0.21%)</title><rect x="79.8112%" y="181" width="0.2086%" height="15" fill="rgb(249,76,35)" fg:x="488312" fg:w="1276"/><text x="80.0612%" y="191.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$181::fold (1,276 samples, 0.21%)</title><rect x="79.8112%" y="165" width="0.2086%" height="15" fill="rgb(207,11,44)" fg:x="488312" fg:w="1276"/><text x="80.0612%" y="175.50"></text></g><g><title>rust_parser.exe`core::fmt::impl$55::fmt&lt;alloc::string::String&gt; (152,793 samples, 24.97%)</title><rect x="55.0591%" y="325" width="24.9730%" height="15" fill="rgb(228,190,49)" fg:x="336870" fg:w="152793"/><text x="55.3091%" y="335.50">rust_parser.exe`core::fmt::impl$55::fmt&lt;..</text></g><g><title>rust_parser.exe`alloc::string::impl$21::fmt (152,626 samples, 24.95%)</title><rect x="55.0863%" y="309" width="24.9457%" height="15" fill="rgb(214,173,12)" fg:x="337037" fg:w="152626"/><text x="55.3363%" y="319.50">rust_parser.exe`alloc::string::impl$21::..</text></g><g><title>rust_parser.exe`core::fmt::getcount (86 samples, 0.01%)</title><rect x="80.0830%" y="309" width="0.0141%" height="15" fill="rgb(218,26,35)" fg:x="489975" fg:w="86"/><text x="80.3330%" y="319.50"></text></g><g><title>rust_parser.exe`core::fmt::rt::Argument::fmt (88 samples, 0.01%)</title><rect x="80.0971%" y="309" width="0.0144%" height="15" fill="rgb(220,200,19)" fg:x="490061" fg:w="88"/><text x="80.3471%" y="319.50"></text></g><g><title>rust_parser.exe`core::fmt::run (490 samples, 0.08%)</title><rect x="80.0320%" y="325" width="0.0801%" height="15" fill="rgb(239,95,49)" fg:x="489663" fg:w="490"/><text x="80.2820%" y="335.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::enumerate::impl$1::next (199 samples, 0.03%)</title><rect x="80.1121%" y="325" width="0.0325%" height="15" fill="rgb(235,85,53)" fg:x="490153" fg:w="199"/><text x="80.3621%" y="335.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$181::next (199 samples, 0.03%)</title><rect x="80.1121%" y="309" width="0.0325%" height="15" fill="rgb(233,133,31)" fg:x="490153" fg:w="199"/><text x="80.3621%" y="319.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::impl$12::eq (81 samples, 0.01%)</title><rect x="80.1314%" y="293" width="0.0132%" height="15" fill="rgb(218,25,20)" fg:x="490271" fg:w="81"/><text x="80.3814%" y="303.50"></text></g><g><title>rust_parser.exe`alloc::fmt::format::format_inner (183,075 samples, 29.92%)</title><rect x="50.2282%" y="373" width="29.9223%" height="15" fill="rgb(252,210,38)" fg:x="307313" fg:w="183075"/><text x="50.4782%" y="383.50">rust_parser.exe`alloc::fmt::format::format_inner</text></g><g><title>rust_parser.exe`core::result::Result::expect (181,530 samples, 29.67%)</title><rect x="50.4807%" y="357" width="29.6698%" height="15" fill="rgb(242,134,21)" fg:x="308858" fg:w="181530"/><text x="50.7307%" y="367.50">rust_parser.exe`core::result::Result::expect</text></g><g><title>rust_parser.exe`core::fmt::write (181,423 samples, 29.65%)</title><rect x="50.4982%" y="341" width="29.6523%" height="15" fill="rgb(213,28,48)" fg:x="308965" fg:w="181423"/><text x="50.7482%" y="351.50">rust_parser.exe`core::fmt::write</text></g><g><title>rust_parser.exe`alloc::fmt::format (187,320 samples, 30.62%)</title><rect x="49.5425%" y="421" width="30.6161%" height="15" fill="rgb(250,196,2)" fg:x="303118" fg:w="187320"/><text x="49.7925%" y="431.50">rust_parser.exe`alloc::fmt::format</text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;::map_or_else&lt;ref$&lt;str$&gt;,alloc::string::String,alloc::fmt::format::closure_env$0,alloc::string::String (*)(ref$&lt;str$&gt;)&gt;(enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;, alloc::fmt::format::closure_env$0, alloc::string::String (*)(ref$ (186,077 samples, 30.41%)</title><rect x="49.7457%" y="405" width="30.4130%" height="15" fill="rgb(227,5,17)" fg:x="304361" fg:w="186077"/><text x="49.9957%" y="415.50">rust_parser.exe`enum2$&lt;core::option::Option&lt;ref$&lt;..</text></g><g><title>rust_parser.exe`alloc::fmt::format::closure$0 (184,717 samples, 30.19%)</title><rect x="49.9680%" y="389" width="30.1907%" height="15" fill="rgb(221,226,24)" fg:x="305721" fg:w="184717"/><text x="50.2180%" y="399.50">rust_parser.exe`alloc::fmt::format::closure$0</text></g><g><title>`0x7FF87490C7AA (492 samples, 0.08%)</title><rect x="80.2062%" y="245" width="0.0804%" height="15" fill="rgb(211,5,48)" fg:x="490729" fg:w="492"/><text x="80.4562%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec::with_capacity_in (658 samples, 0.11%)</title><rect x="80.1883%" y="341" width="0.1075%" height="15" fill="rgb(219,150,6)" fg:x="490619" fg:w="658"/><text x="80.4383%" y="351.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::with_capacity_in (658 samples, 0.11%)</title><rect x="80.1883%" y="325" width="0.1075%" height="15" fill="rgb(251,46,16)" fg:x="490619" fg:w="658"/><text x="80.4383%" y="335.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::allocate_in (658 samples, 0.11%)</title><rect x="80.1883%" y="309" width="0.1075%" height="15" fill="rgb(220,204,40)" fg:x="490619" fg:w="658"/><text x="80.4383%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::allocate (640 samples, 0.10%)</title><rect x="80.1912%" y="293" width="0.1046%" height="15" fill="rgb(211,85,2)" fg:x="490637" fg:w="640"/><text x="80.4412%" y="303.50"></text></g><g><title>rust_parser.exe`alloc::alloc::Global::alloc_impl (640 samples, 0.10%)</title><rect x="80.1912%" y="277" width="0.1046%" height="15" fill="rgb(229,17,7)" fg:x="490637" fg:w="640"/><text x="80.4412%" y="287.50"></text></g><g><title>rust_parser.exe`alloc::alloc::alloc (640 samples, 0.10%)</title><rect x="80.1912%" y="261" width="0.1046%" height="15" fill="rgb(239,72,28)" fg:x="490637" fg:w="640"/><text x="80.4412%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$10::clone (662 samples, 0.11%)</title><rect x="80.1883%" y="405" width="0.1082%" height="15" fill="rgb(230,47,54)" fg:x="490619" fg:w="662"/><text x="80.4383%" y="415.50"></text></g><g><title>rust_parser.exe`alloc::slice::impl$0::to_vec_in (662 samples, 0.11%)</title><rect x="80.1883%" y="389" width="0.1082%" height="15" fill="rgb(214,50,8)" fg:x="490619" fg:w="662"/><text x="80.4383%" y="399.50"></text></g><g><title>rust_parser.exe`alloc::slice::hack::to_vec (662 samples, 0.11%)</title><rect x="80.1883%" y="373" width="0.1082%" height="15" fill="rgb(216,198,43)" fg:x="490619" fg:w="662"/><text x="80.4383%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::slice::hack::impl$1::to_vec (662 samples, 0.11%)</title><rect x="80.1883%" y="357" width="0.1082%" height="15" fill="rgb(234,20,35)" fg:x="490619" fg:w="662"/><text x="80.4383%" y="367.50"></text></g><g><title>rust_parser.exe`alloc::string::impl$6::clone (848 samples, 0.14%)</title><rect x="80.1587%" y="421" width="0.1386%" height="15" fill="rgb(254,45,19)" fg:x="490438" fg:w="848"/><text x="80.4087%" y="431.50"></text></g><g><title>`0x7FF85D9715F8 (112 samples, 0.02%)</title><rect x="80.4645%" y="357" width="0.0183%" height="15" fill="rgb(219,14,44)" fg:x="492309" fg:w="112"/><text x="80.7145%" y="367.50"></text></g><g><title>`0x7FF85D9715FF (94 samples, 0.02%)</title><rect x="80.4828%" y="357" width="0.0154%" height="15" fill="rgb(217,220,26)" fg:x="492421" fg:w="94"/><text x="80.7328%" y="367.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;::spare_capacity_mut&lt;can_dbc::Signal,alloc::alloc::Global&gt; (70 samples, 0.01%)</title><rect x="80.5057%" y="357" width="0.0114%" height="15" fill="rgb(213,158,28)" fg:x="492561" fg:w="70"/><text x="80.7557%" y="367.50"></text></g><g><title>`0x7FF87490D08C (86 samples, 0.01%)</title><rect x="80.6063%" y="245" width="0.0141%" height="15" fill="rgb(252,51,52)" fg:x="493177" fg:w="86"/><text x="80.8563%" y="255.50"></text></g><g><title>`0x7FF87490D098 (68 samples, 0.01%)</title><rect x="80.6217%" y="245" width="0.0111%" height="15" fill="rgb(246,89,16)" fg:x="493271" fg:w="68"/><text x="80.8717%" y="255.50"></text></g><g><title>`0x7FF87490D0F2 (66 samples, 0.01%)</title><rect x="80.6361%" y="245" width="0.0108%" height="15" fill="rgb(216,158,49)" fg:x="493359" fg:w="66"/><text x="80.8861%" y="255.50"></text></g><g><title>`0x7FF87490D19A (82 samples, 0.01%)</title><rect x="80.6539%" y="245" width="0.0134%" height="15" fill="rgb(236,107,19)" fg:x="493468" fg:w="82"/><text x="80.9039%" y="255.50"></text></g><g><title>`0x7FF87490D1D7 (104 samples, 0.02%)</title><rect x="80.6696%" y="245" width="0.0170%" height="15" fill="rgb(228,185,30)" fg:x="493564" fg:w="104"/><text x="80.9196%" y="255.50"></text></g><g><title>`0x7FF87490D651 (83 samples, 0.01%)</title><rect x="80.7252%" y="245" width="0.0136%" height="15" fill="rgb(246,134,8)" fg:x="493904" fg:w="83"/><text x="80.9752%" y="255.50"></text></g><g><title>`0x7FF8749117B3 (1,010 samples, 0.17%)</title><rect x="80.7824%" y="213" width="0.1651%" height="15" fill="rgb(214,143,50)" fg:x="494254" fg:w="1010"/><text x="81.0324%" y="223.50"></text></g><g><title>`0x7FF874911624 (1,038 samples, 0.17%)</title><rect x="80.7801%" y="229" width="0.1697%" height="15" fill="rgb(228,75,8)" fg:x="494240" fg:w="1038"/><text x="81.0301%" y="239.50"></text></g><g><title>`0x7FF8749117B3 (1,145 samples, 0.19%)</title><rect x="80.9543%" y="213" width="0.1871%" height="15" fill="rgb(207,175,4)" fg:x="495306" fg:w="1145"/><text x="81.2043%" y="223.50"></text></g><g><title>`0x7FF87491162F (1,190 samples, 0.19%)</title><rect x="80.9497%" y="229" width="0.1945%" height="15" fill="rgb(205,108,24)" fg:x="495278" fg:w="1190"/><text x="81.1997%" y="239.50"></text></g><g><title>`0x7FF87490D6CF (2,469 samples, 0.40%)</title><rect x="80.7435%" y="245" width="0.4035%" height="15" fill="rgb(244,120,49)" fg:x="494016" fg:w="2469"/><text x="80.9935%" y="255.50"></text></g><g><title>`0x7FF87490C7AA (3,439 samples, 0.56%)</title><rect x="80.5887%" y="261" width="0.5621%" height="15" fill="rgb(223,47,38)" fg:x="493069" fg:w="3439"/><text x="80.8387%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::alloc::alloc (3,636 samples, 0.59%)</title><rect x="80.5678%" y="277" width="0.5943%" height="15" fill="rgb(229,179,11)" fg:x="492941" fg:w="3636"/><text x="80.8178%" y="287.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::allocate (3,859 samples, 0.63%)</title><rect x="80.5468%" y="309" width="0.6307%" height="15" fill="rgb(231,122,1)" fg:x="492813" fg:w="3859"/><text x="80.7968%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::alloc::Global::alloc_impl (3,828 samples, 0.63%)</title><rect x="80.5519%" y="293" width="0.6257%" height="15" fill="rgb(245,119,9)" fg:x="492844" fg:w="3828"/><text x="80.8019%" y="303.50"></text></g><g><title>rust_parser.exe`core::alloc::layout::impl$0::array::inner (222 samples, 0.04%)</title><rect x="81.1804%" y="293" width="0.0363%" height="15" fill="rgb(241,163,25)" fg:x="496689" fg:w="222"/><text x="81.4304%" y="303.50"></text></g><g><title>rust_parser.exe`core::alloc::layout::Layout::array (242 samples, 0.04%)</title><rect x="81.1776%" y="309" width="0.0396%" height="15" fill="rgb(217,214,3)" fg:x="496672" fg:w="242"/><text x="81.4276%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;::with_capacity_in (4,303 samples, 0.70%)</title><rect x="80.5171%" y="357" width="0.7033%" height="15" fill="rgb(240,86,28)" fg:x="492631" fg:w="4303"/><text x="80.7671%" y="367.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;can_dbc::Signal,alloc::alloc::Global&gt;::with_capacity_in (4,277 samples, 0.70%)</title><rect x="80.5214%" y="341" width="0.6990%" height="15" fill="rgb(215,47,9)" fg:x="492657" fg:w="4277"/><text x="80.7714%" y="351.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;can_dbc::Signal,alloc::alloc::Global&gt;::allocate_in&lt;can_dbc::Signal,alloc::alloc::Global&gt; (4,270 samples, 0.70%)</title><rect x="80.5225%" y="325" width="0.6979%" height="15" fill="rgb(252,25,45)" fg:x="492664" fg:w="4270"/><text x="80.7725%" y="335.50"></text></g><g><title>`0x7FF85D971310 (79 samples, 0.01%)</title><rect x="81.5383%" y="325" width="0.0129%" height="15" fill="rgb(251,164,9)" fg:x="498879" fg:w="79"/><text x="81.7883%" y="335.50"></text></g><g><title>`0x7FF85D9713C3 (97 samples, 0.02%)</title><rect x="81.5911%" y="325" width="0.0159%" height="15" fill="rgb(233,194,0)" fg:x="499202" fg:w="97"/><text x="81.8411%" y="335.50"></text></g><g><title>`0x7FF85D971427 (168 samples, 0.03%)</title><rect x="81.6259%" y="325" width="0.0275%" height="15" fill="rgb(249,111,24)" fg:x="499415" fg:w="168"/><text x="81.8759%" y="335.50"></text></g><g><title>`0x7FF85D97143A (115 samples, 0.02%)</title><rect x="81.6586%" y="325" width="0.0188%" height="15" fill="rgb(250,223,3)" fg:x="499615" fg:w="115"/><text x="81.9086%" y="335.50"></text></g><g><title>`0x7FF87490C605 (71 samples, 0.01%)</title><rect x="81.7102%" y="165" width="0.0116%" height="15" fill="rgb(236,178,37)" fg:x="499931" fg:w="71"/><text x="81.9602%" y="175.50"></text></g><g><title>`0x7FF87490D098 (114 samples, 0.02%)</title><rect x="82.0767%" y="149" width="0.0186%" height="15" fill="rgb(241,158,50)" fg:x="502173" fg:w="114"/><text x="82.3267%" y="159.50"></text></g><g><title>`0x7FF87490D0AA (112 samples, 0.02%)</title><rect x="82.1032%" y="149" width="0.0183%" height="15" fill="rgb(213,121,41)" fg:x="502335" fg:w="112"/><text x="82.3532%" y="159.50"></text></g><g><title>`0x7FF87490D0F2 (1,115 samples, 0.18%)</title><rect x="82.1600%" y="149" width="0.1822%" height="15" fill="rgb(240,92,3)" fg:x="502683" fg:w="1115"/><text x="82.4100%" y="159.50"></text></g><g><title>`0x7FF87490D109 (63 samples, 0.01%)</title><rect x="82.3426%" y="149" width="0.0103%" height="15" fill="rgb(205,123,3)" fg:x="503800" fg:w="63"/><text x="82.5926%" y="159.50"></text></g><g><title>`0x7FF87490D128 (65 samples, 0.01%)</title><rect x="82.3535%" y="149" width="0.0106%" height="15" fill="rgb(205,97,47)" fg:x="503867" fg:w="65"/><text x="82.6035%" y="159.50"></text></g><g><title>`0x7FF87490D180 (63 samples, 0.01%)</title><rect x="82.3938%" y="149" width="0.0103%" height="15" fill="rgb(247,152,14)" fg:x="504113" fg:w="63"/><text x="82.6438%" y="159.50"></text></g><g><title>`0x7FF87496ED5B (69 samples, 0.01%)</title><rect x="82.4977%" y="133" width="0.0113%" height="15" fill="rgb(248,195,53)" fg:x="504749" fg:w="69"/><text x="82.7477%" y="143.50"></text></g><g><title>`0x7FF87496ED6E (73 samples, 0.01%)</title><rect x="82.5191%" y="133" width="0.0119%" height="15" fill="rgb(226,201,16)" fg:x="504880" fg:w="73"/><text x="82.7691%" y="143.50"></text></g><g><title>`0x7FF87496ED88 (65 samples, 0.01%)</title><rect x="82.5436%" y="133" width="0.0106%" height="15" fill="rgb(205,98,0)" fg:x="505030" fg:w="65"/><text x="82.7936%" y="143.50"></text></g><g><title>`0x7FF87490D19A (921 samples, 0.15%)</title><rect x="82.4150%" y="149" width="0.1505%" height="15" fill="rgb(214,191,48)" fg:x="504243" fg:w="921"/><text x="82.6650%" y="159.50"></text></g><g><title>`0x7FF87490D1D7 (339 samples, 0.06%)</title><rect x="82.6224%" y="149" width="0.0554%" height="15" fill="rgb(237,112,39)" fg:x="505512" fg:w="339"/><text x="82.8724%" y="159.50"></text></g><g><title>`0x7FF8749117B3 (502 samples, 0.08%)</title><rect x="82.7370%" y="133" width="0.0820%" height="15" fill="rgb(247,203,27)" fg:x="506213" fg:w="502"/><text x="82.9870%" y="143.50"></text></g><g><title>`0x7FF87490C7AA (5,354 samples, 0.88%)</title><rect x="81.9448%" y="165" width="0.8751%" height="15" fill="rgb(235,124,28)" fg:x="501366" fg:w="5354"/><text x="82.1948%" y="175.50"></text></g><g><title>`0x7FF87490D2D3 (532 samples, 0.09%)</title><rect x="82.7329%" y="149" width="0.0870%" height="15" fill="rgb(208,207,46)" fg:x="506188" fg:w="532"/><text x="82.9829%" y="159.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec::with_capacity_in (7,713 samples, 1.26%)</title><rect x="81.6849%" y="261" width="1.2606%" height="15" fill="rgb(234,176,4)" fg:x="499776" fg:w="7713"/><text x="81.9349%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::with_capacity_in (7,713 samples, 1.26%)</title><rect x="81.6849%" y="245" width="1.2606%" height="15" fill="rgb(230,133,28)" fg:x="499776" fg:w="7713"/><text x="81.9349%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::allocate_in (7,713 samples, 1.26%)</title><rect x="81.6849%" y="229" width="1.2606%" height="15" fill="rgb(211,137,40)" fg:x="499776" fg:w="7713"/><text x="81.9349%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::allocate (7,612 samples, 1.24%)</title><rect x="81.7014%" y="213" width="1.2441%" height="15" fill="rgb(254,35,13)" fg:x="499877" fg:w="7612"/><text x="81.9514%" y="223.50"></text></g><g><title>rust_parser.exe`alloc::alloc::Global::alloc_impl (7,612 samples, 1.24%)</title><rect x="81.7014%" y="197" width="1.2441%" height="15" fill="rgb(225,49,51)" fg:x="499877" fg:w="7612"/><text x="81.9514%" y="207.50"></text></g><g><title>rust_parser.exe`alloc::alloc::alloc (7,612 samples, 1.24%)</title><rect x="81.7014%" y="181" width="1.2441%" height="15" fill="rgb(251,10,15)" fg:x="499877" fg:w="7612"/><text x="81.9514%" y="191.50"></text></g><g><title>rust_parser.exe`std::alloc::__default_lib_allocator::__rdl_alloc (336 samples, 0.05%)</title><rect x="82.8906%" y="165" width="0.0549%" height="15" fill="rgb(228,207,15)" fg:x="507153" fg:w="336"/><text x="83.1406%" y="175.50"></text></g><g><title>rust_parser.exe`std::sys::windows::alloc::impl$0::alloc (204 samples, 0.03%)</title><rect x="82.9122%" y="149" width="0.0333%" height="15" fill="rgb(241,99,19)" fg:x="507285" fg:w="204"/><text x="83.1622%" y="159.50"></text></g><g><title>rust_parser.exe`std::sys::windows::alloc::allocate (204 samples, 0.03%)</title><rect x="82.9122%" y="133" width="0.0333%" height="15" fill="rgb(207,104,49)" fg:x="507285" fg:w="204"/><text x="83.1622%" y="143.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$10::clone (7,781 samples, 1.27%)</title><rect x="81.6849%" y="325" width="1.2718%" height="15" fill="rgb(234,99,18)" fg:x="499776" fg:w="7781"/><text x="81.9349%" y="335.50"></text></g><g><title>rust_parser.exe`alloc::slice::impl$0::to_vec_in (7,781 samples, 1.27%)</title><rect x="81.6849%" y="309" width="1.2718%" height="15" fill="rgb(213,191,49)" fg:x="499776" fg:w="7781"/><text x="81.9349%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::slice::hack::to_vec (7,781 samples, 1.27%)</title><rect x="81.6849%" y="293" width="1.2718%" height="15" fill="rgb(210,226,19)" fg:x="499776" fg:w="7781"/><text x="81.9349%" y="303.50"></text></g><g><title>rust_parser.exe`alloc::slice::hack::impl$1::to_vec (7,781 samples, 1.27%)</title><rect x="81.6849%" y="277" width="1.2718%" height="15" fill="rgb(229,97,18)" fg:x="499776" fg:w="7781"/><text x="81.9349%" y="287.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::copy_to_nonoverlapping (68 samples, 0.01%)</title><rect x="82.9455%" y="261" width="0.0111%" height="15" fill="rgb(211,167,15)" fg:x="507489" fg:w="68"/><text x="83.1955%" y="271.50"></text></g><g><title>rust_parser.exe`core::intrinsics::copy_nonoverlapping (68 samples, 0.01%)</title><rect x="82.9455%" y="245" width="0.0111%" height="15" fill="rgb(210,169,34)" fg:x="507489" fg:w="68"/><text x="83.1955%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::string::impl$6::clone (9,300 samples, 1.52%)</title><rect x="81.4424%" y="341" width="1.5200%" height="15" fill="rgb(241,121,31)" fg:x="498292" fg:w="9300"/><text x="81.6924%" y="351.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$5::clone (73 samples, 0.01%)</title><rect x="83.0058%" y="325" width="0.0119%" height="15" fill="rgb(232,40,11)" fg:x="507858" fg:w="73"/><text x="83.2558%" y="335.50"></text></g><g><title>`0x7FF85D971310 (62 samples, 0.01%)</title><rect x="83.4122%" y="261" width="0.0101%" height="15" fill="rgb(205,86,26)" fg:x="510344" fg:w="62"/><text x="83.6622%" y="271.50"></text></g><g><title>`0x7FF85D97139B (156 samples, 0.03%)</title><rect x="83.4540%" y="261" width="0.0255%" height="15" fill="rgb(231,126,28)" fg:x="510600" fg:w="156"/><text x="83.7040%" y="271.50"></text></g><g><title>`0x7FF85D9713D9 (100 samples, 0.02%)</title><rect x="83.4983%" y="261" width="0.0163%" height="15" fill="rgb(219,221,18)" fg:x="510871" fg:w="100"/><text x="83.7483%" y="271.50"></text></g><g><title>`0x7FF87490D0F2 (934 samples, 0.15%)</title><rect x="83.9264%" y="85" width="0.1527%" height="15" fill="rgb(211,40,0)" fg:x="513490" fg:w="934"/><text x="84.1764%" y="95.50"></text></g><g><title>`0x7FF87490D19A (693 samples, 0.11%)</title><rect x="84.1403%" y="85" width="0.1133%" height="15" fill="rgb(239,85,43)" fg:x="514799" fg:w="693"/><text x="84.3903%" y="95.50"></text></g><g><title>`0x7FF87490D1D7 (201 samples, 0.03%)</title><rect x="84.2962%" y="85" width="0.0329%" height="15" fill="rgb(231,55,21)" fg:x="515753" fg:w="201"/><text x="84.5462%" y="95.50"></text></g><g><title>`0x7FF8749117B3 (406 samples, 0.07%)</title><rect x="84.3719%" y="69" width="0.0664%" height="15" fill="rgb(225,184,43)" fg:x="516216" fg:w="406"/><text x="84.6219%" y="79.50"></text></g><g><title>`0x7FF87490D2D3 (438 samples, 0.07%)</title><rect x="84.3690%" y="85" width="0.0716%" height="15" fill="rgb(251,158,41)" fg:x="516198" fg:w="438"/><text x="84.6190%" y="95.50"></text></g><g><title>`0x7FF87490C7AA (4,113 samples, 0.67%)</title><rect x="83.7685%" y="101" width="0.6722%" height="15" fill="rgb(234,159,37)" fg:x="512524" fg:w="4113"/><text x="84.0185%" y="111.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec::with_capacity_in (6,165 samples, 1.01%)</title><rect x="83.5282%" y="197" width="1.0076%" height="15" fill="rgb(216,204,22)" fg:x="511054" fg:w="6165"/><text x="83.7782%" y="207.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::with_capacity_in (6,165 samples, 1.01%)</title><rect x="83.5282%" y="181" width="1.0076%" height="15" fill="rgb(214,17,3)" fg:x="511054" fg:w="6165"/><text x="83.7782%" y="191.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec::allocate_in (6,165 samples, 1.01%)</title><rect x="83.5282%" y="165" width="1.0076%" height="15" fill="rgb(212,111,17)" fg:x="511054" fg:w="6165"/><text x="83.7782%" y="175.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::allocate (5,849 samples, 0.96%)</title><rect x="83.5799%" y="149" width="0.9560%" height="15" fill="rgb(221,157,24)" fg:x="511370" fg:w="5849"/><text x="83.8299%" y="159.50"></text></g><g><title>rust_parser.exe`alloc::alloc::Global::alloc_impl (5,849 samples, 0.96%)</title><rect x="83.5799%" y="133" width="0.9560%" height="15" fill="rgb(252,16,13)" fg:x="511370" fg:w="5849"/><text x="83.8299%" y="143.50"></text></g><g><title>rust_parser.exe`alloc::alloc::alloc (5,849 samples, 0.96%)</title><rect x="83.5799%" y="117" width="0.9560%" height="15" fill="rgb(221,62,2)" fg:x="511370" fg:w="5849"/><text x="83.8299%" y="127.50"></text></g><g><title>rust_parser.exe`std::alloc::__default_lib_allocator::__rdl_alloc (248 samples, 0.04%)</title><rect x="84.4953%" y="101" width="0.0405%" height="15" fill="rgb(247,87,22)" fg:x="516971" fg:w="248"/><text x="84.7453%" y="111.50"></text></g><g><title>rust_parser.exe`std::sys::windows::alloc::impl$0::alloc (137 samples, 0.02%)</title><rect x="84.5134%" y="85" width="0.0224%" height="15" fill="rgb(215,73,9)" fg:x="517082" fg:w="137"/><text x="84.7634%" y="95.50"></text></g><g><title>rust_parser.exe`std::sys::windows::alloc::allocate (137 samples, 0.02%)</title><rect x="84.5134%" y="69" width="0.0224%" height="15" fill="rgb(207,175,33)" fg:x="517082" fg:w="137"/><text x="84.7634%" y="79.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$10::clone (6,213 samples, 1.02%)</title><rect x="83.5282%" y="261" width="1.0155%" height="15" fill="rgb(243,129,54)" fg:x="511054" fg:w="6213"/><text x="83.7782%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::slice::impl$0::to_vec_in (6,213 samples, 1.02%)</title><rect x="83.5282%" y="245" width="1.0155%" height="15" fill="rgb(227,119,45)" fg:x="511054" fg:w="6213"/><text x="83.7782%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::slice::hack::to_vec (6,213 samples, 1.02%)</title><rect x="83.5282%" y="229" width="1.0155%" height="15" fill="rgb(205,109,36)" fg:x="511054" fg:w="6213"/><text x="83.7782%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::slice::hack::impl$1::to_vec (6,213 samples, 1.02%)</title><rect x="83.5282%" y="213" width="1.0155%" height="15" fill="rgb(205,6,39)" fg:x="511054" fg:w="6213"/><text x="83.7782%" y="223.50"></text></g><g><title>rust_parser.exe`alloc::string::impl$6::clone (7,963 samples, 1.30%)</title><rect x="83.2455%" y="277" width="1.3015%" height="15" fill="rgb(221,32,16)" fg:x="509324" fg:w="7963"/><text x="83.4955%" y="287.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::capacity (69 samples, 0.01%)</title><rect x="84.5842%" y="261" width="0.0113%" height="15" fill="rgb(228,144,50)" fg:x="517515" fg:w="69"/><text x="84.8342%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_mut_ptr (138 samples, 0.02%)</title><rect x="84.5955%" y="261" width="0.0226%" height="15" fill="rgb(229,201,53)" fg:x="517584" fg:w="138"/><text x="84.8455%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::ptr (103 samples, 0.02%)</title><rect x="84.6012%" y="245" width="0.0168%" height="15" fill="rgb(249,153,27)" fg:x="517619" fg:w="103"/><text x="84.8512%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::spare_capacity_mut&lt;alloc::string::String,alloc::alloc::Global&gt; (739 samples, 0.12%)</title><rect x="84.5494%" y="277" width="0.1208%" height="15" fill="rgb(227,106,25)" fg:x="517302" fg:w="739"/><text x="84.7994%" y="287.50"></text></g><g><title>rust_parser.exe`core::slice::raw::from_raw_parts_mut(core::mem::maybe_uninit::MaybeUninit (319 samples, 0.05%)</title><rect x="84.6180%" y="261" width="0.0521%" height="15" fill="rgb(230,65,29)" fg:x="517722" fg:w="319"/><text x="84.8680%" y="271.50"></text></g><g><title>rust_parser.exe`core::ptr::slice_from_raw_parts_mut(core::mem::maybe_uninit::MaybeUninit (319 samples, 0.05%)</title><rect x="84.6180%" y="245" width="0.0521%" height="15" fill="rgb(221,57,46)" fg:x="517722" fg:w="319"/><text x="84.8680%" y="255.50"></text></g><g><title>rust_parser.exe`core::ptr::mut_ptr::impl$0::cast(core::mem::maybe_uninit::MaybeUninit (319 samples, 0.05%)</title><rect x="84.6180%" y="229" width="0.0521%" height="15" fill="rgb(229,161,17)" fg:x="517722" fg:w="319"/><text x="84.8680%" y="239.50"></text></g><g><title>`0x7FF87490C60A (94 samples, 0.02%)</title><rect x="85.0610%" y="181" width="0.0154%" height="15" fill="rgb(222,213,11)" fg:x="520432" fg:w="94"/><text x="85.3110%" y="191.50"></text></g><g><title>`0x7FF87490D098 (95 samples, 0.02%)</title><rect x="85.2816%" y="165" width="0.0155%" height="15" fill="rgb(235,35,13)" fg:x="521782" fg:w="95"/><text x="85.5316%" y="175.50"></text></g><g><title>`0x7FF87490D0F2 (543 samples, 0.09%)</title><rect x="85.3333%" y="165" width="0.0887%" height="15" fill="rgb(233,158,34)" fg:x="522098" fg:w="543"/><text x="85.5833%" y="175.50"></text></g><g><title>`0x7FF87490D19A (520 samples, 0.08%)</title><rect x="85.4609%" y="165" width="0.0850%" height="15" fill="rgb(215,151,48)" fg:x="522879" fg:w="520"/><text x="85.7109%" y="175.50"></text></g><g><title>`0x7FF87490D1D7 (299 samples, 0.05%)</title><rect x="85.5742%" y="165" width="0.0489%" height="15" fill="rgb(229,84,14)" fg:x="523572" fg:w="299"/><text x="85.8242%" y="175.50"></text></g><g><title>`0x7FF8749117B3 (238 samples, 0.04%)</title><rect x="85.6554%" y="149" width="0.0389%" height="15" fill="rgb(229,68,14)" fg:x="524069" fg:w="238"/><text x="85.9054%" y="159.50"></text></g><g><title>`0x7FF87490D2D3 (250 samples, 0.04%)</title><rect x="85.6541%" y="165" width="0.0409%" height="15" fill="rgb(243,106,26)" fg:x="524061" fg:w="250"/><text x="85.9041%" y="175.50"></text></g><g><title>`0x7FF8749117B3 (422 samples, 0.07%)</title><rect x="85.7463%" y="133" width="0.0690%" height="15" fill="rgb(206,45,38)" fg:x="524625" fg:w="422"/><text x="85.9963%" y="143.50"></text></g><g><title>`0x7FF874911624 (436 samples, 0.07%)</title><rect x="85.7450%" y="149" width="0.0713%" height="15" fill="rgb(226,6,15)" fg:x="524617" fg:w="436"/><text x="85.9950%" y="159.50"></text></g><g><title>`0x7FF8749117B3 (557 samples, 0.09%)</title><rect x="85.8190%" y="133" width="0.0910%" height="15" fill="rgb(232,22,54)" fg:x="525070" fg:w="557"/><text x="86.0690%" y="143.50"></text></g><g><title>`0x7FF87491162F (584 samples, 0.10%)</title><rect x="85.8163%" y="149" width="0.0955%" height="15" fill="rgb(229,222,32)" fg:x="525053" fg:w="584"/><text x="86.0663%" y="159.50"></text></g><g><title>`0x7FF87490D6CF (1,130 samples, 0.18%)</title><rect x="85.7273%" y="165" width="0.1847%" height="15" fill="rgb(228,62,29)" fg:x="524509" fg:w="1130"/><text x="85.9773%" y="175.50"></text></g><g><title>`0x7FF87490C7AA (4,453 samples, 0.73%)</title><rect x="85.1940%" y="181" width="0.7278%" height="15" fill="rgb(251,103,34)" fg:x="521246" fg:w="4453"/><text x="85.4440%" y="191.50"></text></g><g><title>rust_parser.exe`alloc::alloc::alloc (5,788 samples, 0.95%)</title><rect x="85.0451%" y="197" width="0.9460%" height="15" fill="rgb(233,12,30)" fg:x="520335" fg:w="5788"/><text x="85.2951%" y="207.50"></text></g><g><title>rust_parser.exe`std::alloc::__default_lib_allocator::__rdl_alloc (143 samples, 0.02%)</title><rect x="85.9678%" y="181" width="0.0234%" height="15" fill="rgb(238,52,0)" fg:x="525980" fg:w="143"/><text x="86.2178%" y="191.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::as_ptr(core::ptr::non_null::NonNull (343 samples, 0.06%)</title><rect x="85.9923%" y="181" width="0.0561%" height="15" fill="rgb(223,98,5)" fg:x="526130" fg:w="343"/><text x="86.2423%" y="191.50"></text></g><g><title>rust_parser.exe`core::ptr::mut_ptr::impl$0::cast (321 samples, 0.05%)</title><rect x="85.9959%" y="165" width="0.0525%" height="15" fill="rgb(228,75,37)" fg:x="526152" fg:w="321"/><text x="86.2459%" y="175.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;::slice_from_raw_parts(core::ptr::non_null::NonNull (377 samples, 0.06%)</title><rect x="85.9918%" y="197" width="0.0616%" height="15" fill="rgb(205,115,49)" fg:x="526127" fg:w="377"/><text x="86.2418%" y="207.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::new (378 samples, 0.06%)</title><rect x="86.0534%" y="197" width="0.0618%" height="15" fill="rgb(250,154,43)" fg:x="526504" fg:w="378"/><text x="86.3034%" y="207.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::allocate (7,392 samples, 1.21%)</title><rect x="84.9186%" y="229" width="1.2082%" height="15" fill="rgb(226,43,29)" fg:x="519561" fg:w="7392"/><text x="85.1686%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::alloc::Global::alloc_impl (7,234 samples, 1.18%)</title><rect x="84.9444%" y="213" width="1.1823%" height="15" fill="rgb(249,228,39)" fg:x="519719" fg:w="7234"/><text x="85.1944%" y="223.50"></text></g><g><title>rust_parser.exe`core::result::impl$27::from_residual(enum2$&lt;core::result::Result&lt;enum2$ (71 samples, 0.01%)</title><rect x="86.1152%" y="197" width="0.0116%" height="15" fill="rgb(216,79,43)" fg:x="526882" fg:w="71"/><text x="86.3652%" y="207.50"></text></g><g><title>rust_parser.exe`core::convert::impl$4::from (71 samples, 0.01%)</title><rect x="86.1152%" y="181" width="0.0116%" height="15" fill="rgb(228,95,12)" fg:x="526882" fg:w="71"/><text x="86.3652%" y="191.50"></text></g><g><title>rust_parser.exe`core::alloc::layout::Layout::max_size_for_align (183 samples, 0.03%)</title><rect x="86.5061%" y="197" width="0.0299%" height="15" fill="rgb(249,221,15)" fg:x="529274" fg:w="183"/><text x="86.7561%" y="207.50"></text></g><g><title>rust_parser.exe`core::alloc::layout::impl$0::array::inner (2,426 samples, 0.40%)</title><rect x="86.1449%" y="213" width="0.3965%" height="15" fill="rgb(233,34,13)" fg:x="527064" fg:w="2426"/><text x="86.3949%" y="223.50"></text></g><g><title>rust_parser.exe`core::alloc::layout::Layout::array (2,565 samples, 0.42%)</title><rect x="86.1268%" y="229" width="0.4192%" height="15" fill="rgb(214,103,39)" fg:x="526953" fg:w="2565"/><text x="86.3768%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::with_capacity_in (11,760 samples, 1.92%)</title><rect x="84.6702%" y="277" width="1.9221%" height="15" fill="rgb(251,126,39)" fg:x="518041" fg:w="11760"/><text x="84.9202%" y="287.50">r..</text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::with_capacity_in (11,570 samples, 1.89%)</title><rect x="84.7012%" y="261" width="1.8910%" height="15" fill="rgb(214,216,36)" fg:x="518231" fg:w="11570"/><text x="84.9512%" y="271.50">r..</text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::allocate_in&lt;alloc::string::String,alloc::alloc::Global&gt; (11,517 samples, 1.88%)</title><rect x="84.7099%" y="245" width="1.8824%" height="15" fill="rgb(220,221,8)" fg:x="518284" fg:w="11517"/><text x="84.9599%" y="255.50">r..</text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;::cast(core::ptr::non_null::NonNull&lt;slice2$ (283 samples, 0.05%)</title><rect x="86.5460%" y="229" width="0.0463%" height="15" fill="rgb(240,216,3)" fg:x="529518" fg:w="283"/><text x="86.7960%" y="239.50"></text></g><g><title>rust_parser.exe`core::option::impl$40::branch(enum2$&lt;core::option::Option&lt;ref$ (426 samples, 0.07%)</title><rect x="86.8847%" y="245" width="0.0696%" height="15" fill="rgb(232,218,17)" fg:x="531590" fg:w="426"/><text x="87.1347%" y="255.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;alloc::string::String&gt;*, core::ptr::non_null::NonNull (168 samples, 0.03%)</title><rect x="87.0597%" y="229" width="0.0275%" height="15" fill="rgb(229,163,45)" fg:x="532661" fg:w="168"/><text x="87.3097%" y="239.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;alloc::string::String&gt;::add(core::ptr::non_null::NonNull (142 samples, 0.02%)</title><rect x="87.1323%" y="213" width="0.0232%" height="15" fill="rgb(231,110,42)" fg:x="533105" fg:w="142"/><text x="87.3823%" y="223.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::take::impl$1::next(core::iter::adapters::take::Take&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (3,465 samples, 0.57%)</title><rect x="86.5923%" y="277" width="0.5663%" height="15" fill="rgb(208,170,48)" fg:x="529801" fg:w="3465"/><text x="86.8423%" y="287.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::enumerate::impl$1::next&lt;core::slice::iter::Iter&lt;alloc::string::String&gt; &gt;(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (2,812 samples, 0.46%)</title><rect x="86.6990%" y="261" width="0.4596%" height="15" fill="rgb(239,116,25)" fg:x="530454" fg:w="2812"/><text x="86.9490%" y="271.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$181::next&lt;alloc::string::String&gt;(core::slice::iter::Iter (1,202 samples, 0.20%)</title><rect x="86.9621%" y="245" width="0.1965%" height="15" fill="rgb(219,200,50)" fg:x="532064" fg:w="1202"/><text x="87.2121%" y="255.50"></text></g><g><title>rust_parser.exe`core::slice::iter::Iter&lt;alloc::string::String&gt;::post_inc_start (437 samples, 0.07%)</title><rect x="87.0872%" y="229" width="0.0714%" height="15" fill="rgb(245,200,0)" fg:x="532829" fg:w="437"/><text x="87.3372%" y="239.50"></text></g><g><title>rust_parser.exe`core::mem::maybe_uninit::MaybeUninit&lt;alloc::string::String&gt;::write (527 samples, 0.09%)</title><rect x="87.1586%" y="277" width="0.0861%" height="15" fill="rgb(245,119,33)" fg:x="533266" fg:w="527"/><text x="87.4086%" y="287.50"></text></g><g><title>rust_parser.exe`core::mem::maybe_uninit::MaybeUninit&lt;alloc::string::String&gt;::new (306 samples, 0.05%)</title><rect x="87.1947%" y="261" width="0.0500%" height="15" fill="rgb(231,125,12)" fg:x="533487" fg:w="306"/><text x="87.4447%" y="271.50"></text></g><g><title>rust_parser.exe`core::mem::manually_drop::ManuallyDrop&lt;alloc::string::String&gt;::new (107 samples, 0.02%)</title><rect x="87.2273%" y="245" width="0.0175%" height="15" fill="rgb(216,96,41)" fg:x="533686" fg:w="107"/><text x="87.4773%" y="255.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::take::Take&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;alloc::string::String&gt; &gt; &gt;::new(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (87 samples, 0.01%)</title><rect x="87.2514%" y="261" width="0.0142%" height="15" fill="rgb(248,43,45)" fg:x="533834" fg:w="87"/><text x="87.5014%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (26,083 samples, 4.26%)</title><rect x="83.0220%" y="309" width="4.2631%" height="15" fill="rgb(217,222,7)" fg:x="507957" fg:w="26083"/><text x="83.2720%" y="319.50">rust_..</text></g><g><title>rust_parser.exe`alloc::slice::hack::impl$0::to_vec&lt;alloc::string::String,alloc::alloc::Global&gt;(ref$&lt;slice2$ (26,056 samples, 4.26%)</title><rect x="83.0264%" y="293" width="4.2587%" height="15" fill="rgb(233,28,6)" fg:x="507984" fg:w="26056"/><text x="83.2764%" y="303.50">rust_..</text></g><g><title>rust_parser.exe`core::slice::impl$0::iter(ref$&lt;slice2$ (247 samples, 0.04%)</title><rect x="87.2447%" y="277" width="0.0404%" height="15" fill="rgb(231,218,15)" fg:x="533793" fg:w="247"/><text x="87.4947%" y="287.50"></text></g><g><title>rust_parser.exe`core::slice::iter::Iter&lt;alloc::string::String&gt;::new(ref$&lt;slice2$ (119 samples, 0.02%)</title><rect x="87.2657%" y="261" width="0.0194%" height="15" fill="rgb(226,171,48)" fg:x="533921" fg:w="119"/><text x="87.5157%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$10::clone&lt;alloc::string::String,alloc::alloc::Global&gt;(alloc::vec::Vec (26,686 samples, 4.36%)</title><rect x="82.9624%" y="341" width="4.3616%" height="15" fill="rgb(235,201,9)" fg:x="507592" fg:w="26686"/><text x="83.2124%" y="351.50">rust_..</text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (26,347 samples, 4.31%)</title><rect x="83.0178%" y="325" width="4.3062%" height="15" fill="rgb(217,80,15)" fg:x="507931" fg:w="26347"/><text x="83.2678%" y="335.50">rust_..</text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_ptr (238 samples, 0.04%)</title><rect x="87.2851%" y="309" width="0.0389%" height="15" fill="rgb(219,152,8)" fg:x="534040" fg:w="238"/><text x="87.5351%" y="319.50"></text></g><g><title>rust_parser.exe`core::ptr::slice_from_raw_parts (225 samples, 0.04%)</title><rect x="87.2872%" y="293" width="0.0368%" height="15" fill="rgb(243,107,38)" fg:x="534053" fg:w="225"/><text x="87.5372%" y="303.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::cast (225 samples, 0.04%)</title><rect x="87.2872%" y="277" width="0.0368%" height="15" fill="rgb(231,17,5)" fg:x="534053" fg:w="225"/><text x="87.5372%" y="287.50"></text></g><g><title>rust_parser.exe`can_dbc::impl$36::clone(enum2$ (96 samples, 0.02%)</title><rect x="87.3240%" y="341" width="0.0157%" height="15" fill="rgb(209,25,54)" fg:x="534278" fg:w="96"/><text x="87.5740%" y="351.50"></text></g><g><title>rust_parser.exe`can_dbc::impl$41::clone (200 samples, 0.03%)</title><rect x="87.3397%" y="341" width="0.0327%" height="15" fill="rgb(219,0,2)" fg:x="534374" fg:w="200"/><text x="87.5897%" y="351.50"></text></g><g><title>rust_parser.exe`can_dbc::impl$8::clone (37,740 samples, 6.17%)</title><rect x="81.2204%" y="357" width="6.1683%" height="15" fill="rgb(246,9,5)" fg:x="496934" fg:w="37740"/><text x="81.4704%" y="367.50">rust_par..</text></g><g><title>rust_parser.exe`can_dbc::impl$46::clone (100 samples, 0.02%)</title><rect x="87.3724%" y="341" width="0.0163%" height="15" fill="rgb(226,159,4)" fg:x="534574" fg:w="100"/><text x="87.6224%" y="351.50"></text></g><g><title>rust_parser.exe`core::option::impl$40::branch(enum2$&lt;core::option::Option&lt;ref$ (167 samples, 0.03%)</title><rect x="87.5741%" y="325" width="0.0273%" height="15" fill="rgb(219,175,34)" fg:x="535808" fg:w="167"/><text x="87.8241%" y="335.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;can_dbc::Signal&gt;*, core::ptr::non_null::NonNull (77 samples, 0.01%)</title><rect x="87.6525%" y="309" width="0.0126%" height="15" fill="rgb(236,10,46)" fg:x="536288" fg:w="77"/><text x="87.9025%" y="319.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;can_dbc::Signal&gt;::add(core::ptr::non_null::NonNull (85 samples, 0.01%)</title><rect x="87.6975%" y="293" width="0.0139%" height="15" fill="rgb(240,211,16)" fg:x="536563" fg:w="85"/><text x="87.9475%" y="303.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::take::impl$1::next(core::iter::adapters::take::Take&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1,980 samples, 0.32%)</title><rect x="87.3887%" y="357" width="0.3236%" height="15" fill="rgb(205,3,43)" fg:x="534674" fg:w="1980"/><text x="87.6387%" y="367.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::enumerate::impl$1::next&lt;core::slice::iter::Iter&lt;can_dbc::Signal&gt; &gt;(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1,499 samples, 0.25%)</title><rect x="87.4674%" y="341" width="0.2450%" height="15" fill="rgb(245,7,22)" fg:x="535155" fg:w="1499"/><text x="87.7174%" y="351.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$181::next&lt;can_dbc::Signal&gt;(core::slice::iter::Iter (650 samples, 0.11%)</title><rect x="87.6061%" y="325" width="0.1062%" height="15" fill="rgb(239,132,32)" fg:x="536004" fg:w="650"/><text x="87.8561%" y="335.50"></text></g><g><title>rust_parser.exe`core::slice::iter::Iter&lt;can_dbc::Signal&gt;::post_inc_start (289 samples, 0.05%)</title><rect x="87.6651%" y="309" width="0.0472%" height="15" fill="rgb(228,202,34)" fg:x="536365" fg:w="289"/><text x="87.9151%" y="319.50"></text></g><g><title>`0x7FF85D971310 (108 samples, 0.02%)</title><rect x="87.7230%" y="325" width="0.0177%" height="15" fill="rgb(254,200,22)" fg:x="536719" fg:w="108"/><text x="87.9730%" y="335.50"></text></g><g><title>`0x7FF85D97144D (74 samples, 0.01%)</title><rect x="87.7522%" y="325" width="0.0121%" height="15" fill="rgb(219,10,39)" fg:x="536898" fg:w="74"/><text x="88.0022%" y="335.50"></text></g><g><title>`0x7FF85D971460 (66 samples, 0.01%)</title><rect x="87.7655%" y="325" width="0.0108%" height="15" fill="rgb(226,210,39)" fg:x="536979" fg:w="66"/><text x="88.0155%" y="335.50"></text></g><g><title>`0x7FF85D971490 (209 samples, 0.03%)</title><rect x="87.7908%" y="325" width="0.0342%" height="15" fill="rgb(208,219,16)" fg:x="537134" fg:w="209"/><text x="88.0408%" y="335.50"></text></g><g><title>`0x7FF85D971497 (193 samples, 0.03%)</title><rect x="87.8250%" y="325" width="0.0315%" height="15" fill="rgb(216,158,51)" fg:x="537343" fg:w="193"/><text x="88.0750%" y="335.50"></text></g><g><title>`0x7FF85D9715E3 (85 samples, 0.01%)</title><rect x="87.8951%" y="325" width="0.0139%" height="15" fill="rgb(233,14,44)" fg:x="537772" fg:w="85"/><text x="88.1451%" y="335.50"></text></g><g><title>`0x7FF85D9715EA (63 samples, 0.01%)</title><rect x="87.9090%" y="325" width="0.0103%" height="15" fill="rgb(237,97,39)" fg:x="537857" fg:w="63"/><text x="88.1590%" y="335.50"></text></g><g><title>`0x7FF85D9715F1 (82 samples, 0.01%)</title><rect x="87.9193%" y="325" width="0.0134%" height="15" fill="rgb(218,198,43)" fg:x="537920" fg:w="82"/><text x="88.1693%" y="335.50"></text></g><g><title>`0x7FF85D9715F8 (105 samples, 0.02%)</title><rect x="87.9327%" y="325" width="0.0172%" height="15" fill="rgb(231,104,20)" fg:x="538002" fg:w="105"/><text x="88.1827%" y="335.50"></text></g><g><title>`0x7FF85D9715FF (110 samples, 0.02%)</title><rect x="87.9498%" y="325" width="0.0180%" height="15" fill="rgb(254,36,13)" fg:x="538107" fg:w="110"/><text x="88.1998%" y="335.50"></text></g><g><title>`0x7FF85D97160D (64 samples, 0.01%)</title><rect x="87.9750%" y="325" width="0.0105%" height="15" fill="rgb(248,14,50)" fg:x="538261" fg:w="64"/><text x="88.2250%" y="335.50"></text></g><g><title>rust_parser.exe`core::mem::maybe_uninit::MaybeUninit&lt;can_dbc::Signal&gt;::write (1,743 samples, 0.28%)</title><rect x="87.7124%" y="357" width="0.2849%" height="15" fill="rgb(217,107,29)" fg:x="536654" fg:w="1743"/><text x="87.9624%" y="367.50"></text></g><g><title>rust_parser.exe`core::mem::maybe_uninit::MaybeUninit&lt;can_dbc::Signal&gt;::new (1,715 samples, 0.28%)</title><rect x="87.7169%" y="341" width="0.2803%" height="15" fill="rgb(251,169,33)" fg:x="536682" fg:w="1715"/><text x="87.9669%" y="351.50"></text></g><g><title>rust_parser.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (47,052 samples, 7.69%)</title><rect x="80.3157%" y="389" width="7.6903%" height="15" fill="rgb(217,108,32)" fg:x="491399" fg:w="47052"/><text x="80.5657%" y="399.50">rust_parser..</text></g><g><title>rust_parser.exe`alloc::slice::hack::impl$0::to_vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;(ref$&lt;slice2$ (47,051 samples, 7.69%)</title><rect x="80.3159%" y="373" width="7.6902%" height="15" fill="rgb(219,66,42)" fg:x="491400" fg:w="47051"/><text x="80.5659%" y="383.50">rust_parser..</text></g><g><title>rust_parser.exe`alloc::vec::impl$10::clone&lt;can_dbc::Signal,alloc::alloc::Global&gt;(alloc::vec::Vec (47,196 samples, 7.71%)</title><rect x="80.2973%" y="421" width="7.7139%" height="15" fill="rgb(206,180,7)" fg:x="491286" fg:w="47196"/><text x="80.5473%" y="431.50">rust_parser..</text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (47,115 samples, 7.70%)</title><rect x="80.3105%" y="405" width="7.7006%" height="15" fill="rgb(208,226,31)" fg:x="491367" fg:w="47115"/><text x="80.5605%" y="415.50">rust_parser..</text></g><g><title>`0x7FF87490D098 (103 samples, 0.02%)</title><rect x="88.7808%" y="245" width="0.0168%" height="15" fill="rgb(218,26,49)" fg:x="543191" fg:w="103"/><text x="89.0308%" y="255.50"></text></g><g><title>`0x7FF87490D0AA (264 samples, 0.04%)</title><rect x="88.8022%" y="245" width="0.0431%" height="15" fill="rgb(233,197,48)" fg:x="543322" fg:w="264"/><text x="89.0522%" y="255.50"></text></g><g><title>`0x7FF87490D0F2 (507 samples, 0.08%)</title><rect x="88.8671%" y="245" width="0.0829%" height="15" fill="rgb(252,181,51)" fg:x="543719" fg:w="507"/><text x="89.1171%" y="255.50"></text></g><g><title>`0x7FF87490D19A (429 samples, 0.07%)</title><rect x="88.9880%" y="245" width="0.0701%" height="15" fill="rgb(253,90,19)" fg:x="544459" fg:w="429"/><text x="89.2380%" y="255.50"></text></g><g><title>`0x7FF87490D1D7 (71 samples, 0.01%)</title><rect x="89.0822%" y="245" width="0.0116%" height="15" fill="rgb(215,171,30)" fg:x="545035" fg:w="71"/><text x="89.3322%" y="255.50"></text></g><g><title>`0x7FF8749117B3 (231 samples, 0.04%)</title><rect x="89.1225%" y="229" width="0.0378%" height="15" fill="rgb(214,222,9)" fg:x="545282" fg:w="231"/><text x="89.3725%" y="239.50"></text></g><g><title>`0x7FF87490D2D3 (241 samples, 0.04%)</title><rect x="89.1212%" y="245" width="0.0394%" height="15" fill="rgb(223,3,22)" fg:x="545274" fg:w="241"/><text x="89.3712%" y="255.50"></text></g><g><title>`0x7FF87490C7AA (2,823 samples, 0.46%)</title><rect x="88.6994%" y="261" width="0.4614%" height="15" fill="rgb(225,196,46)" fg:x="542693" fg:w="2823"/><text x="88.9494%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::alloc::alloc (4,177 samples, 0.68%)</title><rect x="88.5462%" y="277" width="0.6827%" height="15" fill="rgb(209,110,37)" fg:x="541756" fg:w="4177"/><text x="88.7962%" y="287.50"></text></g><g><title>rust_parser.exe`std::alloc::__default_lib_allocator::__rdl_alloc (177 samples, 0.03%)</title><rect x="89.2000%" y="261" width="0.0289%" height="15" fill="rgb(249,89,12)" fg:x="545756" fg:w="177"/><text x="89.4500%" y="271.50"></text></g><g><title>rust_parser.exe`std::sys::windows::alloc::impl$0::alloc (93 samples, 0.02%)</title><rect x="89.2137%" y="245" width="0.0152%" height="15" fill="rgb(226,27,33)" fg:x="545840" fg:w="93"/><text x="89.4637%" y="255.50"></text></g><g><title>rust_parser.exe`std::sys::windows::alloc::allocate (93 samples, 0.02%)</title><rect x="89.2137%" y="229" width="0.0152%" height="15" fill="rgb(213,82,22)" fg:x="545840" fg:w="93"/><text x="89.4637%" y="239.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::as_ptr(core::ptr::non_null::NonNull (366 samples, 0.06%)</title><rect x="89.2298%" y="261" width="0.0598%" height="15" fill="rgb(248,140,0)" fg:x="545938" fg:w="366"/><text x="89.4798%" y="271.50"></text></g><g><title>rust_parser.exe`core::ptr::mut_ptr::impl$0::cast (328 samples, 0.05%)</title><rect x="89.2360%" y="245" width="0.0536%" height="15" fill="rgb(228,106,3)" fg:x="545976" fg:w="328"/><text x="89.4860%" y="255.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;::slice_from_raw_parts(core::ptr::non_null::NonNull (406 samples, 0.07%)</title><rect x="89.2294%" y="277" width="0.0664%" height="15" fill="rgb(209,23,37)" fg:x="545936" fg:w="406"/><text x="89.4794%" y="287.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::new (550 samples, 0.09%)</title><rect x="89.2958%" y="277" width="0.0899%" height="15" fill="rgb(241,93,50)" fg:x="546342" fg:w="550"/><text x="89.5458%" y="287.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::allocate (6,027 samples, 0.99%)</title><rect x="88.4101%" y="309" width="0.9851%" height="15" fill="rgb(253,46,43)" fg:x="540923" fg:w="6027"/><text x="88.6601%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::alloc::Global::alloc_impl (5,903 samples, 0.96%)</title><rect x="88.4304%" y="293" width="0.9648%" height="15" fill="rgb(226,206,43)" fg:x="541047" fg:w="5903"/><text x="88.6804%" y="303.50"></text></g><g><title>rust_parser.exe`core::alloc::layout::Layout::max_size_for_align (200 samples, 0.03%)</title><rect x="89.6724%" y="277" width="0.0327%" height="15" fill="rgb(217,54,7)" fg:x="548646" fg:w="200"/><text x="89.9224%" y="287.50"></text></g><g><title>rust_parser.exe`core::alloc::layout::impl$0::array::inner (1,845 samples, 0.30%)</title><rect x="89.4092%" y="293" width="0.3016%" height="15" fill="rgb(223,5,52)" fg:x="547036" fg:w="1845"/><text x="89.6592%" y="303.50"></text></g><g><title>rust_parser.exe`core::alloc::layout::Layout::array (1,955 samples, 0.32%)</title><rect x="89.3953%" y="309" width="0.3195%" height="15" fill="rgb(206,52,46)" fg:x="546951" fg:w="1955"/><text x="89.6453%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (9,929 samples, 1.62%)</title><rect x="88.1452%" y="357" width="1.6228%" height="15" fill="rgb(253,136,11)" fg:x="539302" fg:w="9929"/><text x="88.3952%" y="367.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (9,731 samples, 1.59%)</title><rect x="88.1775%" y="341" width="1.5905%" height="15" fill="rgb(208,106,33)" fg:x="539500" fg:w="9731"/><text x="88.4275%" y="351.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::allocate_in&lt;u8,alloc::alloc::Global&gt; (9,672 samples, 1.58%)</title><rect x="88.1872%" y="325" width="1.5808%" height="15" fill="rgb(206,54,4)" fg:x="539559" fg:w="9672"/><text x="88.4372%" y="335.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;::cast(core::ptr::non_null::NonNull&lt;slice2$ (325 samples, 0.05%)</title><rect x="89.7149%" y="309" width="0.0531%" height="15" fill="rgb(213,3,15)" fg:x="548906" fg:w="325"/><text x="89.9649%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (171 samples, 0.03%)</title><rect x="89.7680%" y="341" width="0.0279%" height="15" fill="rgb(252,211,39)" fg:x="549231" fg:w="171"/><text x="90.0180%" y="351.50"></text></g><g><title>rust_parser.exe`core::ptr::unique::Unique&lt;u8&gt;::as_ptr(core::ptr::unique::Unique (78 samples, 0.01%)</title><rect x="89.7832%" y="325" width="0.0127%" height="15" fill="rgb(223,6,36)" fg:x="549324" fg:w="78"/><text x="90.0332%" y="335.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::as_ptr(core::ptr::non_null::NonNull (78 samples, 0.01%)</title><rect x="89.7832%" y="309" width="0.0127%" height="15" fill="rgb(252,169,45)" fg:x="549324" fg:w="78"/><text x="90.0332%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (10,880 samples, 1.78%)</title><rect x="88.0544%" y="389" width="1.7783%" height="15" fill="rgb(212,48,26)" fg:x="538747" fg:w="10880"/><text x="88.3044%" y="399.50">r..</text></g><g><title>rust_parser.exe`alloc::slice::hack::impl$1::to_vec&lt;u8,alloc::alloc::Global&gt;(ref$&lt;slice2$ (10,843 samples, 1.77%)</title><rect x="88.0605%" y="373" width="1.7722%" height="15" fill="rgb(251,102,48)" fg:x="538784" fg:w="10843"/><text x="88.3105%" y="383.50">r..</text></g><g><title>rust_parser.exe`core::slice::impl$0::as_ptr(ref$&lt;slice2$ (396 samples, 0.06%)</title><rect x="89.7680%" y="357" width="0.0647%" height="15" fill="rgb(243,208,16)" fg:x="549231" fg:w="396"/><text x="90.0180%" y="367.50"></text></g><g><title>rust_parser.exe`core::intrinsics::copy_nonoverlapping (225 samples, 0.04%)</title><rect x="89.7959%" y="341" width="0.0368%" height="15" fill="rgb(219,96,24)" fg:x="549402" fg:w="225"/><text x="90.0459%" y="351.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$10::clone&lt;u8,alloc::alloc::Global&gt;(alloc::vec::Vec (11,471 samples, 1.87%)</title><rect x="88.0111%" y="421" width="1.8749%" height="15" fill="rgb(219,33,29)" fg:x="538482" fg:w="11471"/><text x="88.2611%" y="431.50">r..</text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (11,216 samples, 1.83%)</title><rect x="88.0528%" y="405" width="1.8332%" height="15" fill="rgb(223,176,5)" fg:x="538737" fg:w="11216"/><text x="88.3028%" y="415.50">r..</text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (326 samples, 0.05%)</title><rect x="89.8327%" y="389" width="0.0533%" height="15" fill="rgb(228,140,14)" fg:x="549627" fg:w="326"/><text x="90.0827%" y="399.50"></text></g><g><title>rust_parser.exe`core::ptr::slice_from_raw_parts (276 samples, 0.05%)</title><rect x="89.8409%" y="373" width="0.0451%" height="15" fill="rgb(217,179,31)" fg:x="549677" fg:w="276"/><text x="90.0909%" y="383.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::cast (276 samples, 0.05%)</title><rect x="89.8409%" y="357" width="0.0451%" height="15" fill="rgb(230,9,30)" fg:x="549677" fg:w="276"/><text x="90.0909%" y="367.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref&lt;can_dbc::Signal,alloc::alloc::Global&gt;(alloc::vec::Vec (103 samples, 0.02%)</title><rect x="89.8860%" y="421" width="0.0168%" height="15" fill="rgb(230,136,20)" fg:x="549953" fg:w="103"/><text x="90.1360%" y="431.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;::as_ptr (79 samples, 0.01%)</title><rect x="89.8899%" y="405" width="0.0129%" height="15" fill="rgb(215,210,22)" fg:x="549977" fg:w="79"/><text x="90.1399%" y="415.50"></text></g><g><title>rust_parser.exe`can_dbc::Signal::byte_order (70 samples, 0.01%)</title><rect x="89.9028%" y="421" width="0.0114%" height="15" fill="rgb(218,43,5)" fg:x="550056" fg:w="70"/><text x="90.1528%" y="431.50"></text></g><g><title>rust_parser.exe`can_dbc::Signal::multiplexer_indicator (212 samples, 0.03%)</title><rect x="89.9239%" y="421" width="0.0346%" height="15" fill="rgb(216,11,5)" fg:x="550185" fg:w="212"/><text x="90.1739%" y="431.50"></text></g><g><title>rust_parser.exe`can_dbc::Signal::offset (132 samples, 0.02%)</title><rect x="89.9680%" y="421" width="0.0216%" height="15" fill="rgb(209,82,29)" fg:x="550455" fg:w="132"/><text x="90.2180%" y="431.50"></text></g><g><title>rust_parser.exe`can_dbc::Signal::signal_size (68 samples, 0.01%)</title><rect x="89.9896%" y="421" width="0.0111%" height="15" fill="rgb(244,115,12)" fg:x="550587" fg:w="68"/><text x="90.2396%" y="431.50"></text></g><g><title>rust_parser.exe`can_dbc::Signal::start_bit (92 samples, 0.02%)</title><rect x="90.0007%" y="421" width="0.0150%" height="15" fill="rgb(222,82,18)" fg:x="550655" fg:w="92"/><text x="90.2507%" y="431.50"></text></g><g><title>rust_parser.exe`can_dbc::impl$39::eq(enum2$&lt;can_dbc::MultiplexIndicator&gt;*, enum2$ (1,405 samples, 0.23%)</title><rect x="90.0158%" y="421" width="0.2296%" height="15" fill="rgb(249,227,8)" fg:x="550747" fg:w="1405"/><text x="90.2658%" y="431.50"></text></g><g><title>rust_parser.exe`can_dbc::impl$44::eq (303 samples, 0.05%)</title><rect x="90.2454%" y="421" width="0.0495%" height="15" fill="rgb(253,141,45)" fg:x="552152" fg:w="303"/><text x="90.4954%" y="431.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (87 samples, 0.01%)</title><rect x="90.3508%" y="389" width="0.0142%" height="15" fill="rgb(234,184,4)" fg:x="552797" fg:w="87"/><text x="90.6008%" y="399.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$24::drop&lt;u8,alloc::alloc::Global&gt;(alloc::vec::Vec (204 samples, 0.03%)</title><rect x="90.3930%" y="373" width="0.0333%" height="15" fill="rgb(218,194,23)" fg:x="553055" fg:w="204"/><text x="90.6430%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (79 samples, 0.01%)</title><rect x="90.4134%" y="357" width="0.0129%" height="15" fill="rgb(235,66,41)" fg:x="553180" fg:w="79"/><text x="90.6634%" y="367.50"></text></g><g><title>`0x7FF87490BE60 (92 samples, 0.02%)</title><rect x="90.6211%" y="309" width="0.0150%" height="15" fill="rgb(245,217,1)" fg:x="554451" fg:w="92"/><text x="90.8711%" y="319.50"></text></g><g><title>`0x7FF87497C01D (84 samples, 0.01%)</title><rect x="90.6875%" y="309" width="0.0137%" height="15" fill="rgb(229,91,1)" fg:x="554857" fg:w="84"/><text x="90.9375%" y="319.50"></text></g><g><title>`0x7FF87497C021 (112 samples, 0.02%)</title><rect x="90.7012%" y="309" width="0.0183%" height="15" fill="rgb(207,101,30)" fg:x="554941" fg:w="112"/><text x="90.9512%" y="319.50"></text></g><g><title>`0x7FF87497C036 (93 samples, 0.02%)</title><rect x="90.7459%" y="309" width="0.0152%" height="15" fill="rgb(223,82,49)" fg:x="555214" fg:w="93"/><text x="90.9959%" y="319.50"></text></g><g><title>`0x7FF87497C052 (65 samples, 0.01%)</title><rect x="90.7746%" y="309" width="0.0106%" height="15" fill="rgb(218,167,17)" fg:x="555390" fg:w="65"/><text x="91.0246%" y="319.50"></text></g><g><title>`0x7FF87497C0EF (538 samples, 0.09%)</title><rect x="90.8152%" y="309" width="0.0879%" height="15" fill="rgb(208,103,14)" fg:x="555638" fg:w="538"/><text x="91.0652%" y="319.50"></text></g><g><title>`0x7FF87497C12F (82 samples, 0.01%)</title><rect x="90.9124%" y="309" width="0.0134%" height="15" fill="rgb(238,20,8)" fg:x="556233" fg:w="82"/><text x="91.1624%" y="319.50"></text></g><g><title>`0x7FF87490AB01 (2,417 samples, 0.40%)</title><rect x="90.5468%" y="325" width="0.3950%" height="15" fill="rgb(218,80,54)" fg:x="553996" fg:w="2417"/><text x="90.7968%" y="335.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::as_ptr(core::ptr::non_null::NonNull (150 samples, 0.02%)</title><rect x="90.9523%" y="325" width="0.0245%" height="15" fill="rgb(240,144,17)" fg:x="556477" fg:w="150"/><text x="91.2023%" y="335.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (3,071 samples, 0.50%)</title><rect x="90.4834%" y="341" width="0.5019%" height="15" fill="rgb(245,27,50)" fg:x="553608" fg:w="3071"/><text x="90.7334%" y="351.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::cast(core::ptr::non_null::NonNull (98 samples, 0.02%)</title><rect x="91.1156%" y="309" width="0.0160%" height="15" fill="rgb(251,51,7)" fg:x="557476" fg:w="98"/><text x="91.3656%" y="319.50"></text></g><g><title>rust_parser.exe`core::convert::impl$6::try_into&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;,array$&lt;u8,8&gt; &gt;(alloc::vec::Vec (5,289 samples, 0.86%)</title><rect x="90.2949%" y="421" width="0.8645%" height="15" fill="rgb(245,217,29)" fg:x="552455" fg:w="5289"/><text x="90.5449%" y="431.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$38::try_from&lt;u8,alloc::alloc::Global,8&gt;(alloc::vec::Vec (5,183 samples, 0.85%)</title><rect x="90.3122%" y="405" width="0.8471%" height="15" fill="rgb(221,176,29)" fg:x="552561" fg:w="5183"/><text x="90.5622%" y="415.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::vec::Vec (4,827 samples, 0.79%)</title><rect x="90.3704%" y="389" width="0.7889%" height="15" fill="rgb(212,180,24)" fg:x="552917" fg:w="4827"/><text x="90.6204%" y="399.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::raw_vec::RawVec (4,485 samples, 0.73%)</title><rect x="90.4263%" y="373" width="0.7330%" height="15" fill="rgb(254,24,2)" fg:x="553259" fg:w="4485"/><text x="90.6763%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::impl$3::drop&lt;u8,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (4,412 samples, 0.72%)</title><rect x="90.4383%" y="357" width="0.7211%" height="15" fill="rgb(230,100,2)" fg:x="553332" fg:w="4412"/><text x="90.6883%" y="367.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory&lt;u8,alloc::alloc::Global&gt; (1,065 samples, 0.17%)</title><rect x="90.9853%" y="341" width="0.1741%" height="15" fill="rgb(219,142,25)" fg:x="556679" fg:w="1065"/><text x="91.2353%" y="351.50"></text></g><g><title>rust_parser.exe`core::ptr::unique::Unique&lt;u8&gt;::cast(core::ptr::unique::Unique (268 samples, 0.04%)</title><rect x="91.1156%" y="325" width="0.0438%" height="15" fill="rgb(240,73,43)" fg:x="557476" fg:w="268"/><text x="91.3656%" y="335.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::impl$16::from(core::ptr::unique::Unique (170 samples, 0.03%)</title><rect x="91.1316%" y="309" width="0.0278%" height="15" fill="rgb(214,114,15)" fg:x="557574" fg:w="170"/><text x="91.3816%" y="319.50"></text></g><g><title>rust_parser.exe`core::ptr::unique::Unique&lt;u8&gt;::as_ptr(core::ptr::unique::Unique (170 samples, 0.03%)</title><rect x="91.1316%" y="293" width="0.0278%" height="15" fill="rgb(207,130,4)" fg:x="557574" fg:w="170"/><text x="91.3816%" y="303.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::as_ptr(core::ptr::non_null::NonNull (127 samples, 0.02%)</title><rect x="91.1386%" y="277" width="0.0208%" height="15" fill="rgb(221,25,40)" fg:x="557617" fg:w="127"/><text x="91.3886%" y="287.50"></text></g><g><title>rust_parser.exe`core::fmt::Arguments::new_v1_formatted(ref$&lt;slice2$&lt;ref$&lt;str$&gt; &gt; &gt;, ref$&lt;slice2$&lt;core::fmt::rt::Argument&gt; &gt;, ref$&lt;slice2$ (480 samples, 0.08%)</title><rect x="91.1594%" y="421" width="0.0785%" height="15" fill="rgb(241,184,7)" fg:x="557744" fg:w="480"/><text x="91.4094%" y="431.50"></text></g><g><title>rust_parser.exe`core::fmt::rt::Argument::new_display (153 samples, 0.03%)</title><rect x="91.2378%" y="421" width="0.0250%" height="15" fill="rgb(235,159,4)" fg:x="558224" fg:w="153"/><text x="91.4878%" y="431.50"></text></g><g><title>rust_parser.exe`core::fmt::rt::Placeholder::new(unsigned long long, char32_t, core::fmt::rt::Alignment, unsigned int, enum2$&lt;core::fmt::rt::Count&gt;, enum2$ (346 samples, 0.06%)</title><rect x="91.2628%" y="421" width="0.0566%" height="15" fill="rgb(214,87,48)" fg:x="558377" fg:w="346"/><text x="91.5128%" y="431.50"></text></g><g><title>rust_parser.exe`core::num::impl$9::from_le_bytes (150 samples, 0.02%)</title><rect x="91.3217%" y="421" width="0.0245%" height="15" fill="rgb(246,198,24)" fg:x="558737" fg:w="150"/><text x="91.5717%" y="431.50"></text></g><g><title>rust_parser.exe`core::num::impl$9::pow (2,300 samples, 0.38%)</title><rect x="91.3462%" y="421" width="0.3759%" height="15" fill="rgb(209,66,40)" fg:x="558887" fg:w="2300"/><text x="91.5962%" y="431.50"></text></g><g><title>rust_parser.exe`core::ops::bit::impl$917::shr (241 samples, 0.04%)</title><rect x="91.7221%" y="421" width="0.0394%" height="15" fill="rgb(233,147,39)" fg:x="561187" fg:w="241"/><text x="91.9721%" y="431.50"></text></g><g><title>rust_parser.exe`core::ops::bit::impl$915::shr (75 samples, 0.01%)</title><rect x="91.7492%" y="405" width="0.0123%" height="15" fill="rgb(231,145,52)" fg:x="561353" fg:w="75"/><text x="91.9992%" y="415.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (62 samples, 0.01%)</title><rect x="91.8775%" y="357" width="0.0101%" height="15" fill="rgb(206,20,26)" fg:x="562138" fg:w="62"/><text x="92.1275%" y="367.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$24::drop&lt;u8,alloc::alloc::Global&gt;(alloc::vec::Vec (371 samples, 0.06%)</title><rect x="91.8547%" y="389" width="0.0606%" height="15" fill="rgb(238,220,4)" fg:x="561998" fg:w="371"/><text x="92.1047%" y="399.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (231 samples, 0.04%)</title><rect x="91.8775%" y="373" width="0.0378%" height="15" fill="rgb(252,195,42)" fg:x="562138" fg:w="231"/><text x="92.1275%" y="383.50"></text></g><g><title>rust_parser.exe`core::ptr::mut_ptr::impl$0::cast (169 samples, 0.03%)</title><rect x="91.8877%" y="357" width="0.0276%" height="15" fill="rgb(209,10,6)" fg:x="562200" fg:w="169"/><text x="92.1377%" y="367.50"></text></g><g><title>`0x7FF8731D0D10 (97 samples, 0.02%)</title><rect x="92.0876%" y="341" width="0.0159%" height="15" fill="rgb(229,3,52)" fg:x="563423" fg:w="97"/><text x="92.3376%" y="351.50"></text></g><g><title>`0x7FF87490AAB0 (116 samples, 0.02%)</title><rect x="92.1034%" y="341" width="0.0190%" height="15" fill="rgb(253,49,37)" fg:x="563520" fg:w="116"/><text x="92.3534%" y="351.50"></text></g><g><title>`0x7FF87490AABB (64 samples, 0.01%)</title><rect x="92.1258%" y="341" width="0.0105%" height="15" fill="rgb(240,103,49)" fg:x="563657" fg:w="64"/><text x="92.3758%" y="351.50"></text></g><g><title>`0x7FF87490AAC4 (65 samples, 0.01%)</title><rect x="92.1366%" y="341" width="0.0106%" height="15" fill="rgb(250,182,30)" fg:x="563723" fg:w="65"/><text x="92.3866%" y="351.50"></text></g><g><title>`0x7FF87490AADC (90 samples, 0.01%)</title><rect x="92.1474%" y="341" width="0.0147%" height="15" fill="rgb(248,8,30)" fg:x="563789" fg:w="90"/><text x="92.3974%" y="351.50"></text></g><g><title>`0x7FF87490AAE7 (67 samples, 0.01%)</title><rect x="92.1629%" y="341" width="0.0110%" height="15" fill="rgb(237,120,30)" fg:x="563884" fg:w="67"/><text x="92.4129%" y="351.50"></text></g><g><title>`0x7FF87490B675 (79 samples, 0.01%)</title><rect x="92.1840%" y="325" width="0.0129%" height="15" fill="rgb(221,146,34)" fg:x="564013" fg:w="79"/><text x="92.4340%" y="335.50"></text></g><g><title>`0x7FF87490B680 (77 samples, 0.01%)</title><rect x="92.1976%" y="325" width="0.0126%" height="15" fill="rgb(242,55,13)" fg:x="564096" fg:w="77"/><text x="92.4476%" y="335.50"></text></g><g><title>`0x7FF87490B688 (67 samples, 0.01%)</title><rect x="92.2118%" y="325" width="0.0110%" height="15" fill="rgb(242,112,31)" fg:x="564183" fg:w="67"/><text x="92.4618%" y="335.50"></text></g><g><title>`0x7FF87490B6A4 (65 samples, 0.01%)</title><rect x="92.2335%" y="325" width="0.0106%" height="15" fill="rgb(249,192,27)" fg:x="564316" fg:w="65"/><text x="92.4835%" y="335.50"></text></g><g><title>`0x7FF87490BABC (67 samples, 0.01%)</title><rect x="92.2633%" y="325" width="0.0110%" height="15" fill="rgb(208,204,44)" fg:x="564498" fg:w="67"/><text x="92.5133%" y="335.50"></text></g><g><title>`0x7FF87490BAC3 (67 samples, 0.01%)</title><rect x="92.2745%" y="325" width="0.0110%" height="15" fill="rgb(208,93,54)" fg:x="564567" fg:w="67"/><text x="92.5245%" y="335.50"></text></g><g><title>`0x7FF87490BE0B (65 samples, 0.01%)</title><rect x="92.3072%" y="325" width="0.0106%" height="15" fill="rgb(242,1,31)" fg:x="564767" fg:w="65"/><text x="92.5572%" y="335.50"></text></g><g><title>`0x7FF87490BE3F (62 samples, 0.01%)</title><rect x="92.3180%" y="325" width="0.0101%" height="15" fill="rgb(241,83,25)" fg:x="564833" fg:w="62"/><text x="92.5680%" y="335.50"></text></g><g><title>`0x7FF87490BE4F (78 samples, 0.01%)</title><rect x="92.3283%" y="325" width="0.0127%" height="15" fill="rgb(205,169,50)" fg:x="564896" fg:w="78"/><text x="92.5783%" y="335.50"></text></g><g><title>`0x7FF87490BE58 (67 samples, 0.01%)</title><rect x="92.3411%" y="325" width="0.0110%" height="15" fill="rgb(239,186,37)" fg:x="564974" fg:w="67"/><text x="92.5911%" y="335.50"></text></g><g><title>`0x7FF87490AB70 (71 samples, 0.01%)</title><rect x="92.3635%" y="309" width="0.0116%" height="15" fill="rgb(205,221,10)" fg:x="565111" fg:w="71"/><text x="92.6135%" y="319.50"></text></g><g><title>`0x7FF87490AB7D (77 samples, 0.01%)</title><rect x="92.3755%" y="309" width="0.0126%" height="15" fill="rgb(218,196,15)" fg:x="565185" fg:w="77"/><text x="92.6255%" y="319.50"></text></g><g><title>`0x7FF87490BE60 (224 samples, 0.04%)</title><rect x="92.3520%" y="325" width="0.0366%" height="15" fill="rgb(218,196,35)" fg:x="565041" fg:w="224"/><text x="92.6020%" y="335.50"></text></g><g><title>`0x7FF87497BFCA (66 samples, 0.01%)</title><rect x="92.4172%" y="325" width="0.0108%" height="15" fill="rgb(233,63,24)" fg:x="565440" fg:w="66"/><text x="92.6672%" y="335.50"></text></g><g><title>`0x7FF87497BFD7 (72 samples, 0.01%)</title><rect x="92.4285%" y="325" width="0.0118%" height="15" fill="rgb(225,8,4)" fg:x="565509" fg:w="72"/><text x="92.6785%" y="335.50"></text></g><g><title>`0x7FF87497BFF0 (298 samples, 0.05%)</title><rect x="92.4524%" y="325" width="0.0487%" height="15" fill="rgb(234,105,35)" fg:x="565655" fg:w="298"/><text x="92.7024%" y="335.50"></text></g><g><title>`0x7FF87497C005 (156 samples, 0.03%)</title><rect x="92.5112%" y="325" width="0.0255%" height="15" fill="rgb(236,21,32)" fg:x="566015" fg:w="156"/><text x="92.7612%" y="335.50"></text></g><g><title>`0x7FF87497C011 (63 samples, 0.01%)</title><rect x="92.5401%" y="325" width="0.0103%" height="15" fill="rgb(228,109,6)" fg:x="566192" fg:w="63"/><text x="92.7901%" y="335.50"></text></g><g><title>`0x7FF87497C01D (274 samples, 0.04%)</title><rect x="92.5530%" y="325" width="0.0448%" height="15" fill="rgb(229,215,31)" fg:x="566271" fg:w="274"/><text x="92.8030%" y="335.50"></text></g><g><title>`0x7FF87497C021 (252 samples, 0.04%)</title><rect x="92.5978%" y="325" width="0.0412%" height="15" fill="rgb(221,52,54)" fg:x="566545" fg:w="252"/><text x="92.8478%" y="335.50"></text></g><g><title>`0x7FF87497C028 (150 samples, 0.02%)</title><rect x="92.6393%" y="325" width="0.0245%" height="15" fill="rgb(252,129,43)" fg:x="566799" fg:w="150"/><text x="92.8893%" y="335.50"></text></g><g><title>`0x7FF87497C02B (66 samples, 0.01%)</title><rect x="92.6639%" y="325" width="0.0108%" height="15" fill="rgb(248,183,27)" fg:x="566949" fg:w="66"/><text x="92.9139%" y="335.50"></text></g><g><title>`0x7FF87497C02E (73 samples, 0.01%)</title><rect x="92.6746%" y="325" width="0.0119%" height="15" fill="rgb(250,0,22)" fg:x="567015" fg:w="73"/><text x="92.9246%" y="335.50"></text></g><g><title>`0x7FF87497C036 (192 samples, 0.03%)</title><rect x="92.6964%" y="325" width="0.0314%" height="15" fill="rgb(213,166,10)" fg:x="567148" fg:w="192"/><text x="92.9464%" y="335.50"></text></g><g><title>`0x7FF87497C03C (63 samples, 0.01%)</title><rect x="92.7278%" y="325" width="0.0103%" height="15" fill="rgb(207,163,36)" fg:x="567340" fg:w="63"/><text x="92.9778%" y="335.50"></text></g><g><title>`0x7FF87497C03F (67 samples, 0.01%)</title><rect x="92.7381%" y="325" width="0.0110%" height="15" fill="rgb(208,122,22)" fg:x="567403" fg:w="67"/><text x="92.9881%" y="335.50"></text></g><g><title>`0x7FF87497C052 (125 samples, 0.02%)</title><rect x="92.7580%" y="325" width="0.0204%" height="15" fill="rgb(207,104,49)" fg:x="567525" fg:w="125"/><text x="93.0080%" y="335.50"></text></g><g><title>`0x7FF87497C06F (73 samples, 0.01%)</title><rect x="92.7784%" y="325" width="0.0119%" height="15" fill="rgb(248,211,50)" fg:x="567650" fg:w="73"/><text x="93.0284%" y="335.50"></text></g><g><title>`0x7FF87497C0A6 (77 samples, 0.01%)</title><rect x="92.7905%" y="325" width="0.0126%" height="15" fill="rgb(217,13,45)" fg:x="567724" fg:w="77"/><text x="93.0405%" y="335.50"></text></g><g><title>`0x7FF87497C0BA (66 samples, 0.01%)</title><rect x="92.8036%" y="325" width="0.0108%" height="15" fill="rgb(211,216,49)" fg:x="567804" fg:w="66"/><text x="93.0536%" y="335.50"></text></g><g><title>`0x7FF87497C0C5 (72 samples, 0.01%)</title><rect x="92.8146%" y="325" width="0.0118%" height="15" fill="rgb(221,58,53)" fg:x="567871" fg:w="72"/><text x="93.0646%" y="335.50"></text></g><g><title>`0x7FF87497C0E2 (66 samples, 0.01%)</title><rect x="92.8369%" y="325" width="0.0108%" height="15" fill="rgb(220,112,41)" fg:x="568008" fg:w="66"/><text x="93.0869%" y="335.50"></text></g><g><title>`0x7FF87497C0EF (1,154 samples, 0.19%)</title><rect x="92.8477%" y="325" width="0.1886%" height="15" fill="rgb(236,38,28)" fg:x="568074" fg:w="1154"/><text x="93.0977%" y="335.50"></text></g><g><title>`0x7FF87497C101 (68 samples, 0.01%)</title><rect x="93.0365%" y="325" width="0.0111%" height="15" fill="rgb(227,195,22)" fg:x="569229" fg:w="68"/><text x="93.2865%" y="335.50"></text></g><g><title>`0x7FF87497C12F (209 samples, 0.03%)</title><rect x="93.0573%" y="325" width="0.0342%" height="15" fill="rgb(214,55,33)" fg:x="569356" fg:w="209"/><text x="93.3073%" y="335.50"></text></g><g><title>`0x7FF87490AB01 (5,766 samples, 0.94%)</title><rect x="92.1832%" y="341" width="0.9424%" height="15" fill="rgb(248,80,13)" fg:x="564008" fg:w="5766"/><text x="92.4332%" y="351.50"></text></g><g><title>`0x7FF87490AB0C (64 samples, 0.01%)</title><rect x="93.1256%" y="341" width="0.0105%" height="15" fill="rgb(238,52,6)" fg:x="569774" fg:w="64"/><text x="93.3756%" y="351.50"></text></g><g><title>`0x7FF87490AB16 (79 samples, 0.01%)</title><rect x="93.1362%" y="341" width="0.0129%" height="15" fill="rgb(224,198,47)" fg:x="569839" fg:w="79"/><text x="93.3862%" y="351.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::as_ptr(core::ptr::non_null::NonNull (268 samples, 0.04%)</title><rect x="93.1493%" y="341" width="0.0438%" height="15" fill="rgb(233,171,20)" fg:x="569919" fg:w="268"/><text x="93.3993%" y="351.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (7,459 samples, 1.22%)</title><rect x="92.0284%" y="357" width="1.2191%" height="15" fill="rgb(241,30,25)" fg:x="563061" fg:w="7459"/><text x="92.2784%" y="367.50"></text></g><g><title>rust_parser.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (333 samples, 0.05%)</title><rect x="93.1931%" y="341" width="0.0544%" height="15" fill="rgb(207,171,38)" fg:x="570187" fg:w="333"/><text x="93.4431%" y="351.50"></text></g><g><title>rust_parser.exe`std::sys::windows::alloc::impl$0::dealloc (333 samples, 0.05%)</title><rect x="93.1931%" y="325" width="0.0544%" height="15" fill="rgb(234,70,1)" fg:x="570187" fg:w="333"/><text x="93.4431%" y="335.50"></text></g><g><title>rust_parser.exe`core::mem::align_of (70 samples, 0.01%)</title><rect x="93.5376%" y="341" width="0.0114%" height="15" fill="rgb(232,178,18)" fg:x="572295" fg:w="70"/><text x="93.7876%" y="351.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::cast(core::ptr::non_null::NonNull (133 samples, 0.02%)</title><rect x="93.5525%" y="325" width="0.0217%" height="15" fill="rgb(241,78,40)" fg:x="572386" fg:w="133"/><text x="93.8025%" y="335.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::string::String&gt; (11,293 samples, 1.85%)</title><rect x="91.7615%" y="421" width="1.8458%" height="15" fill="rgb(222,35,25)" fg:x="561428" fg:w="11293"/><text x="92.0115%" y="431.50">r..</text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::vec::Vec (11,115 samples, 1.82%)</title><rect x="91.7906%" y="405" width="1.8167%" height="15" fill="rgb(207,92,16)" fg:x="561606" fg:w="11115"/><text x="92.0406%" y="415.50">r..</text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::raw_vec::RawVec (10,352 samples, 1.69%)</title><rect x="91.9153%" y="389" width="1.6920%" height="15" fill="rgb(216,59,51)" fg:x="562369" fg:w="10352"/><text x="92.1653%" y="399.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::impl$3::drop&lt;u8,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (10,216 samples, 1.67%)</title><rect x="91.9375%" y="373" width="1.6697%" height="15" fill="rgb(213,80,28)" fg:x="562505" fg:w="10216"/><text x="92.1875%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory&lt;u8,alloc::alloc::Global&gt; (2,201 samples, 0.36%)</title><rect x="93.2475%" y="357" width="0.3597%" height="15" fill="rgb(220,93,7)" fg:x="570520" fg:w="2201"/><text x="93.4975%" y="367.50"></text></g><g><title>rust_parser.exe`core::ptr::unique::Unique&lt;u8&gt;::cast(core::ptr::unique::Unique (335 samples, 0.05%)</title><rect x="93.5525%" y="341" width="0.0548%" height="15" fill="rgb(225,24,44)" fg:x="572386" fg:w="335"/><text x="93.8025%" y="351.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::impl$16::from(core::ptr::unique::Unique (202 samples, 0.03%)</title><rect x="93.5742%" y="325" width="0.0330%" height="15" fill="rgb(243,74,40)" fg:x="572519" fg:w="202"/><text x="93.8242%" y="335.50"></text></g><g><title>rust_parser.exe`core::ptr::unique::Unique&lt;u8&gt;::as_ptr(core::ptr::unique::Unique (202 samples, 0.03%)</title><rect x="93.5742%" y="309" width="0.0330%" height="15" fill="rgb(228,39,7)" fg:x="572519" fg:w="202"/><text x="93.8242%" y="319.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::as_ptr(core::ptr::non_null::NonNull (146 samples, 0.02%)</title><rect x="93.5834%" y="293" width="0.0239%" height="15" fill="rgb(227,79,8)" fg:x="572575" fg:w="146"/><text x="93.8334%" y="303.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (93 samples, 0.02%)</title><rect x="93.7968%" y="293" width="0.0152%" height="15" fill="rgb(236,58,11)" fg:x="573881" fg:w="93"/><text x="94.0468%" y="303.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$24::drop&lt;u8,alloc::alloc::Global&gt;(alloc::vec::Vec (366 samples, 0.06%)</title><rect x="93.7789%" y="325" width="0.0598%" height="15" fill="rgb(249,63,35)" fg:x="573771" fg:w="366"/><text x="94.0289%" y="335.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (256 samples, 0.04%)</title><rect x="93.7968%" y="309" width="0.0418%" height="15" fill="rgb(252,114,16)" fg:x="573881" fg:w="256"/><text x="94.0468%" y="319.50"></text></g><g><title>rust_parser.exe`core::ptr::mut_ptr::impl$0::cast (163 samples, 0.03%)</title><rect x="93.8120%" y="293" width="0.0266%" height="15" fill="rgb(254,151,24)" fg:x="573974" fg:w="163"/><text x="94.0620%" y="303.50"></text></g><g><title>`0x7FF8731D0D10 (75 samples, 0.01%)</title><rect x="93.9882%" y="277" width="0.0123%" height="15" fill="rgb(253,54,39)" fg:x="575052" fg:w="75"/><text x="94.2382%" y="287.50"></text></g><g><title>`0x7FF87490AAB0 (72 samples, 0.01%)</title><rect x="94.0005%" y="277" width="0.0118%" height="15" fill="rgb(243,25,45)" fg:x="575127" fg:w="72"/><text x="94.2505%" y="287.50"></text></g><g><title>`0x7FF87490AADC (70 samples, 0.01%)</title><rect x="94.0351%" y="277" width="0.0114%" height="15" fill="rgb(234,134,9)" fg:x="575339" fg:w="70"/><text x="94.2851%" y="287.50"></text></g><g><title>`0x7FF87490BAC3 (64 samples, 0.01%)</title><rect x="94.1375%" y="261" width="0.0105%" height="15" fill="rgb(227,166,31)" fg:x="575965" fg:w="64"/><text x="94.3875%" y="271.50"></text></g><g><title>`0x7FF87490BE4F (62 samples, 0.01%)</title><rect x="94.1886%" y="261" width="0.0101%" height="15" fill="rgb(245,143,41)" fg:x="576278" fg:w="62"/><text x="94.4386%" y="271.50"></text></g><g><title>`0x7FF87490BE58 (62 samples, 0.01%)</title><rect x="94.1988%" y="261" width="0.0101%" height="15" fill="rgb(238,181,32)" fg:x="576340" fg:w="62"/><text x="94.4488%" y="271.50"></text></g><g><title>`0x7FF87490BE60 (140 samples, 0.02%)</title><rect x="94.2089%" y="261" width="0.0229%" height="15" fill="rgb(224,113,18)" fg:x="576402" fg:w="140"/><text x="94.4589%" y="271.50"></text></g><g><title>`0x7FF87497C005 (80 samples, 0.01%)</title><rect x="94.3029%" y="261" width="0.0131%" height="15" fill="rgb(240,229,28)" fg:x="576977" fg:w="80"/><text x="94.5529%" y="271.50"></text></g><g><title>`0x7FF87497C011 (85 samples, 0.01%)</title><rect x="94.3190%" y="261" width="0.0139%" height="15" fill="rgb(250,185,3)" fg:x="577076" fg:w="85"/><text x="94.5690%" y="271.50"></text></g><g><title>`0x7FF87497C01D (235 samples, 0.04%)</title><rect x="94.3357%" y="261" width="0.0384%" height="15" fill="rgb(212,59,25)" fg:x="577178" fg:w="235"/><text x="94.5857%" y="271.50"></text></g><g><title>`0x7FF87497C021 (230 samples, 0.04%)</title><rect x="94.3741%" y="261" width="0.0376%" height="15" fill="rgb(221,87,20)" fg:x="577413" fg:w="230"/><text x="94.6241%" y="271.50"></text></g><g><title>`0x7FF87497C028 (127 samples, 0.02%)</title><rect x="94.4117%" y="261" width="0.0208%" height="15" fill="rgb(213,74,28)" fg:x="577643" fg:w="127"/><text x="94.6617%" y="271.50"></text></g><g><title>`0x7FF87497C02B (73 samples, 0.01%)</title><rect x="94.4325%" y="261" width="0.0119%" height="15" fill="rgb(224,132,34)" fg:x="577770" fg:w="73"/><text x="94.6825%" y="271.50"></text></g><g><title>`0x7FF87497C036 (151 samples, 0.02%)</title><rect x="94.4630%" y="261" width="0.0247%" height="15" fill="rgb(222,101,24)" fg:x="577957" fg:w="151"/><text x="94.7130%" y="271.50"></text></g><g><title>`0x7FF87497C03F (65 samples, 0.01%)</title><rect x="94.4964%" y="261" width="0.0106%" height="15" fill="rgb(254,142,4)" fg:x="578161" fg:w="65"/><text x="94.7464%" y="271.50"></text></g><g><title>`0x7FF87497C052 (103 samples, 0.02%)</title><rect x="94.5152%" y="261" width="0.0168%" height="15" fill="rgb(230,229,49)" fg:x="578276" fg:w="103"/><text x="94.7652%" y="271.50"></text></g><g><title>`0x7FF87497C0A6 (67 samples, 0.01%)</title><rect x="94.5410%" y="261" width="0.0110%" height="15" fill="rgb(238,70,47)" fg:x="578434" fg:w="67"/><text x="94.7910%" y="271.50"></text></g><g><title>`0x7FF87497C0E2 (67 samples, 0.01%)</title><rect x="94.5757%" y="261" width="0.0110%" height="15" fill="rgb(231,160,17)" fg:x="578646" fg:w="67"/><text x="94.8257%" y="271.50"></text></g><g><title>`0x7FF87497C0EF (944 samples, 0.15%)</title><rect x="94.5868%" y="261" width="0.1543%" height="15" fill="rgb(218,68,53)" fg:x="578714" fg:w="944"/><text x="94.8368%" y="271.50"></text></g><g><title>`0x7FF87497C123 (62 samples, 0.01%)</title><rect x="94.7494%" y="261" width="0.0101%" height="15" fill="rgb(236,111,10)" fg:x="579709" fg:w="62"/><text x="94.9994%" y="271.50"></text></g><g><title>`0x7FF87497C12F (152 samples, 0.02%)</title><rect x="94.7599%" y="261" width="0.0248%" height="15" fill="rgb(224,34,41)" fg:x="579773" fg:w="152"/><text x="95.0099%" y="271.50"></text></g><g><title>`0x7FF87497C3DE (62 samples, 0.01%)</title><rect x="94.8030%" y="261" width="0.0101%" height="15" fill="rgb(241,118,19)" fg:x="580037" fg:w="62"/><text x="95.0530%" y="271.50"></text></g><g><title>`0x7FF87490AB01 (4,609 samples, 0.75%)</title><rect x="94.0662%" y="277" width="0.7533%" height="15" fill="rgb(238,129,25)" fg:x="575529" fg:w="4609"/><text x="94.3162%" y="287.50"></text></g><g><title>`0x7FF87490AB16 (62 samples, 0.01%)</title><rect x="94.8296%" y="277" width="0.0101%" height="15" fill="rgb(238,22,31)" fg:x="580200" fg:w="62"/><text x="95.0796%" y="287.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::as_ptr(core::ptr::non_null::NonNull (303 samples, 0.05%)</title><rect x="94.8399%" y="277" width="0.0495%" height="15" fill="rgb(222,174,48)" fg:x="580263" fg:w="303"/><text x="95.0899%" y="287.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (5,922 samples, 0.97%)</title><rect x="93.9418%" y="293" width="0.9679%" height="15" fill="rgb(206,152,40)" fg:x="574768" fg:w="5922"/><text x="94.1918%" y="303.50"></text></g><g><title>rust_parser.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (124 samples, 0.02%)</title><rect x="94.8895%" y="277" width="0.0203%" height="15" fill="rgb(218,99,54)" fg:x="580566" fg:w="124"/><text x="95.1395%" y="287.50"></text></g><g><title>rust_parser.exe`std::sys::windows::alloc::impl$0::dealloc (124 samples, 0.02%)</title><rect x="94.8895%" y="261" width="0.0203%" height="15" fill="rgb(220,174,26)" fg:x="580566" fg:w="124"/><text x="95.1395%" y="271.50"></text></g><g><title>rust_parser.exe`std::sys::windows::alloc::get_process_heap (62 samples, 0.01%)</title><rect x="94.8996%" y="245" width="0.0101%" height="15" fill="rgb(245,116,9)" fg:x="580628" fg:w="62"/><text x="95.1496%" y="255.50"></text></g><g><title>rust_parser.exe`core::sync::atomic::AtomicPtr::load (62 samples, 0.01%)</title><rect x="94.8996%" y="229" width="0.0101%" height="15" fill="rgb(209,72,35)" fg:x="580628" fg:w="62"/><text x="95.1496%" y="239.50"></text></g><g><title>rust_parser.exe`core::sync::atomic::atomic_load (62 samples, 0.01%)</title><rect x="94.8996%" y="213" width="0.0101%" height="15" fill="rgb(226,126,21)" fg:x="580628" fg:w="62"/><text x="95.1496%" y="223.50"></text></g><g><title>rust_parser.exe`core::mem::align_of (72 samples, 0.01%)</title><rect x="95.1279%" y="277" width="0.0118%" height="15" fill="rgb(227,192,1)" fg:x="582025" fg:w="72"/><text x="95.3779%" y="287.50"></text></g><g><title>rust_parser.exe`core::mem::size_of (78 samples, 0.01%)</title><rect x="95.1397%" y="277" width="0.0127%" height="15" fill="rgb(237,180,29)" fg:x="582097" fg:w="78"/><text x="95.3897%" y="287.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::cast(core::ptr::non_null::NonNull (155 samples, 0.03%)</title><rect x="95.1524%" y="261" width="0.0253%" height="15" fill="rgb(230,197,35)" fg:x="582175" fg:w="155"/><text x="95.4024%" y="271.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::new_unchecked (64 samples, 0.01%)</title><rect x="95.1673%" y="245" width="0.0105%" height="15" fill="rgb(246,193,31)" fg:x="582266" fg:w="64"/><text x="95.4173%" y="255.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::string::String&gt; (9,278 samples, 1.52%)</title><rect x="93.7035%" y="357" width="1.5164%" height="15" fill="rgb(241,36,4)" fg:x="573310" fg:w="9278"/><text x="93.9535%" y="367.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::vec::Vec (9,108 samples, 1.49%)</title><rect x="93.7313%" y="341" width="1.4886%" height="15" fill="rgb(241,130,17)" fg:x="573480" fg:w="9108"/><text x="93.9813%" y="351.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::raw_vec::RawVec (8,451 samples, 1.38%)</title><rect x="93.8387%" y="325" width="1.3813%" height="15" fill="rgb(206,137,32)" fg:x="574137" fg:w="8451"/><text x="94.0887%" y="335.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::impl$3::drop&lt;u8,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (8,332 samples, 1.36%)</title><rect x="93.8581%" y="309" width="1.3618%" height="15" fill="rgb(237,228,51)" fg:x="574256" fg:w="8332"/><text x="94.1081%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory&lt;u8,alloc::alloc::Global&gt; (1,898 samples, 0.31%)</title><rect x="94.9097%" y="293" width="0.3102%" height="15" fill="rgb(243,6,42)" fg:x="580690" fg:w="1898"/><text x="95.1597%" y="303.50"></text></g><g><title>rust_parser.exe`core::ptr::unique::Unique&lt;u8&gt;::cast(core::ptr::unique::Unique (413 samples, 0.07%)</title><rect x="95.1524%" y="277" width="0.0675%" height="15" fill="rgb(251,74,28)" fg:x="582175" fg:w="413"/><text x="95.4024%" y="287.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::impl$16::from(core::ptr::unique::Unique (258 samples, 0.04%)</title><rect x="95.1778%" y="261" width="0.0422%" height="15" fill="rgb(218,20,49)" fg:x="582330" fg:w="258"/><text x="95.4278%" y="271.50"></text></g><g><title>rust_parser.exe`core::ptr::unique::Unique&lt;u8&gt;::as_ptr(core::ptr::unique::Unique (258 samples, 0.04%)</title><rect x="95.1778%" y="245" width="0.0422%" height="15" fill="rgb(238,28,14)" fg:x="582330" fg:w="258"/><text x="95.4278%" y="255.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::as_ptr(core::ptr::non_null::NonNull (194 samples, 0.03%)</title><rect x="95.1882%" y="229" width="0.0317%" height="15" fill="rgb(229,40,46)" fg:x="582394" fg:w="194"/><text x="95.4382%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_mut_ptr (167 samples, 0.03%)</title><rect x="95.2979%" y="325" width="0.0273%" height="15" fill="rgb(244,195,20)" fg:x="583065" fg:w="167"/><text x="95.5479%" y="335.50"></text></g><g><title>rust_parser.exe`core::ptr::mut_ptr::impl$0::cast (121 samples, 0.02%)</title><rect x="95.3054%" y="309" width="0.0198%" height="15" fill="rgb(253,56,35)" fg:x="583111" fg:w="121"/><text x="95.5554%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (116 samples, 0.02%)</title><rect x="95.4689%" y="245" width="0.0190%" height="15" fill="rgb(210,149,44)" fg:x="584111" fg:w="116"/><text x="95.7189%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$24::drop&lt;u8,alloc::alloc::Global&gt;(alloc::vec::Vec (435 samples, 0.07%)</title><rect x="95.4412%" y="277" width="0.0711%" height="15" fill="rgb(240,135,12)" fg:x="583942" fg:w="435"/><text x="95.6912%" y="287.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (266 samples, 0.04%)</title><rect x="95.4689%" y="261" width="0.0435%" height="15" fill="rgb(251,24,50)" fg:x="584111" fg:w="266"/><text x="95.7189%" y="271.50"></text></g><g><title>rust_parser.exe`core::ptr::mut_ptr::impl$0::cast (150 samples, 0.02%)</title><rect x="95.4878%" y="245" width="0.0245%" height="15" fill="rgb(243,200,47)" fg:x="584227" fg:w="150"/><text x="95.7378%" y="255.50"></text></g><g><title>`0x7FF8731D0D10 (72 samples, 0.01%)</title><rect x="95.6532%" y="229" width="0.0118%" height="15" fill="rgb(224,166,26)" fg:x="585239" fg:w="72"/><text x="95.9032%" y="239.50"></text></g><g><title>`0x7FF87490BE60 (155 samples, 0.03%)</title><rect x="95.8400%" y="213" width="0.0253%" height="15" fill="rgb(233,0,47)" fg:x="586382" fg:w="155"/><text x="96.0900%" y="223.50"></text></g><g><title>`0x7FF87490BE81 (63 samples, 0.01%)</title><rect x="95.8744%" y="213" width="0.0103%" height="15" fill="rgb(253,80,5)" fg:x="586592" fg:w="63"/><text x="96.1244%" y="223.50"></text></g><g><title>`0x7FF87497C005 (238 samples, 0.04%)</title><rect x="95.9334%" y="213" width="0.0389%" height="15" fill="rgb(214,133,25)" fg:x="586953" fg:w="238"/><text x="96.1834%" y="223.50"></text></g><g><title>`0x7FF87497C011 (124 samples, 0.02%)</title><rect x="95.9729%" y="213" width="0.0203%" height="15" fill="rgb(209,27,14)" fg:x="587195" fg:w="124"/><text x="96.2229%" y="223.50"></text></g><g><title>`0x7FF87497C01D (202 samples, 0.03%)</title><rect x="95.9935%" y="213" width="0.0330%" height="15" fill="rgb(219,102,51)" fg:x="587321" fg:w="202"/><text x="96.2435%" y="223.50"></text></g><g><title>`0x7FF87497C021 (200 samples, 0.03%)</title><rect x="96.0265%" y="213" width="0.0327%" height="15" fill="rgb(237,18,16)" fg:x="587523" fg:w="200"/><text x="96.2765%" y="223.50"></text></g><g><title>`0x7FF87497C028 (92 samples, 0.02%)</title><rect x="96.0592%" y="213" width="0.0150%" height="15" fill="rgb(241,85,17)" fg:x="587723" fg:w="92"/><text x="96.3092%" y="223.50"></text></g><g><title>`0x7FF87497C036 (125 samples, 0.02%)</title><rect x="96.0980%" y="213" width="0.0204%" height="15" fill="rgb(236,90,42)" fg:x="587960" fg:w="125"/><text x="96.3480%" y="223.50"></text></g><g><title>`0x7FF87497C052 (96 samples, 0.02%)</title><rect x="96.1421%" y="213" width="0.0157%" height="15" fill="rgb(249,57,21)" fg:x="588230" fg:w="96"/><text x="96.3921%" y="223.50"></text></g><g><title>`0x7FF87497C0EF (837 samples, 0.14%)</title><rect x="96.2026%" y="213" width="0.1368%" height="15" fill="rgb(243,12,36)" fg:x="588600" fg:w="837"/><text x="96.4526%" y="223.50"></text></g><g><title>`0x7FF87497C123 (65 samples, 0.01%)</title><rect x="96.3480%" y="213" width="0.0106%" height="15" fill="rgb(253,128,47)" fg:x="589490" fg:w="65"/><text x="96.5980%" y="223.50"></text></g><g><title>`0x7FF87497C12F (147 samples, 0.02%)</title><rect x="96.3613%" y="213" width="0.0240%" height="15" fill="rgb(207,33,20)" fg:x="589571" fg:w="147"/><text x="96.6113%" y="223.50"></text></g><g><title>`0x7FF87490AB01 (4,227 samples, 0.69%)</title><rect x="95.7199%" y="229" width="0.6909%" height="15" fill="rgb(233,215,35)" fg:x="585647" fg:w="4227"/><text x="95.9699%" y="239.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::as_ptr(core::ptr::non_null::NonNull (224 samples, 0.04%)</title><rect x="96.4291%" y="229" width="0.0366%" height="15" fill="rgb(249,188,52)" fg:x="589986" fg:w="224"/><text x="96.6791%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (5,327 samples, 0.87%)</title><rect x="95.6116%" y="245" width="0.8707%" height="15" fill="rgb(225,12,32)" fg:x="584984" fg:w="5327"/><text x="95.8616%" y="255.50"></text></g><g><title>rust_parser.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (101 samples, 0.02%)</title><rect x="96.4657%" y="229" width="0.0165%" height="15" fill="rgb(247,98,14)" fg:x="590210" fg:w="101"/><text x="96.7157%" y="239.50"></text></g><g><title>rust_parser.exe`std::sys::windows::alloc::impl$0::dealloc (101 samples, 0.02%)</title><rect x="96.4657%" y="213" width="0.0165%" height="15" fill="rgb(247,219,48)" fg:x="590210" fg:w="101"/><text x="96.7157%" y="223.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::cast(core::ptr::non_null::NonNull (89 samples, 0.01%)</title><rect x="96.7048%" y="213" width="0.0145%" height="15" fill="rgb(253,60,48)" fg:x="591673" fg:w="89"/><text x="96.9548%" y="223.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$24::drop&lt;alloc::string::String,alloc::alloc::Global&gt;(alloc::vec::Vec (9,079 samples, 1.48%)</title><rect x="95.2562%" y="341" width="1.4839%" height="15" fill="rgb(245,15,52)" fg:x="582810" fg:w="9079"/><text x="95.5062%" y="351.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;slice2$&lt;alloc::string::String&gt; &gt;(ptr_mut$&lt;slice2$ (8,657 samples, 1.41%)</title><rect x="95.3252%" y="325" width="1.4149%" height="15" fill="rgb(220,133,28)" fg:x="583232" fg:w="8657"/><text x="95.5752%" y="335.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::string::String&gt; (8,304 samples, 1.36%)</title><rect x="95.3829%" y="309" width="1.3572%" height="15" fill="rgb(217,180,4)" fg:x="583585" fg:w="8304"/><text x="95.6329%" y="319.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::vec::Vec (8,190 samples, 1.34%)</title><rect x="95.4015%" y="293" width="1.3386%" height="15" fill="rgb(251,24,1)" fg:x="583699" fg:w="8190"/><text x="95.6515%" y="303.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::raw_vec::RawVec (7,512 samples, 1.23%)</title><rect x="95.5123%" y="277" width="1.2278%" height="15" fill="rgb(212,185,49)" fg:x="584377" fg:w="7512"/><text x="95.7623%" y="287.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::impl$3::drop&lt;u8,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (7,340 samples, 1.20%)</title><rect x="95.5405%" y="261" width="1.1997%" height="15" fill="rgb(215,175,22)" fg:x="584549" fg:w="7340"/><text x="95.7905%" y="271.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory&lt;u8,alloc::alloc::Global&gt; (1,578 samples, 0.26%)</title><rect x="96.4822%" y="245" width="0.2579%" height="15" fill="rgb(250,205,14)" fg:x="590311" fg:w="1578"/><text x="96.7322%" y="255.50"></text></g><g><title>rust_parser.exe`core::ptr::unique::Unique&lt;u8&gt;::cast(core::ptr::unique::Unique (216 samples, 0.04%)</title><rect x="96.7048%" y="229" width="0.0353%" height="15" fill="rgb(225,211,22)" fg:x="591673" fg:w="216"/><text x="96.9548%" y="239.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::impl$16::from(core::ptr::unique::Unique (127 samples, 0.02%)</title><rect x="96.7194%" y="213" width="0.0208%" height="15" fill="rgb(251,179,42)" fg:x="591762" fg:w="127"/><text x="96.9694%" y="223.50"></text></g><g><title>rust_parser.exe`core::ptr::unique::Unique&lt;u8&gt;::as_ptr(core::ptr::unique::Unique (127 samples, 0.02%)</title><rect x="96.7194%" y="197" width="0.0208%" height="15" fill="rgb(208,216,51)" fg:x="591762" fg:w="127"/><text x="96.9694%" y="207.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::as_ptr(core::ptr::non_null::NonNull (80 samples, 0.01%)</title><rect x="96.7271%" y="181" width="0.0131%" height="15" fill="rgb(235,36,11)" fg:x="591809" fg:w="80"/><text x="96.9771%" y="191.50"></text></g><g><title>`0x7FF8731D0D10 (75 samples, 0.01%)</title><rect x="96.8336%" y="293" width="0.0123%" height="15" fill="rgb(213,189,28)" fg:x="592461" fg:w="75"/><text x="97.0836%" y="303.50"></text></g><g><title>`0x7FF87490B69B (151 samples, 0.02%)</title><rect x="96.9008%" y="277" width="0.0247%" height="15" fill="rgb(227,203,42)" fg:x="592872" fg:w="151"/><text x="97.1508%" y="287.50"></text></g><g><title>`0x7FF87490BE60 (85 samples, 0.01%)</title><rect x="96.9753%" y="277" width="0.0139%" height="15" fill="rgb(244,72,36)" fg:x="593328" fg:w="85"/><text x="97.2253%" y="287.50"></text></g><g><title>`0x7FF87497C011 (73 samples, 0.01%)</title><rect x="97.0386%" y="277" width="0.0119%" height="15" fill="rgb(213,53,17)" fg:x="593715" fg:w="73"/><text x="97.2886%" y="287.50"></text></g><g><title>`0x7FF87497C01D (115 samples, 0.02%)</title><rect x="97.0513%" y="277" width="0.0188%" height="15" fill="rgb(207,167,3)" fg:x="593793" fg:w="115"/><text x="97.3013%" y="287.50"></text></g><g><title>`0x7FF87497C021 (119 samples, 0.02%)</title><rect x="97.0701%" y="277" width="0.0194%" height="15" fill="rgb(216,98,30)" fg:x="593908" fg:w="119"/><text x="97.3201%" y="287.50"></text></g><g><title>`0x7FF87497C028 (72 samples, 0.01%)</title><rect x="97.0896%" y="277" width="0.0118%" height="15" fill="rgb(236,123,15)" fg:x="594027" fg:w="72"/><text x="97.3396%" y="287.50"></text></g><g><title>`0x7FF87497C036 (74 samples, 0.01%)</title><rect x="97.1147%" y="277" width="0.0121%" height="15" fill="rgb(248,81,50)" fg:x="594181" fg:w="74"/><text x="97.3647%" y="287.50"></text></g><g><title>`0x7FF87497C052 (74 samples, 0.01%)</title><rect x="97.1412%" y="277" width="0.0121%" height="15" fill="rgb(214,120,4)" fg:x="594343" fg:w="74"/><text x="97.3912%" y="287.50"></text></g><g><title>`0x7FF87497C0EF (519 samples, 0.08%)</title><rect x="97.1798%" y="277" width="0.0848%" height="15" fill="rgb(208,179,34)" fg:x="594579" fg:w="519"/><text x="97.4298%" y="287.50"></text></g><g><title>`0x7FF87497C12F (78 samples, 0.01%)</title><rect x="97.2748%" y="277" width="0.0127%" height="15" fill="rgb(227,140,7)" fg:x="595160" fg:w="78"/><text x="97.5248%" y="287.50"></text></g><g><title>`0x7FF87490AB01 (2,717 samples, 0.44%)</title><rect x="96.8761%" y="293" width="0.4441%" height="15" fill="rgb(214,22,6)" fg:x="592721" fg:w="2717"/><text x="97.1261%" y="303.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::NonNull&lt;u8&gt;::as_ptr(core::ptr::non_null::NonNull (98 samples, 0.02%)</title><rect x="97.3324%" y="293" width="0.0160%" height="15" fill="rgb(207,137,27)" fg:x="595513" fg:w="98"/><text x="97.5824%" y="303.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (3,421 samples, 0.56%)</title><rect x="96.8008%" y="309" width="0.5591%" height="15" fill="rgb(210,8,46)" fg:x="592260" fg:w="3421"/><text x="97.0508%" y="319.50"></text></g><g><title>rust_parser.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (70 samples, 0.01%)</title><rect x="97.3485%" y="293" width="0.0114%" height="15" fill="rgb(240,16,54)" fg:x="595611" fg:w="70"/><text x="97.5985%" y="303.50"></text></g><g><title>rust_parser.exe`std::sys::windows::alloc::impl$0::dealloc (70 samples, 0.01%)</title><rect x="97.3485%" y="277" width="0.0114%" height="15" fill="rgb(211,209,29)" fg:x="595611" fg:w="70"/><text x="97.5985%" y="287.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$24::drop&lt;can_dbc::Signal,alloc::alloc::Global&gt;(alloc::vec::Vec (23,543 samples, 3.85%)</title><rect x="93.6210%" y="405" width="3.8479%" height="15" fill="rgb(226,228,24)" fg:x="572805" fg:w="23543"/><text x="93.8710%" y="415.50">rust..</text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;slice2$&lt;can_dbc::Signal&gt; &gt;(ptr_mut$&lt;slice2$ (23,464 samples, 3.84%)</title><rect x="93.6339%" y="389" width="3.8350%" height="15" fill="rgb(222,84,9)" fg:x="572884" fg:w="23464"/><text x="93.8839%" y="399.50">rust..</text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;can_dbc::Signal&gt; (23,258 samples, 3.80%)</title><rect x="93.6676%" y="373" width="3.8014%" height="15" fill="rgb(234,203,30)" fg:x="573090" fg:w="23258"/><text x="93.9176%" y="383.50">rust..</text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;(alloc::vec::Vec (13,760 samples, 2.25%)</title><rect x="95.2199%" y="357" width="2.2490%" height="15" fill="rgb(238,109,14)" fg:x="582588" fg:w="13760"/><text x="95.4699%" y="367.50">r..</text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;(alloc::raw_vec::RawVec (4,459 samples, 0.73%)</title><rect x="96.7401%" y="341" width="0.7288%" height="15" fill="rgb(233,206,34)" fg:x="591889" fg:w="4459"/><text x="96.9901%" y="351.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::impl$3::drop&lt;alloc::string::String,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (4,332 samples, 0.71%)</title><rect x="96.7609%" y="325" width="0.7080%" height="15" fill="rgb(220,167,47)" fg:x="592016" fg:w="4332"/><text x="97.0109%" y="335.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::current_memory&lt;alloc::string::String,alloc::alloc::Global&gt; (667 samples, 0.11%)</title><rect x="97.3599%" y="309" width="0.1090%" height="15" fill="rgb(238,105,10)" fg:x="595681" fg:w="667"/><text x="97.6099%" y="319.50"></text></g><g><title>rust_parser.exe`core::ptr::unique::Unique&lt;alloc::string::String&gt;::cast(core::ptr::unique::Unique (121 samples, 0.02%)</title><rect x="97.4491%" y="293" width="0.0198%" height="15" fill="rgb(213,227,17)" fg:x="596227" fg:w="121"/><text x="97.6991%" y="303.50"></text></g><g><title>rust_parser.exe`core::ptr::non_null::impl$16::from(core::ptr::unique::Unique (73 samples, 0.01%)</title><rect x="97.4570%" y="277" width="0.0119%" height="15" fill="rgb(217,132,38)" fg:x="596275" fg:w="73"/><text x="97.7070%" y="287.50"></text></g><g><title>rust_parser.exe`core::ptr::unique::Unique&lt;u8&gt;::as_ptr(core::ptr::unique::Unique (73 samples, 0.01%)</title><rect x="97.4570%" y="261" width="0.0119%" height="15" fill="rgb(242,146,4)" fg:x="596275" fg:w="73"/><text x="97.7070%" y="271.50"></text></g><g><title>`0x7FF87497C296 (105 samples, 0.02%)</title><rect x="97.5619%" y="341" width="0.0172%" height="15" fill="rgb(212,61,9)" fg:x="596917" fg:w="105"/><text x="97.8119%" y="351.50"></text></g><g><title>`0x7FF87490AB01 (627 samples, 0.10%)</title><rect x="97.4920%" y="357" width="0.1025%" height="15" fill="rgb(247,126,22)" fg:x="596489" fg:w="627"/><text x="97.7420%" y="367.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (705 samples, 0.12%)</title><rect x="97.4843%" y="373" width="0.1152%" height="15" fill="rgb(220,196,2)" fg:x="596442" fg:w="705"/><text x="97.7343%" y="383.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt; &gt;(alloc::vec::Vec (24,661 samples, 4.03%)</title><rect x="93.6073%" y="421" width="4.0307%" height="15" fill="rgb(208,46,4)" fg:x="572721" fg:w="24661"/><text x="93.8573%" y="431.50">rust..</text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;can_dbc::Signal,alloc::alloc::Global&gt; &gt;(alloc::raw_vec::RawVec (1,034 samples, 0.17%)</title><rect x="97.4689%" y="405" width="0.1690%" height="15" fill="rgb(252,104,46)" fg:x="596348" fg:w="1034"/><text x="97.7189%" y="415.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::impl$3::drop&lt;can_dbc::Signal,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (988 samples, 0.16%)</title><rect x="97.4764%" y="389" width="0.1615%" height="15" fill="rgb(237,152,48)" fg:x="596394" fg:w="988"/><text x="97.7264%" y="399.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;can_dbc::Signal,alloc::alloc::Global&gt;::current_memory&lt;can_dbc::Signal,alloc::alloc::Global&gt; (235 samples, 0.04%)</title><rect x="97.5995%" y="373" width="0.0384%" height="15" fill="rgb(221,59,37)" fg:x="597147" fg:w="235"/><text x="97.8495%" y="383.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;enum2$&lt;core::result::Result&lt;array$&lt;u8,8&gt;,alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt; &gt;(enum2$&lt;core::result::Result&lt;array$&lt;u8,8&gt;,alloc::vec::Vec (199 samples, 0.03%)</title><rect x="97.6379%" y="421" width="0.0325%" height="15" fill="rgb(209,202,51)" fg:x="597382" fg:w="199"/><text x="97.8879%" y="431.50"></text></g><g><title>rust_parser.exe`core::slice::impl$0::iter&lt;can_dbc::Signal&gt;(ref$&lt;slice2$ (175 samples, 0.03%)</title><rect x="97.6704%" y="421" width="0.0286%" height="15" fill="rgb(228,81,30)" fg:x="597581" fg:w="175"/><text x="97.9204%" y="431.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$181::next&lt;can_dbc::Signal&gt;(core::slice::iter::Iter (566 samples, 0.09%)</title><rect x="97.6990%" y="421" width="0.0925%" height="15" fill="rgb(227,42,39)" fg:x="597756" fg:w="566"/><text x="97.9490%" y="431.50"></text></g><g><title>rust_parser.exe`core::slice::iter::Iter&lt;can_dbc::Signal&gt;::post_inc_start (247 samples, 0.04%)</title><rect x="97.7512%" y="405" width="0.0404%" height="15" fill="rgb(221,26,2)" fg:x="598075" fg:w="247"/><text x="98.0012%" y="415.50"></text></g><g><title>rust_parser.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (124 samples, 0.02%)</title><rect x="97.8569%" y="261" width="0.0203%" height="15" fill="rgb(254,61,31)" fg:x="598722" fg:w="124"/><text x="98.1069%" y="271.50"></text></g><g><title>rust_parser.exe`core::hash::impls::impl$5::hash&lt;u32,std::collections::hash::map::DefaultHasher&gt; (377 samples, 0.06%)</title><rect x="97.8166%" y="341" width="0.0616%" height="15" fill="rgb(222,173,38)" fg:x="598475" fg:w="377"/><text x="98.0666%" y="351.50"></text></g><g><title>rust_parser.exe`core::hash::impls::impl$11::hash&lt;std::collections::hash::map::DefaultHasher&gt; (341 samples, 0.06%)</title><rect x="97.8224%" y="325" width="0.0557%" height="15" fill="rgb(218,50,12)" fg:x="598511" fg:w="341"/><text x="98.0724%" y="335.50"></text></g><g><title>rust_parser.exe`core::hash::Hasher::write_u32&lt;std::collections::hash::map::DefaultHasher&gt; (307 samples, 0.05%)</title><rect x="97.8280%" y="309" width="0.0502%" height="15" fill="rgb(223,88,40)" fg:x="598545" fg:w="307"/><text x="98.0780%" y="319.50"></text></g><g><title>rust_parser.exe`std::collections::hash::map::impl$86::write(std::collections::hash::map::DefaultHasher*, ref$&lt;slice2$ (274 samples, 0.04%)</title><rect x="97.8334%" y="293" width="0.0448%" height="15" fill="rgb(237,54,19)" fg:x="598578" fg:w="274"/><text x="98.0834%" y="303.50"></text></g><g><title>rust_parser.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (247 samples, 0.04%)</title><rect x="97.8378%" y="277" width="0.0404%" height="15" fill="rgb(251,129,25)" fg:x="598605" fg:w="247"/><text x="98.0878%" y="287.50"></text></g><g><title>rust_parser.exe`core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::new_with_keys (65 samples, 0.01%)</title><rect x="97.9315%" y="309" width="0.0106%" height="15" fill="rgb(238,97,19)" fg:x="599178" fg:w="65"/><text x="98.1815%" y="319.50"></text></g><g><title>rust_parser.exe`core::hash::sip::SipHasher13::new_with_keys (284 samples, 0.05%)</title><rect x="97.8960%" y="325" width="0.0464%" height="15" fill="rgb(240,169,18)" fg:x="598961" fg:w="284"/><text x="98.1460%" y="335.50"></text></g><g><title>rust_parser.exe`std::collections::hash::map::impl$83::build_hasher (395 samples, 0.06%)</title><rect x="97.8782%" y="341" width="0.0646%" height="15" fill="rgb(230,187,49)" fg:x="598852" fg:w="395"/><text x="98.1282%" y="351.50"></text></g><g><title>rust_parser.exe`core::hash::sip::impl$8::c_rounds (239 samples, 0.04%)</title><rect x="97.9671%" y="309" width="0.0391%" height="15" fill="rgb(209,44,26)" fg:x="599396" fg:w="239"/><text x="98.2171%" y="319.50"></text></g><g><title>rust_parser.exe`core::num::impl$9::rotate_left (77 samples, 0.01%)</title><rect x="98.0890%" y="293" width="0.0126%" height="15" fill="rgb(244,0,6)" fg:x="600142" fg:w="77"/><text x="98.3390%" y="303.50"></text></g><g><title>rust_parser.exe`hashbrown::map::make_hash (1,841 samples, 0.30%)</title><rect x="97.8056%" y="373" width="0.3009%" height="15" fill="rgb(248,18,21)" fg:x="598408" fg:w="1841"/><text x="98.0556%" y="383.50"></text></g><g><title>rust_parser.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;u32&gt; &gt; (1,827 samples, 0.30%)</title><rect x="97.8079%" y="357" width="0.2986%" height="15" fill="rgb(245,180,19)" fg:x="598422" fg:w="1827"/><text x="98.0579%" y="367.50"></text></g><g><title>rust_parser.exe`std::collections::hash::map::impl$86::finish (1,002 samples, 0.16%)</title><rect x="97.9427%" y="341" width="0.1638%" height="15" fill="rgb(252,118,36)" fg:x="599247" fg:w="1002"/><text x="98.1927%" y="351.50"></text></g><g><title>rust_parser.exe`core::hash::sip::impl$5::finish&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher (978 samples, 0.16%)</title><rect x="97.9467%" y="325" width="0.1598%" height="15" fill="rgb(210,224,19)" fg:x="599271" fg:w="978"/><text x="98.1967%" y="335.50"></text></g><g><title>rust_parser.exe`core::hash::sip::impl$8::d_rounds (614 samples, 0.10%)</title><rect x="98.0062%" y="309" width="0.1004%" height="15" fill="rgb(218,30,24)" fg:x="599635" fg:w="614"/><text x="98.2562%" y="319.50"></text></g><g><title>rust_parser.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (199 samples, 0.03%)</title><rect x="98.1768%" y="309" width="0.0325%" height="15" fill="rgb(219,75,50)" fg:x="600679" fg:w="199"/><text x="98.4268%" y="319.50"></text></g><g><title>rust_parser.exe`core::intrinsics::copy_nonoverlapping (66 samples, 0.01%)</title><rect x="98.1985%" y="293" width="0.0108%" height="15" fill="rgb(234,72,50)" fg:x="600812" fg:w="66"/><text x="98.4485%" y="303.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::ctrl (238 samples, 0.04%)</title><rect x="98.1714%" y="325" width="0.0389%" height="15" fill="rgb(219,100,48)" fg:x="600646" fg:w="238"/><text x="98.4214%" y="335.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::bitmask::BitMask::lowest_set_bit (144 samples, 0.02%)</title><rect x="98.2306%" y="309" width="0.0235%" height="15" fill="rgb(253,5,41)" fg:x="601008" fg:w="144"/><text x="98.4806%" y="319.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::bitmask::impl$3::next (237 samples, 0.04%)</title><rect x="98.2162%" y="325" width="0.0387%" height="15" fill="rgb(247,181,11)" fg:x="600920" fg:w="237"/><text x="98.4662%" y="335.50"></text></g><g><title>rust_parser.exe`core::cmp::impls::impl$24::eq (188 samples, 0.03%)</title><rect x="98.2752%" y="277" width="0.0307%" height="15" fill="rgb(222,223,25)" fg:x="601281" fg:w="188"/><text x="98.5252%" y="287.50"></text></g><g><title>rust_parser.exe`hashbrown::map::equivalent_key::closure$0&lt;u32,u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt; &gt;(hashbrown::map::equivalent_key::closure_env$0&lt;u32,u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt; &gt;*, tuple$&lt;u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$ (276 samples, 0.05%)</title><rect x="98.2613%" y="309" width="0.0451%" height="15" fill="rgb(214,198,28)" fg:x="601196" fg:w="276"/><text x="98.5113%" y="319.50"></text></g><g><title>rust_parser.exe`hashbrown::impl$0::equivalent&lt;u32,u32&gt; (238 samples, 0.04%)</title><rect x="98.2675%" y="293" width="0.0389%" height="15" fill="rgb(230,46,43)" fg:x="601234" fg:w="238"/><text x="98.5175%" y="303.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::Bucket&lt;tuple$&lt;u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt; &gt; &gt;::from_base_index&lt;tuple$&lt;u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt; &gt; &gt;(core::ptr::non_null::NonNull&lt;tuple$&lt;u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$ (73 samples, 0.01%)</title><rect x="98.3165%" y="293" width="0.0119%" height="15" fill="rgb(233,65,53)" fg:x="601534" fg:w="73"/><text x="98.5665%" y="303.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::impl$7::find::closure$0&lt;tuple$&lt;u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0&lt;u32,u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt; &gt; &gt;(hashbrown::raw::impl$7::find::closure_env$0&lt;tuple$&lt;u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0&lt;u32,u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$ (440 samples, 0.07%)</title><rect x="98.2574%" y="325" width="0.0719%" height="15" fill="rgb(221,121,27)" fg:x="601172" fg:w="440"/><text x="98.5074%" y="335.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::RawTable&lt;tuple$&lt;u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::bucket (140 samples, 0.02%)</title><rect x="98.3064%" y="309" width="0.0229%" height="15" fill="rgb(247,70,47)" fg:x="601472" fg:w="140"/><text x="98.5564%" y="319.50"></text></g><g><title>rust_parser.exe`core::core_arch::x86::sse2::_mm_cmpeq_epi8 (91 samples, 0.01%)</title><rect x="98.3482%" y="309" width="0.0149%" height="15" fill="rgb(228,85,35)" fg:x="601728" fg:w="91"/><text x="98.5982%" y="319.50"></text></g><g><title>rust_parser.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (207 samples, 0.03%)</title><rect x="98.3631%" y="309" width="0.0338%" height="15" fill="rgb(209,50,18)" fg:x="601819" fg:w="207"/><text x="98.6131%" y="319.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::sse2::Group::match_byte (550 samples, 0.09%)</title><rect x="98.3293%" y="325" width="0.0899%" height="15" fill="rgb(250,19,35)" fg:x="601612" fg:w="550"/><text x="98.5793%" y="335.50"></text></g><g><title>rust_parser.exe`core::core_arch::x86::sse2::_mm_set1_epi8 (136 samples, 0.02%)</title><rect x="98.3970%" y="309" width="0.0222%" height="15" fill="rgb(253,107,29)" fg:x="602026" fg:w="136"/><text x="98.6470%" y="319.50"></text></g><g><title>rust_parser.exe`core::core_arch::x86::sse2::_mm_set_epi8 (121 samples, 0.02%)</title><rect x="98.3994%" y="293" width="0.0198%" height="15" fill="rgb(252,179,29)" fg:x="602041" fg:w="121"/><text x="98.6494%" y="303.50"></text></g><g><title>rust_parser.exe`rust_parser::print_dbc_signals(std::collections::hash::map::HashMap&lt;u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$ (306,730 samples, 50.13%)</title><rect x="48.3017%" y="437" width="50.1329%" height="15" fill="rgb(238,194,6)" fg:x="295526" fg:w="306730"/><text x="48.5517%" y="447.50">rust_parser.exe`rust_parser::print_dbc_signals(std::collections::hash::map::HashMa..</text></g><g><title>rust_parser.exe`std::collections::hash::map::HashMap&lt;u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt;,std::collections::hash::map::RandomState&gt;::get&lt;u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt;,std::collections::hash::map::RandomState,u32&gt; (3,934 samples, 0.64%)</title><rect x="97.7916%" y="421" width="0.6430%" height="15" fill="rgb(238,164,29)" fg:x="598322" fg:w="3934"/><text x="98.0416%" y="431.50"></text></g><g><title>rust_parser.exe`hashbrown::map::HashMap&lt;u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get&lt;u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global,u32&gt; (3,913 samples, 0.64%)</title><rect x="97.7950%" y="405" width="0.6396%" height="15" fill="rgb(224,25,9)" fg:x="598343" fg:w="3913"/><text x="98.0450%" y="415.50"></text></g><g><title>rust_parser.exe`hashbrown::map::HashMap&lt;u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get_inner (3,879 samples, 0.63%)</title><rect x="97.8005%" y="389" width="0.6340%" height="15" fill="rgb(244,153,23)" fg:x="598377" fg:w="3879"/><text x="98.0505%" y="399.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::RawTable&lt;tuple$&lt;u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::get&lt;tuple$&lt;u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0&lt;u32,u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt; &gt; &gt;(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;u32,u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$ (2,007 samples, 0.33%)</title><rect x="98.1065%" y="373" width="0.3280%" height="15" fill="rgb(212,203,14)" fg:x="600249" fg:w="2007"/><text x="98.3565%" y="383.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::RawTable&lt;tuple$&lt;u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global&gt;::find&lt;tuple$&lt;u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt; &gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0&lt;u32,u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$&lt;str$&gt; &gt; &gt; &gt;(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;u32,u32,tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;can_dbc::Signal,alloc::alloc::Global&gt;,ref$ (1,928 samples, 0.32%)</title><rect x="98.1194%" y="357" width="0.3151%" height="15" fill="rgb(220,164,20)" fg:x="600328" fg:w="1928"/><text x="98.3694%" y="367.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1,846 samples, 0.30%)</title><rect x="98.1328%" y="341" width="0.3017%" height="15" fill="rgb(222,203,48)" fg:x="600410" fg:w="1846"/><text x="98.3828%" y="351.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::sse2::Group::match_empty (94 samples, 0.02%)</title><rect x="98.4192%" y="325" width="0.0154%" height="15" fill="rgb(215,159,22)" fg:x="602162" fg:w="94"/><text x="98.6692%" y="335.50"></text></g><g><title>rust_parser.exe`hashbrown::raw::sse2::Group::match_byte (86 samples, 0.01%)</title><rect x="98.4205%" y="309" width="0.0141%" height="15" fill="rgb(216,183,47)" fg:x="602170" fg:w="86"/><text x="98.6705%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::string::String::new (92 samples, 0.02%)</title><rect x="98.4684%" y="421" width="0.0150%" height="15" fill="rgb(229,195,25)" fg:x="602463" fg:w="92"/><text x="98.7184%" y="431.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (96 samples, 0.02%)</title><rect x="98.5284%" y="389" width="0.0157%" height="15" fill="rgb(224,132,51)" fg:x="602830" fg:w="96"/><text x="98.7784%" y="399.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (73 samples, 0.01%)</title><rect x="98.5321%" y="373" width="0.0119%" height="15" fill="rgb(240,63,7)" fg:x="602853" fg:w="73"/><text x="98.7821%" y="383.50"></text></g><g><title>rust_parser.exe`core::ptr::slice_from_raw_parts (67 samples, 0.01%)</title><rect x="98.5331%" y="357" width="0.0110%" height="15" fill="rgb(249,182,41)" fg:x="602859" fg:w="67"/><text x="98.7831%" y="367.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::cast (67 samples, 0.01%)</title><rect x="98.5331%" y="341" width="0.0110%" height="15" fill="rgb(243,47,26)" fg:x="602859" fg:w="67"/><text x="98.7831%" y="351.50"></text></g><g><title>rust_parser.exe`core::str::impl$0::as_bytes(ref$ (97 samples, 0.02%)</title><rect x="98.5493%" y="389" width="0.0159%" height="15" fill="rgb(233,48,2)" fg:x="602958" fg:w="97"/><text x="98.7993%" y="399.50"></text></g><g><title>rust_parser.exe`core::slice::iter::Iter&lt;u8&gt;::new(ref$&lt;slice2$ (88 samples, 0.01%)</title><rect x="98.5508%" y="373" width="0.0144%" height="15" fill="rgb(244,165,34)" fg:x="602967" fg:w="88"/><text x="98.8008%" y="383.50"></text></g><g><title>rust_parser.exe`core::option::impl$40::branch(enum2$&lt;core::option::Option&lt;ref$ (78 samples, 0.01%)</title><rect x="98.6014%" y="357" width="0.0127%" height="15" fill="rgb(207,89,7)" fg:x="603277" fg:w="78"/><text x="98.8514%" y="367.50"></text></g><g><title>rust_parser.exe`core::slice::iter::impl$182::next_back&lt;u8&gt;(core::slice::iter::Iter (387 samples, 0.06%)</title><rect x="98.6142%" y="357" width="0.0633%" height="15" fill="rgb(244,117,36)" fg:x="603355" fg:w="387"/><text x="98.8642%" y="367.50"></text></g><g><title>rust_parser.exe`core::slice::iter::Iter&lt;u8&gt;::pre_dec_end (148 samples, 0.02%)</title><rect x="98.6532%" y="341" width="0.0242%" height="15" fill="rgb(226,144,34)" fg:x="603594" fg:w="148"/><text x="98.9032%" y="351.50"></text></g><g><title>rust_parser.exe`core::str::validations::next_code_point_reverse&lt;core::slice::iter::Iter&lt;u8&gt; &gt;(core::slice::iter::Iter (686 samples, 0.11%)</title><rect x="98.5677%" y="373" width="0.1121%" height="15" fill="rgb(213,23,19)" fg:x="603071" fg:w="686"/><text x="98.8177%" y="383.50"></text></g><g><title>rust_parser.exe`core::iter::adapters::rev::impl$1::next(core::iter::adapters::rev::Rev (1,110 samples, 0.18%)</title><rect x="98.5112%" y="405" width="0.1814%" height="15" fill="rgb(217,75,12)" fg:x="602725" fg:w="1110"/><text x="98.7612%" y="415.50"></text></g><g><title>rust_parser.exe`core::str::iter::impl$2::next_back (780 samples, 0.13%)</title><rect x="98.5651%" y="389" width="0.1275%" height="15" fill="rgb(224,159,17)" fg:x="603055" fg:w="780"/><text x="98.8151%" y="399.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::option::Option&lt;u32&gt; &gt;::map(enum2$&lt;core::option::Option (78 samples, 0.01%)</title><rect x="98.6799%" y="373" width="0.0127%" height="15" fill="rgb(217,118,1)" fg:x="603757" fg:w="78"/><text x="98.9299%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::string::String::pop (1,288 samples, 0.21%)</title><rect x="98.4834%" y="421" width="0.2105%" height="15" fill="rgb(232,180,48)" fg:x="602555" fg:w="1288"/><text x="98.7334%" y="431.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (133 samples, 0.02%)</title><rect x="98.6941%" y="405" width="0.0217%" height="15" fill="rgb(230,27,33)" fg:x="603844" fg:w="133"/><text x="98.9441%" y="415.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (105 samples, 0.02%)</title><rect x="98.6987%" y="389" width="0.0172%" height="15" fill="rgb(205,31,21)" fg:x="603872" fg:w="105"/><text x="98.9487%" y="399.50"></text></g><g><title>rust_parser.exe`core::ptr::slice_from_raw_parts (87 samples, 0.01%)</title><rect x="98.7016%" y="373" width="0.0142%" height="15" fill="rgb(253,59,4)" fg:x="603890" fg:w="87"/><text x="98.9516%" y="383.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::cast (87 samples, 0.01%)</title><rect x="98.7016%" y="357" width="0.0142%" height="15" fill="rgb(224,201,9)" fg:x="603890" fg:w="87"/><text x="98.9516%" y="367.50"></text></g><g><title>rust_parser.exe`core::char::methods::encode_utf8_raw(unsigned int, ref_mut$&lt;slice2$ (498 samples, 0.08%)</title><rect x="98.7358%" y="373" width="0.0814%" height="15" fill="rgb(229,206,30)" fg:x="604099" fg:w="498"/><text x="98.9858%" y="383.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$4::index_mut&lt;u8&gt;(core::ops::range::Range&lt;usize&gt;, ref_mut$&lt;slice2$ (169 samples, 0.03%)</title><rect x="98.7895%" y="357" width="0.0276%" height="15" fill="rgb(212,67,47)" fg:x="604428" fg:w="169"/><text x="99.0395%" y="367.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$4::get_unchecked_mut(core::ops::range::Range&lt;usize&gt;, ptr_mut$&lt;slice2$ (80 samples, 0.01%)</title><rect x="98.8041%" y="341" width="0.0131%" height="15" fill="rgb(211,96,50)" fg:x="604517" fg:w="80"/><text x="99.0541%" y="351.50"></text></g><g><title>rust_parser.exe`core::ptr::mut_ptr::impl$1::as_mut_ptr(ptr_mut$&lt;slice2$ (75 samples, 0.01%)</title><rect x="98.8049%" y="325" width="0.0123%" height="15" fill="rgb(252,114,18)" fg:x="604522" fg:w="75"/><text x="99.0549%" y="335.50"></text></g><g><title>rust_parser.exe`core::ptr::mut_ptr::impl$0::cast (63 samples, 0.01%)</title><rect x="98.8069%" y="309" width="0.0103%" height="15" fill="rgb(223,58,37)" fg:x="604534" fg:w="63"/><text x="99.0569%" y="319.50"></text></g><g><title>rust_parser.exe`core::slice::cmp::impl$5::equal&lt;u8,u8&gt;(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (228 samples, 0.04%)</title><rect x="98.8626%" y="357" width="0.0373%" height="15" fill="rgb(237,70,4)" fg:x="604875" fg:w="228"/><text x="99.1126%" y="367.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$1::as_ptr(ptr_const$&lt;slice2$ (110 samples, 0.02%)</title><rect x="98.9123%" y="293" width="0.0180%" height="15" fill="rgb(244,85,46)" fg:x="605179" fg:w="110"/><text x="99.1623%" y="303.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::cast (99 samples, 0.02%)</title><rect x="98.9141%" y="277" width="0.0162%" height="15" fill="rgb(223,39,52)" fg:x="605190" fg:w="99"/><text x="99.1641%" y="287.50"></text></g><g><title>rust_parser.exe`core::slice::impl$0::ends_with&lt;u8&gt;(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (739 samples, 0.12%)</title><rect x="98.8172%" y="373" width="0.1208%" height="15" fill="rgb(218,200,14)" fg:x="604597" fg:w="739"/><text x="99.0672%" y="383.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::RangeFrom (233 samples, 0.04%)</title><rect x="98.8999%" y="357" width="0.0381%" height="15" fill="rgb(208,171,16)" fg:x="605103" fg:w="233"/><text x="99.1499%" y="367.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$6::index(core::ops::range::RangeFrom&lt;usize&gt;, ref$&lt;slice2$ (177 samples, 0.03%)</title><rect x="98.9090%" y="341" width="0.0289%" height="15" fill="rgb(234,200,18)" fg:x="605159" fg:w="177"/><text x="99.1590%" y="351.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$6::get_unchecked(core::ops::range::RangeFrom&lt;usize&gt;, ptr_const$&lt;slice2$ (170 samples, 0.03%)</title><rect x="98.9102%" y="325" width="0.0278%" height="15" fill="rgb(228,45,11)" fg:x="605166" fg:w="170"/><text x="99.1602%" y="335.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$1::len(ptr_const$&lt;slice2$ (170 samples, 0.03%)</title><rect x="98.9102%" y="309" width="0.0278%" height="15" fill="rgb(237,182,11)" fg:x="605166" fg:w="170"/><text x="99.1602%" y="319.50"></text></g><g><title>rust_parser.exe`core::str::impl$0::ends_with(ref$ (1,499 samples, 0.25%)</title><rect x="98.6939%" y="421" width="0.2450%" height="15" fill="rgb(241,175,49)" fg:x="603843" fg:w="1499"/><text x="98.9439%" y="431.50"></text></g><g><title>rust_parser.exe`core::str::pattern::impl$3::is_suffix_of(char32_t, ref$ (1,365 samples, 0.22%)</title><rect x="98.7158%" y="405" width="0.2231%" height="15" fill="rgb(247,38,35)" fg:x="603977" fg:w="1365"/><text x="98.9658%" y="415.50"></text></g><g><title>rust_parser.exe`core::char::methods::impl$0::encode_utf8(char32_t, ref_mut$&lt;slice2$ (1,348 samples, 0.22%)</title><rect x="98.7186%" y="389" width="0.2203%" height="15" fill="rgb(228,39,49)" fg:x="603994" fg:w="1348"/><text x="98.9686%" y="399.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$12::index&lt;u8,core::ops::range::RangeFrom&lt;usize&gt;,alloc::alloc::Global&gt;(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::ops::range::RangeFrom (203 samples, 0.03%)</title><rect x="98.9682%" y="389" width="0.0332%" height="15" fill="rgb(226,101,26)" fg:x="605521" fg:w="203"/><text x="99.2182%" y="399.50"></text></g><g><title>rust_parser.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (158 samples, 0.03%)</title><rect x="98.9755%" y="373" width="0.0258%" height="15" fill="rgb(206,141,19)" fg:x="605566" fg:w="158"/><text x="99.2255%" y="383.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$6::index&lt;u8&gt;(core::ops::range::RangeFrom&lt;usize&gt;, ref$&lt;slice2$ (116 samples, 0.02%)</title><rect x="98.9824%" y="357" width="0.0190%" height="15" fill="rgb(211,200,13)" fg:x="605608" fg:w="116"/><text x="99.2324%" y="367.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$6::get_unchecked(core::ops::range::RangeFrom&lt;usize&gt;, ptr_const$&lt;slice2$ (77 samples, 0.01%)</title><rect x="98.9888%" y="341" width="0.0126%" height="15" fill="rgb(241,121,6)" fg:x="605647" fg:w="77"/><text x="99.2388%" y="351.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$1::len(ptr_const$&lt;slice2$ (77 samples, 0.01%)</title><rect x="98.9888%" y="325" width="0.0126%" height="15" fill="rgb(234,221,29)" fg:x="605647" fg:w="77"/><text x="99.2388%" y="335.50"></text></g><g><title>rust_parser.exe`core::ptr::drop_in_place&lt;std::io::Guard&gt; (166 samples, 0.03%)</title><rect x="99.0014%" y="389" width="0.0271%" height="15" fill="rgb(229,136,5)" fg:x="605724" fg:w="166"/><text x="99.2514%" y="399.50"></text></g><g><title>rust_parser.exe`std::io::impl$0::drop (72 samples, 0.01%)</title><rect x="99.0167%" y="373" width="0.0118%" height="15" fill="rgb(238,36,11)" fg:x="605818" fg:w="72"/><text x="99.2667%" y="383.50"></text></g><g><title>rust_parser.exe`core::str::converts::from_utf8 (196 samples, 0.03%)</title><rect x="99.0285%" y="389" width="0.0320%" height="15" fill="rgb(251,55,41)" fg:x="605890" fg:w="196"/><text x="99.2785%" y="399.50"></text></g><g><title>rust_parser.exe`core::str::validations::run_utf8_validation (158 samples, 0.03%)</title><rect x="99.0347%" y="373" width="0.0258%" height="15" fill="rgb(242,34,40)" fg:x="605928" fg:w="158"/><text x="99.2847%" y="383.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (116 samples, 0.02%)</title><rect x="99.1171%" y="309" width="0.0190%" height="15" fill="rgb(215,42,17)" fg:x="606432" fg:w="116"/><text x="99.3671%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::set_ptr_and_cap&lt;u8,alloc::alloc::Global&gt;(core::ptr::non_null::NonNull&lt;slice2$ (112 samples, 0.02%)</title><rect x="99.1810%" y="245" width="0.0183%" height="15" fill="rgb(207,44,46)" fg:x="606823" fg:w="112"/><text x="99.4310%" y="255.50"></text></g><g><title>rust_parser.exe`core::alloc::layout::Layout::array (217 samples, 0.04%)</title><rect x="99.1993%" y="245" width="0.0355%" height="15" fill="rgb(211,206,28)" fg:x="606935" fg:w="217"/><text x="99.4493%" y="255.50"></text></g><g><title>rust_parser.exe`core::alloc::layout::impl$0::array::inner (210 samples, 0.03%)</title><rect x="99.2004%" y="229" width="0.0343%" height="15" fill="rgb(237,167,16)" fg:x="606942" fg:w="210"/><text x="99.4504%" y="239.50"></text></g><g><title>rust_parser.exe`core::cmp::max (440 samples, 0.07%)</title><rect x="99.2348%" y="245" width="0.0719%" height="15" fill="rgb(233,66,6)" fg:x="607152" fg:w="440"/><text x="99.4848%" y="255.50"></text></g><g><title>rust_parser.exe`core::cmp::Ord::max (438 samples, 0.07%)</title><rect x="99.2351%" y="229" width="0.0716%" height="15" fill="rgb(246,123,29)" fg:x="607154" fg:w="438"/><text x="99.4851%" y="239.50"></text></g><g><title>rust_parser.exe`core::cmp::max_by&lt;usize,core::cmp::Ordering (*)(ref$&lt;usize&gt;,ref$&lt;usize&gt;)&gt;(unsigned long long, unsigned long long, core::cmp::Ordering (*) (419 samples, 0.07%)</title><rect x="99.2382%" y="213" width="0.0685%" height="15" fill="rgb(209,62,40)" fg:x="607173" fg:w="419"/><text x="99.4882%" y="223.50"></text></g><g><title>rust_parser.exe`core::ops::function::FnOnce::call_once&lt;core::cmp::Ordering (*)(ref$&lt;usize&gt;,ref$&lt;usize&gt;),tuple$&lt;ref$&lt;usize&gt;,ref$&lt;usize&gt; &gt; &gt;(core::cmp::Ordering (*) (122 samples, 0.02%)</title><rect x="99.2867%" y="197" width="0.0199%" height="15" fill="rgb(218,4,25)" fg:x="607470" fg:w="122"/><text x="99.5367%" y="207.50"></text></g><g><title>rust_parser.exe`core::cmp::impls::impl$55::cmp (71 samples, 0.01%)</title><rect x="99.2951%" y="181" width="0.0116%" height="15" fill="rgb(253,91,49)" fg:x="607521" fg:w="71"/><text x="99.5451%" y="191.50"></text></g><g><title>rust_parser.exe`core::num::impl$11::checked_add (134 samples, 0.02%)</title><rect x="99.3067%" y="245" width="0.0219%" height="15" fill="rgb(228,155,29)" fg:x="607592" fg:w="134"/><text x="99.5567%" y="255.50"></text></g><g><title>`0x7FF87490D19A (91 samples, 0.01%)</title><rect x="99.4407%" y="149" width="0.0149%" height="15" fill="rgb(243,57,37)" fg:x="608412" fg:w="91"/><text x="99.6907%" y="159.50"></text></g><g><title>`0x7FF87490D1D7 (99 samples, 0.02%)</title><rect x="99.4588%" y="149" width="0.0162%" height="15" fill="rgb(244,167,17)" fg:x="608523" fg:w="99"/><text x="99.7088%" y="159.50"></text></g><g><title>`0x7FF87490C7AA (534 samples, 0.09%)</title><rect x="99.3971%" y="165" width="0.0873%" height="15" fill="rgb(207,181,38)" fg:x="608145" fg:w="534"/><text x="99.6471%" y="175.50"></text></g><g><title>rust_parser.exe`alloc::alloc::alloc (761 samples, 0.12%)</title><rect x="99.3742%" y="181" width="0.1244%" height="15" fill="rgb(211,8,23)" fg:x="608005" fg:w="761"/><text x="99.6242%" y="191.50"></text></g><g><title>rust_parser.exe`alloc::alloc::impl$1::allocate (993 samples, 0.16%)</title><rect x="99.3536%" y="213" width="0.1623%" height="15" fill="rgb(235,11,44)" fg:x="607879" fg:w="993"/><text x="99.6036%" y="223.50"></text></g><g><title>rust_parser.exe`alloc::alloc::Global::alloc_impl (940 samples, 0.15%)</title><rect x="99.3622%" y="197" width="0.1536%" height="15" fill="rgb(248,18,52)" fg:x="607932" fg:w="940"/><text x="99.6122%" y="207.50"></text></g><g><title>rust_parser.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,enum2$ (151 samples, 0.02%)</title><rect x="99.5224%" y="213" width="0.0247%" height="15" fill="rgb(208,4,7)" fg:x="608912" fg:w="151"/><text x="99.7724%" y="223.50"></text></g><g><title>rust_parser.exe`enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;::map_err&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError,enum2$&lt;alloc::collections::TryReserveErrorKind&gt;,alloc::raw_vec::finish_grow::closure_env$0&lt;alloc::alloc::Global&gt; &gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$0 (118 samples, 0.02%)</title><rect x="99.5278%" y="197" width="0.0193%" height="15" fill="rgb(240,17,39)" fg:x="608945" fg:w="118"/><text x="99.7778%" y="207.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_amortized&lt;u8,alloc::alloc::Global&gt; (2,485 samples, 0.41%)</title><rect x="99.1539%" y="261" width="0.4062%" height="15" fill="rgb(207,170,3)" fg:x="606657" fg:w="2485"/><text x="99.4039%" y="271.50"></text></g><g><title>rust_parser.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1,416 samples, 0.23%)</title><rect x="99.3286%" y="245" width="0.2314%" height="15" fill="rgb(236,100,52)" fg:x="607726" fg:w="1416"/><text x="99.5786%" y="255.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1,389 samples, 0.23%)</title><rect x="99.3330%" y="229" width="0.2270%" height="15" fill="rgb(246,78,51)" fg:x="607753" fg:w="1389"/><text x="99.5830%" y="239.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::append_elements(ptr_const$&lt;slice2$ (2,796 samples, 0.46%)</title><rect x="99.1127%" y="325" width="0.4570%" height="15" fill="rgb(211,17,15)" fg:x="606405" fg:w="2796"/><text x="99.3627%" y="335.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::reserve&lt;u8,alloc::alloc::Global&gt; (2,646 samples, 0.43%)</title><rect x="99.1372%" y="309" width="0.4325%" height="15" fill="rgb(209,59,46)" fg:x="606555" fg:w="2646"/><text x="99.3872%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::reserve (2,613 samples, 0.43%)</title><rect x="99.1426%" y="293" width="0.4271%" height="15" fill="rgb(210,92,25)" fg:x="606588" fg:w="2613"/><text x="99.3926%" y="303.50"></text></g><g><title>rust_parser.exe`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle&lt;u8,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (2,562 samples, 0.42%)</title><rect x="99.1509%" y="277" width="0.4187%" height="15" fill="rgb(238,174,52)" fg:x="606639" fg:w="2562"/><text x="99.4009%" y="287.50"></text></g><g><title>rust_parser.exe`alloc::vec::spec_extend::impl$4::spec_extend&lt;u8,alloc::alloc::Global&gt;(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::slice::iter::Iter (2,948 samples, 0.48%)</title><rect x="99.1086%" y="341" width="0.4818%" height="15" fill="rgb(230,73,7)" fg:x="606380" fg:w="2948"/><text x="99.3586%" y="351.50"></text></g><g><title>rust_parser.exe`core::slice::iter::Iter&lt;u8&gt;::as_slice (127 samples, 0.02%)</title><rect x="99.5697%" y="325" width="0.0208%" height="15" fill="rgb(243,124,40)" fg:x="609201" fg:w="127"/><text x="99.8197%" y="335.50"></text></g><g><title>rust_parser.exe`core::slice::iter::Iter&lt;u8&gt;::make_slice (123 samples, 0.02%)</title><rect x="99.5703%" y="309" width="0.0201%" height="15" fill="rgb(244,170,11)" fg:x="609205" fg:w="123"/><text x="99.8203%" y="319.50"></text></g><g><title>rust_parser.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::extend_from_slice&lt;u8,alloc::alloc::Global&gt;(ref$&lt;slice2$ (3,068 samples, 0.50%)</title><rect x="99.0971%" y="357" width="0.5014%" height="15" fill="rgb(207,114,54)" fg:x="606310" fg:w="3068"/><text x="99.3471%" y="367.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::RangeToInclusive (268 samples, 0.04%)</title><rect x="99.5986%" y="357" width="0.0438%" height="15" fill="rgb(205,42,20)" fg:x="609378" fg:w="268"/><text x="99.8486%" y="367.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$9::index(core::ops::range::RangeToInclusive&lt;usize&gt;, ref$&lt;slice2$ (268 samples, 0.04%)</title><rect x="99.5986%" y="341" width="0.0438%" height="15" fill="rgb(230,30,28)" fg:x="609378" fg:w="268"/><text x="99.8486%" y="351.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$8::index&lt;u8&gt;(core::ops::range::RangeInclusive&lt;usize&gt;, ref$&lt;slice2$ (242 samples, 0.04%)</title><rect x="99.6028%" y="325" width="0.0396%" height="15" fill="rgb(205,73,54)" fg:x="609404" fg:w="242"/><text x="99.8528%" y="335.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$4::index&lt;u8&gt;(core::ops::range::Range&lt;usize&gt;, ref$&lt;slice2$ (106 samples, 0.02%)</title><rect x="99.6251%" y="309" width="0.0173%" height="15" fill="rgb(254,227,23)" fg:x="609540" fg:w="106"/><text x="99.8751%" y="319.50"></text></g><g><title>rust_parser.exe`std::io::buffered::bufreader::impl$4::consume&lt;std::fs::File&gt;(std::io::buffered::bufreader::BufReader (210 samples, 0.03%)</title><rect x="99.6424%" y="357" width="0.0343%" height="15" fill="rgb(228,202,34)" fg:x="609646" fg:w="210"/><text x="99.8924%" y="367.50"></text></g><g><title>rust_parser.exe`std::io::buffered::bufreader::buffer::Buffer::consume (179 samples, 0.03%)</title><rect x="99.6475%" y="341" width="0.0293%" height="15" fill="rgb(222,225,37)" fg:x="609677" fg:w="179"/><text x="99.8975%" y="351.50"></text></g><g><title>rust_parser.exe`core::cmp::min (169 samples, 0.03%)</title><rect x="99.6491%" y="325" width="0.0276%" height="15" fill="rgb(221,14,54)" fg:x="609687" fg:w="169"/><text x="99.8991%" y="335.50"></text></g><g><title>rust_parser.exe`core::cmp::Ord::min (169 samples, 0.03%)</title><rect x="99.6491%" y="309" width="0.0276%" height="15" fill="rgb(254,102,2)" fg:x="609687" fg:w="169"/><text x="99.8991%" y="319.50"></text></g><g><title>rust_parser.exe`core::cmp::min_by&lt;usize,core::cmp::Ordering (*)(ref$&lt;usize&gt;,ref$&lt;usize&gt;)&gt;(unsigned long long, unsigned long long, core::cmp::Ordering (*) (168 samples, 0.03%)</title><rect x="99.6493%" y="293" width="0.0275%" height="15" fill="rgb(232,104,17)" fg:x="609688" fg:w="168"/><text x="99.8993%" y="303.50"></text></g><g><title>rust_parser.exe`std::io::buffered::bufreader::buffer::Buffer::buffer (98 samples, 0.02%)</title><rect x="99.6934%" y="325" width="0.0160%" height="15" fill="rgb(250,220,14)" fg:x="609958" fg:w="98"/><text x="99.9434%" y="335.50"></text></g><g><title>rust_parser.exe`core::slice::impl$0::get_unchecked(ref$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;u8&gt; &gt; &gt;, core::ops::range::Range (79 samples, 0.01%)</title><rect x="99.6965%" y="309" width="0.0129%" height="15" fill="rgb(241,158,9)" fg:x="609977" fg:w="79"/><text x="99.9465%" y="319.50"></text></g><g><title>rust_parser.exe`core::slice::index::impl$4::get_unchecked(core::ops::range::Range&lt;usize&gt;, ptr_const$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit (79 samples, 0.01%)</title><rect x="99.6965%" y="293" width="0.0129%" height="15" fill="rgb(246,9,43)" fg:x="609977" fg:w="79"/><text x="99.9465%" y="303.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$1::as_ptr(ptr_const$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit (74 samples, 0.01%)</title><rect x="99.6973%" y="277" width="0.0121%" height="15" fill="rgb(206,73,33)" fg:x="609982" fg:w="74"/><text x="99.9473%" y="287.50"></text></g><g><title>rust_parser.exe`core::ptr::const_ptr::impl$0::cast(core::mem::maybe_uninit::MaybeUninit (68 samples, 0.01%)</title><rect x="99.6983%" y="261" width="0.0111%" height="15" fill="rgb(222,79,8)" fg:x="609988" fg:w="68"/><text x="99.9483%" y="271.50"></text></g><g><title>rust_parser.exe`std::io::impls::impl$0::read_buf&lt;std::fs::File&gt; (1,121 samples, 0.18%)</title><rect x="99.7094%" y="325" width="0.1832%" height="15" fill="rgb(234,8,54)" fg:x="610056" fg:w="1121"/><text x="99.9594%" y="335.50"></text></g><g><title>rust_parser.exe`std::sys::windows::handle::Handle::read_buf (1,119 samples, 0.18%)</title><rect x="99.7097%" y="309" width="0.1829%" height="15" fill="rgb(209,134,38)" fg:x="610058" fg:w="1119"/><text x="99.9597%" y="319.50"></text></g><g><title>rust_parser.exe`std::sys::windows::handle::Handle::synchronous_read (1,115 samples, 0.18%)</title><rect x="99.7104%" y="293" width="0.1822%" height="15" fill="rgb(230,127,29)" fg:x="610062" fg:w="1115"/><text x="99.9604%" y="303.50"></text></g><g><title>`0x7FF87496F4B4 (1,103 samples, 0.18%)</title><rect x="99.7123%" y="277" width="0.1803%" height="15" fill="rgb(242,44,41)" fg:x="610074" fg:w="1103"/><text x="99.9623%" y="287.50"></text></g><g><title>rust_parser.exe`std::io::buffered::bufreader::impl$4::fill_buf&lt;std::fs::File&gt;(std::io::buffered::bufreader::BufReader (1,323 samples, 0.22%)</title><rect x="99.6767%" y="357" width="0.2162%" height="15" fill="rgb(222,56,43)" fg:x="609856" fg:w="1323"/><text x="99.9267%" y="367.50"></text></g><g><title>rust_parser.exe`std::io::buffered::bufreader::buffer::Buffer::fill_buf&lt;ref_mut$&lt;std::fs::File&gt; &gt; (1,299 samples, 0.21%)</title><rect x="99.6806%" y="341" width="0.2123%" height="15" fill="rgb(238,39,47)" fg:x="609880" fg:w="1299"/><text x="99.9306%" y="351.50"></text></g><g><title>rust_parser.exe`core::slice::memchr::memchr_naive (285 samples, 0.05%)</title><rect x="99.9408%" y="309" width="0.0466%" height="15" fill="rgb(226,79,43)" fg:x="611472" fg:w="285"/><text x="100.1908%" y="319.50"></text></g><g><title>rust_parser.exe`core::slice::memchr::memchr_aligned (585 samples, 0.10%)</title><rect x="99.9000%" y="325" width="0.0956%" height="15" fill="rgb(242,105,53)" fg:x="611222" fg:w="585"/><text x="100.1500%" y="335.50"></text></g><g><title>rust_parser.exe`std::io::impl$26::next&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt;(std::io::Lines&lt;std::io::buffered::bufreader::BufReader (9,486 samples, 1.55%)</title><rect x="98.4453%" y="437" width="1.5504%" height="15" fill="rgb(251,132,46)" fg:x="602322" fg:w="9486"/><text x="98.6953%" y="447.50"></text></g><g><title>rust_parser.exe`std::io::BufRead::read_line&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt;(std::io::buffered::bufreader::BufReader (6,466 samples, 1.06%)</title><rect x="98.9389%" y="421" width="1.0568%" height="15" fill="rgb(231,77,14)" fg:x="605342" fg:w="6466"/><text x="99.1889%" y="431.50"></text></g><g><title>rust_parser.exe`std::io::append_to_string&lt;std::io::BufRead::read_line::closure_env$0&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt;(alloc::string::String*, std::io::BufRead::read_line::closure_env$0&lt;std::io::buffered::bufreader::BufReader (6,442 samples, 1.05%)</title><rect x="98.9429%" y="405" width="1.0529%" height="15" fill="rgb(240,135,9)" fg:x="605366" fg:w="6442"/><text x="99.1929%" y="415.50"></text></g><g><title>rust_parser.exe`std::io::BufRead::read_line::closure$0&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt;(std::io::BufRead::read_line::closure_env$0&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt;, alloc::vec::Vec (5,710 samples, 0.93%)</title><rect x="99.0625%" y="389" width="0.9333%" height="15" fill="rgb(248,109,14)" fg:x="606098" fg:w="5710"/><text x="99.3125%" y="399.50"></text></g><g><title>rust_parser.exe`std::io::read_until&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt;(std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;*, unsigned char, alloc::vec::Vec (5,682 samples, 0.93%)</title><rect x="99.0671%" y="373" width="0.9287%" height="15" fill="rgb(227,146,52)" fg:x="606126" fg:w="5682"/><text x="99.3171%" y="383.50"></text></g><g><title>rust_parser.exe`std::sys_common::memchr::memchr(unsigned char, ref$&lt;slice2$ (628 samples, 0.10%)</title><rect x="99.8931%" y="357" width="0.1026%" height="15" fill="rgb(232,54,3)" fg:x="611180" fg:w="628"/><text x="100.1431%" y="367.50"></text></g><g><title>rust_parser.exe`core::slice::memchr::memchr(unsigned char, ref$&lt;slice2$ (628 samples, 0.10%)</title><rect x="99.8931%" y="341" width="0.1026%" height="15" fill="rgb(229,201,43)" fg:x="611180" fg:w="628"/><text x="100.1431%" y="351.50"></text></g><g><title>`0x7FF87492AA78 (611,805 samples, 100.00%)</title><rect x="0.0007%" y="693" width="99.9953%" height="15" fill="rgb(252,161,33)" fg:x="4" fg:w="611805"/><text x="0.2507%" y="703.50">`0x7FF87492AA78</text></g><g><title>`0x7FF8731D257D (611,805 samples, 100.00%)</title><rect x="0.0007%" y="677" width="99.9953%" height="15" fill="rgb(226,146,40)" fg:x="4" fg:w="611805"/><text x="0.2507%" y="687.50">`0x7FF8731D257D</text></g><g><title>rust_parser.exe`__scrt_common_main_seh() (611,793 samples, 99.99%)</title><rect x="0.0026%" y="661" width="99.9933%" height="15" fill="rgb(219,47,25)" fg:x="16" fg:w="611793"/><text x="0.2526%" y="671.50">rust_parser.exe`__scrt_common_main_seh()</text></g><g><title>rust_parser.exe`invoke_main() (611,789 samples, 99.99%)</title><rect x="0.0033%" y="645" width="99.9926%" height="15" fill="rgb(250,135,13)" fg:x="20" fg:w="611789"/><text x="0.2533%" y="655.50">rust_parser.exe`invoke_main()</text></g><g><title>rust_parser.exe`main (611,789 samples, 99.99%)</title><rect x="0.0033%" y="629" width="99.9926%" height="15" fill="rgb(219,229,18)" fg:x="20" fg:w="611789"/><text x="0.2533%" y="639.50">rust_parser.exe`main</text></g><g><title>rust_parser.exe`std::rt::lang_start&lt;tuple$&lt;&gt; &gt;(void (*) (611,789 samples, 99.99%)</title><rect x="0.0033%" y="613" width="99.9926%" height="15" fill="rgb(217,152,27)" fg:x="20" fg:w="611789"/><text x="0.2533%" y="623.50">rust_parser.exe`std::rt::lang_start&lt;tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>rust_parser.exe`std::rt::lang_start_internal (611,789 samples, 99.99%)</title><rect x="0.0033%" y="597" width="99.9926%" height="15" fill="rgb(225,71,47)" fg:x="20" fg:w="611789"/><text x="0.2533%" y="607.50">rust_parser.exe`std::rt::lang_start_internal</text></g><g><title>rust_parser.exe`std::panic::catch_unwind (611,789 samples, 99.99%)</title><rect x="0.0033%" y="581" width="99.9926%" height="15" fill="rgb(220,139,14)" fg:x="20" fg:w="611789"/><text x="0.2533%" y="591.50">rust_parser.exe`std::panic::catch_unwind</text></g><g><title>rust_parser.exe`std::panicking::try (611,789 samples, 99.99%)</title><rect x="0.0033%" y="565" width="99.9926%" height="15" fill="rgb(247,54,32)" fg:x="20" fg:w="611789"/><text x="0.2533%" y="575.50">rust_parser.exe`std::panicking::try</text></g><g><title>rust_parser.exe`std::panicking::try::do_call (611,789 samples, 99.99%)</title><rect x="0.0033%" y="549" width="99.9926%" height="15" fill="rgb(252,131,39)" fg:x="20" fg:w="611789"/><text x="0.2533%" y="559.50">rust_parser.exe`std::panicking::try::do_call</text></g><g><title>rust_parser.exe`std::rt::lang_start_internal::closure$2 (611,789 samples, 99.99%)</title><rect x="0.0033%" y="533" width="99.9926%" height="15" fill="rgb(210,108,39)" fg:x="20" fg:w="611789"/><text x="0.2533%" y="543.50">rust_parser.exe`std::rt::lang_start_internal::closure$2</text></g><g><title>rust_parser.exe`std::panic::catch_unwind (611,789 samples, 99.99%)</title><rect x="0.0033%" y="517" width="99.9926%" height="15" fill="rgb(205,23,29)" fg:x="20" fg:w="611789"/><text x="0.2533%" y="527.50">rust_parser.exe`std::panic::catch_unwind</text></g><g><title>rust_parser.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (611,789 samples, 99.99%)</title><rect x="0.0033%" y="501" width="99.9926%" height="15" fill="rgb(246,139,46)" fg:x="20" fg:w="611789"/><text x="0.2533%" y="511.50">rust_parser.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>rust_parser.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (611,789 samples, 99.99%)</title><rect x="0.0033%" y="485" width="99.9926%" height="15" fill="rgb(250,81,26)" fg:x="20" fg:w="611789"/><text x="0.2533%" y="495.50">rust_parser.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>rust_parser.exe`core::ops::function::FnOnce::call_once&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (611,789 samples, 99.99%)</title><rect x="0.0033%" y="469" width="99.9926%" height="15" fill="rgb(214,104,7)" fg:x="20" fg:w="611789"/><text x="0.2533%" y="479.50">rust_parser.exe`core::ops::function::FnOnce::call_once&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>rust_parser.exe`rust_parser::main (611,789 samples, 99.99%)</title><rect x="0.0033%" y="453" width="99.9926%" height="15" fill="rgb(233,189,8)" fg:x="20" fg:w="611789"/><text x="0.2533%" y="463.50">rust_parser.exe`rust_parser::main</text></g><g><title>all (611,834 samples, 100%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(228,141,17)" fg:x="0" fg:w="611834"/><text x="0.2500%" y="719.50"></text></g></svg></svg>